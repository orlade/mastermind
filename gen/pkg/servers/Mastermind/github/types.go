// Code generated by sysl DO NOT EDIT.
package github

import (
	"time"

	"github.com/anz-bank/sysl-go/convert"
	"github.com/anz-bank/sysl-go/validator"

	"github.com/rickb777/date"
)

// Reference imports to suppress unused errors
var _ = time.Parse

// Reference imports to suppress unused errors
var _ = date.Parse

// _integration ...
type _integration struct {
	Client_id           *string                    `json:"client_id,omitempty"`
	Client_secret       *string                    `json:"client_secret,omitempty"`
	Created_at          convert.JSONTime           `json:"created_at"`
	Description         string                     `json:"description"`
	Events              []string                   `json:"events"`
	External_url        string                     `json:"external_url"`
	Html_url            string                     `json:"html_url"`
	ID                  int64                      `json:"id"`
	Installations_count *int64                     `json:"installations_count,omitempty"`
	Name                string                     `json:"name"`
	Node_id             string                     `json:"node_id"`
	Owner               EXTERNAL_integration_owner `json:"owner"`
	Pem                 *string                    `json:"pem,omitempty"`
	Permissions         _integration_permissions   `json:"permissions"`
	Slug                *string                    `json:"slug,omitempty"`
	Updated_at          convert.JSONTime           `json:"updated_at"`
	Webhook_secret      *string                    `json:"webhook_secret,omitempty"`
}

// _integration_permissions ...
type _integration_permissions struct {
	Checks      *string `json:"checks,omitempty"`
	Contents    *string `json:"contents,omitempty"`
	Deployments *string `json:"deployments,omitempty"`
	Issues      *string `json:"issues,omitempty"`
	Metadata    *string `json:"metadata,omitempty"`
}

// _interactionLimit ...
type _interactionLimit struct {
	Expires_at convert.JSONTime `json:"expires_at"`
	Limit      string           `json:"limit"`
	Origin     string           `json:"origin"`
}

// _issues_ok ...
type _issues_ok struct {
	Link  string  `json:"Link"`
	Issue []Issue `json:"issue"`
}

// _orgs__org__issues_ok ...
type _orgs__org__issues_ok struct {
	Link  string  `json:"Link"`
	Issue []Issue `json:"issue"`
}

// Repos__owner___repo__issues__issue_number__comments_ok ...
type Repos__owner___repo__issues__issue_number__comments_ok struct {
	Link         string       `json:"Link"`
	Location     string       `json:"Location"`
	IssueComment IssueComment `json:"issue-comment"`
}

// Repos__owner___repo__issues__issue_number__events_ok ...
type Repos__owner___repo__issues__issue_number__events_ok struct {
	Link               string               `json:"Link"`
	IssueEventForIssue []IssueEventForIssue `json:"issue-event-for-issue"`
}

// Repos__owner___repo__issues__issue_number__labels_ok ...
type Repos__owner___repo__issues__issue_number__labels_ok struct {
	Link  string  `json:"Link"`
	Label []Label `json:"label"`
}

// Repos__owner___repo__issues__issue_number__reactions_ok ...
type Repos__owner___repo__issues__issue_number__reactions_ok struct {
	Link     string     `json:"Link"`
	Reaction []Reaction `json:"reaction"`
}

// Repos__owner___repo__issues__issue_number__timeline_ok ...
type Repos__owner___repo__issues__issue_number__timeline_ok struct {
	Link               string               `json:"Link"`
	IssueEventForIssue []IssueEventForIssue `json:"issue-event-for-issue"`
}

// Repos__owner___repo__issues_comments__comment_id__reactions_ok ...
type Repos__owner___repo__issues_comments__comment_id__reactions_ok struct {
	Link     string     `json:"Link"`
	Reaction []Reaction `json:"reaction"`
}

// Repos__owner___repo__issues_comments_ok ...
type Repos__owner___repo__issues_comments_ok struct {
	Link         string         `json:"Link"`
	IssueComment []IssueComment `json:"issue-comment"`
}

// Repos__owner___repo__issues_events_ok ...
type Repos__owner___repo__issues_events_ok struct {
	Link       string       `json:"Link"`
	IssueEvent []IssueEvent `json:"issue-event"`
}

// Repos__owner___repo__issues_ok ...
type Repos__owner___repo__issues_ok []IssueSimple
//struct {
//	Link        string        `json:"Link"`
//	Location    string        `json:"Location"`
//	//Issue       Issue         `json:"issue"`
//	IssueSimple []IssueSimple `json:"issue-simple"`
//}

// Repos__owner___repo__keys_ok ...
type Repos__owner___repo__keys_ok struct {
	Link      string      `json:"Link"`
	Location  string      `json:"Location"`
	DeployKey []DeployKey `json:"deploy-key"`
}

// Repos__owner___repo__labels_ok ...
type Repos__owner___repo__labels_ok struct {
	Link     string `json:"Link"`
	Location string `json:"Location"`
	Label    Label  `json:"label"`
}

// ActionsBillingUsage ...
type ActionsBillingUsage struct {
	Included_minutes        *int64                                      `json:"included_minutes,omitempty"`
	Minutes_used_breakdown  *ActionsBillingUsage_minutes_used_breakdown `json:"minutes_used_breakdown,omitempty"`
	Total_minutes_used      *int64                                      `json:"total_minutes_used,omitempty"`
	Total_paid_minutes_used *int64                                      `json:"total_paid_minutes_used,omitempty"`
}

// ActionsBillingUsage_minutes_used_breakdown ...
type ActionsBillingUsage_minutes_used_breakdown struct {
	MACOS   *int64 `json:"MACOS,omitempty"`
	UBUNTU  *int64 `json:"UBUNTU,omitempty"`
	WINDOWS *int64 `json:"WINDOWS,omitempty"`
}

// ActionsEnterprisePermissions ...
type ActionsEnterprisePermissions struct {
	Allowed_actions            *AllowedActions       `json:"allowed_actions,omitempty"`
	Enabled_organizations      *EnabledOrganizations `json:"enabled_organizations,omitempty"`
	Selected_actions_url       *SelectedActionsURL   `json:"selected_actions_url,omitempty"`
	Selected_organizations_url *string               `json:"selected_organizations_url,omitempty"`
}

// ActionsOrganizationPermissions ...
type ActionsOrganizationPermissions struct {
	Allowed_actions           *AllowedActions      `json:"allowed_actions,omitempty"`
	Enabled_repositories      *EnabledRepositories `json:"enabled_repositories,omitempty"`
	Selected_actions_url      *SelectedActionsURL  `json:"selected_actions_url,omitempty"`
	Selected_repositories_url *string              `json:"selected_repositories_url,omitempty"`
}

// ActionsPublicKey ...
type ActionsPublicKey struct {
	Created_at *string `json:"created_at,omitempty"`
	ID         *int64  `json:"id,omitempty"`
	Key        string  `json:"key"`
	Key_id     string  `json:"key_id"`
	Title      *string `json:"title,omitempty"`
	URL        *string `json:"url,omitempty"`
}

// ActionsRepositoryPermissions ...
type ActionsRepositoryPermissions struct {
	Allowed_actions      *AllowedActions     `json:"allowed_actions,omitempty"`
	Enabled              *ActionsEnabled     `json:"enabled,omitempty"`
	Selected_actions_url *SelectedActionsURL `json:"selected_actions_url,omitempty"`
}

// ActionsSecret ...
type ActionsSecret struct {
	Created_at convert.JSONTime `json:"created_at"`
	Name       string           `json:"name"`
	Updated_at convert.JSONTime `json:"updated_at"`
}

// Actor ...
type Actor struct {
	Avatar_url    string  `json:"avatar_url"`
	Display_login *string `json:"display_login,omitempty"`
	Gravatar_id   string  `json:"gravatar_id"`
	ID            int64   `json:"id"`
	Login         string  `json:"login"`
	URL           string  `json:"url"`
}

// APIOverview ...
type APIOverview struct {
	API                                []string                          `json:"api,omitempty"`
	Git                                []string                          `json:"git,omitempty"`
	Github_services_sha                *string                           `json:"github_services_sha,omitempty"`
	Hooks                              []string                          `json:"hooks,omitempty"`
	Importer                           []string                          `json:"importer,omitempty"`
	Installed_version                  *string                           `json:"installed_version,omitempty"`
	Pages                              []string                          `json:"pages,omitempty"`
	Ssh_key_fingerprints               *APIOverview_ssh_key_fingerprints `json:"ssh_key_fingerprints,omitempty"`
	Verifiable_password_authentication bool                              `json:"verifiable_password_authentication"`
	Web                                []string                          `json:"web,omitempty"`
}

// APIOverview_ssh_key_fingerprints ...
type APIOverview_ssh_key_fingerprints struct {
	MD5_DSA    *string `json:"MD5_DSA,omitempty"`
	MD5_RSA    *string `json:"MD5_RSA,omitempty"`
	SHA256_DSA *string `json:"SHA256_DSA,omitempty"`
	SHA256_RSA *string `json:"SHA256_RSA,omitempty"`
}

// ApplicationGrant ...
type ApplicationGrant struct {
	App        ApplicationGrant_app            `json:"app"`
	Created_at convert.JSONTime                `json:"created_at"`
	ID         int64                           `json:"id"`
	Scopes     []string                        `json:"scopes"`
	Updated_at convert.JSONTime                `json:"updated_at"`
	URL        string                          `json:"url"`
	User       *EXTERNAL_applicationGrant_user `json:"user,omitempty"`
}

// ApplicationGrant_app ...
type ApplicationGrant_app struct {
	Client_id string `json:"client_id"`
	Name      string `json:"name"`
	URL       string `json:"url"`
}

// Artifact ...
type Artifact struct {
	Archive_download_url string           `json:"archive_download_url"`
	Created_at           convert.JSONTime `json:"created_at"`
	Expired              bool             `json:"expired"`
	Expires_at           convert.JSONTime `json:"expires_at"`
	ID                   int64            `json:"id"`
	Name                 string           `json:"name"`
	Node_id              string           `json:"node_id"`
	Size_in_bytes        int64            `json:"size_in_bytes"`
	Updated_at           convert.JSONTime `json:"updated_at"`
	URL                  string           `json:"url"`
}

// AuthenticationToken ...
type AuthenticationToken struct {
	Expires_at           convert.JSONTime                          `json:"expires_at"`
	Permissions          *EXTERNAL_authenticationToken_permissions `json:"permissions,omitempty"`
	Repositories         []Repository                              `json:"repositories,omitempty"`
	Repository_selection *string                                   `json:"repository_selection,omitempty"`
	Single_file          *string                                   `json:"single_file,omitempty"`
	Token                string                                    `json:"token"`
}

// Authorization ...
type Authorization struct {
	App              Authorization_app                    `json:"app"`
	Created_at       convert.JSONTime                     `json:"created_at"`
	Fingerprint      string                               `json:"fingerprint"`
	Hashed_token     string                               `json:"hashed_token"`
	ID               int64                                `json:"id"`
	Installation     *EXTERNAL_authorization_installation `json:"installation,omitempty"`
	Note             string                               `json:"note"`
	Note_url         string                               `json:"note_url"`
	Scopes           []string                             `json:"scopes"`
	Token            string                               `json:"token"`
	Token_last_eight string                               `json:"token_last_eight"`
	Updated_at       convert.JSONTime                     `json:"updated_at"`
	URL              string                               `json:"url"`
	User             *EXTERNAL_authorization_user         `json:"user,omitempty"`
}

// Authorization_app ...
type Authorization_app struct {
	Client_id string `json:"client_id"`
	Name      string `json:"name"`
	URL       string `json:"url"`
}

// BaseGist ...
type BaseGist struct {
	Comments     int64                       `json:"comments"`
	Comments_url string                      `json:"comments_url"`
	Commits_url  string                      `json:"commits_url"`
	Created_at   convert.JSONTime            `json:"created_at"`
	Description  string                      `json:"description"`
	Files        EXTERNAL_baseGist_files     `json:"files"`
	Forks        []EXTERNAL_baseGist_forks   `json:"forks,omitempty"`
	Forks_url    string                      `json:"forks_url"`
	Git_pull_url string                      `json:"git_pull_url"`
	Git_push_url string                      `json:"git_push_url"`
	History      []EXTERNAL_baseGist_history `json:"history,omitempty"`
	Html_url     string                      `json:"html_url"`
	ID           string                      `json:"id"`
	Node_id      string                      `json:"node_id"`
	Owner        *EXTERNAL_baseGist_owner    `json:"owner,omitempty"`
	Public       bool                        `json:"public"`
	Truncated    *bool                       `json:"truncated,omitempty"`
	Updated_at   convert.JSONTime            `json:"updated_at"`
	URL          string                      `json:"url"`
	User         EXTERNAL_baseGist_user      `json:"user"`
}

// BasicError ...
type BasicError struct {
	Documentation_url *string `json:"documentation_url,omitempty"`
	Message           *string `json:"message,omitempty"`
}

// Blob ...
type Blob struct {
	Content             string  `json:"content"`
	Encoding            string  `json:"encoding"`
	Highlighted_content *string `json:"highlighted_content,omitempty"`
	Node_id             string  `json:"node_id"`
	Sha                 string  `json:"sha"`
	Size                int64   `json:"size"`
	URL                 string  `json:"url"`
}

// BranchProtection ...
type BranchProtection struct {
	Allow_deletions               *BranchProtection_allow_deletions         `json:"allow_deletions,omitempty"`
	Allow_force_pushes            *BranchProtection_allow_force_pushes      `json:"allow_force_pushes,omitempty"`
	Enabled                       bool                                      `json:"enabled"`
	Enforce_admins                *ProtectedBranchAdminEnforced             `json:"enforce_admins,omitempty"`
	Name                          *string                                   `json:"name,omitempty"`
	Protection_url                *string                                   `json:"protection_url,omitempty"`
	Required_linear_history       *BranchProtection_required_linear_history `json:"required_linear_history,omitempty"`
	Required_pull_request_reviews *ProtectedBranchPullRequestReview         `json:"required_pull_request_reviews,omitempty"`
	Required_status_checks        BranchProtection_required_status_checks   `json:"required_status_checks"`
	Restrictions                  *BranchRestrictionPolicy                  `json:"restrictions,omitempty"`
	URL                           *string                                   `json:"url,omitempty"`
}

// BranchProtection_allow_deletions ...
type BranchProtection_allow_deletions struct {
	Enabled *bool `json:"enabled,omitempty"`
}

// BranchProtection_allow_force_pushes ...
type BranchProtection_allow_force_pushes struct {
	Enabled *bool `json:"enabled,omitempty"`
}

// BranchProtection_required_linear_history ...
type BranchProtection_required_linear_history struct {
	Enabled *bool `json:"enabled,omitempty"`
}

// BranchProtection_required_status_checks ...
type BranchProtection_required_status_checks struct {
	Contexts          []string `json:"contexts"`
	Contexts_url      *string  `json:"contexts_url,omitempty"`
	Enforcement_level string   `json:"enforcement_level"`
	URL               *string  `json:"url,omitempty"`
}

// BranchRestrictionPolicy ...
type BranchRestrictionPolicy struct {
	Apps      []BranchRestrictionPolicy_apps  `json:"apps"`
	Apps_url  string                          `json:"apps_url"`
	Teams     []BranchRestrictionPolicy_teams `json:"teams"`
	Teams_url string                          `json:"teams_url"`
	URL       string                          `json:"url"`
	Users     []BranchRestrictionPolicy_users `json:"users"`
	Users_url string                          `json:"users_url"`
}

// BranchRestrictionPolicy_apps ...
type BranchRestrictionPolicy_apps struct {
	Created_at   *string                                   `json:"created_at,omitempty"`
	Description  *string                                   `json:"description,omitempty"`
	Events       []string                                  `json:"events,omitempty"`
	External_url *string                                   `json:"external_url,omitempty"`
	Html_url     *string                                   `json:"html_url,omitempty"`
	ID           *int64                                    `json:"id,omitempty"`
	Name         *string                                   `json:"name,omitempty"`
	Node_id      *string                                   `json:"node_id,omitempty"`
	Owner        *BranchRestrictionPolicy_apps_owner       `json:"owner,omitempty"`
	Permissions  *BranchRestrictionPolicy_apps_permissions `json:"permissions,omitempty"`
	Slug         *string                                   `json:"slug,omitempty"`
	Updated_at   *string                                   `json:"updated_at,omitempty"`
}

// BranchRestrictionPolicy_apps_owner ...
type BranchRestrictionPolicy_apps_owner struct {
	Avatar_url          *string `json:"avatar_url,omitempty"`
	Description         *string `json:"description,omitempty"`
	Events_url          *string `json:"events_url,omitempty"`
	Followers_url       *string `json:"followers_url,omitempty"`
	Following_url       *string `json:"following_url,omitempty"`
	Gists_url           *string `json:"gists_url,omitempty"`
	Gravatar_id         *string `json:"gravatar_id,omitempty"`
	Hooks_url           *string `json:"hooks_url,omitempty"`
	Html_url            *string `json:"html_url,omitempty"`
	ID                  *int64  `json:"id,omitempty"`
	Issues_url          *string `json:"issues_url,omitempty"`
	Login               *string `json:"login,omitempty"`
	Members_url         *string `json:"members_url,omitempty"`
	Node_id             *string `json:"node_id,omitempty"`
	Organizations_url   *string `json:"organizations_url,omitempty"`
	Public_members_url  *string `json:"public_members_url,omitempty"`
	Received_events_url *string `json:"received_events_url,omitempty"`
	Repos_url           *string `json:"repos_url,omitempty"`
	Starred_url         *string `json:"starred_url,omitempty"`
	Subscriptions_url   *string `json:"subscriptions_url,omitempty"`
	Type                *string `json:"type,omitempty"`
	URL                 *string `json:"url,omitempty"`
}

// BranchRestrictionPolicy_apps_permissions ...
type BranchRestrictionPolicy_apps_permissions struct {
	Contents    *string `json:"contents,omitempty"`
	Issues      *string `json:"issues,omitempty"`
	Metadata    *string `json:"metadata,omitempty"`
	Single_file *string `json:"single_file,omitempty"`
}

// BranchRestrictionPolicy_teams ...
type BranchRestrictionPolicy_teams struct {
	Description      *string `json:"description,omitempty"`
	Html_url         *string `json:"html_url,omitempty"`
	ID               *int64  `json:"id,omitempty"`
	Members_url      *string `json:"members_url,omitempty"`
	Name             *string `json:"name,omitempty"`
	Node_id          *string `json:"node_id,omitempty"`
	Parent           *string `json:"parent,omitempty"`
	Permission       *string `json:"permission,omitempty"`
	Privacy          *string `json:"privacy,omitempty"`
	Repositories_url *string `json:"repositories_url,omitempty"`
	Slug             *string `json:"slug,omitempty"`
	URL              *string `json:"url,omitempty"`
}

// BranchRestrictionPolicy_users ...
type BranchRestrictionPolicy_users struct {
	Avatar_url          *string `json:"avatar_url,omitempty"`
	Events_url          *string `json:"events_url,omitempty"`
	Followers_url       *string `json:"followers_url,omitempty"`
	Following_url       *string `json:"following_url,omitempty"`
	Gists_url           *string `json:"gists_url,omitempty"`
	Gravatar_id         *string `json:"gravatar_id,omitempty"`
	Html_url            *string `json:"html_url,omitempty"`
	ID                  *int64  `json:"id,omitempty"`
	Login               *string `json:"login,omitempty"`
	Node_id             *string `json:"node_id,omitempty"`
	Organizations_url   *string `json:"organizations_url,omitempty"`
	Received_events_url *string `json:"received_events_url,omitempty"`
	Repos_url           *string `json:"repos_url,omitempty"`
	Site_admin          *bool   `json:"site_admin,omitempty"`
	Starred_url         *string `json:"starred_url,omitempty"`
	Subscriptions_url   *string `json:"subscriptions_url,omitempty"`
	Type                *string `json:"type,omitempty"`
	URL                 *string `json:"url,omitempty"`
}

// BranchShort ...
type BranchShort struct {
	Commit    *BranchShort_commit `json:"commit,omitempty"`
	Name      *string             `json:"name,omitempty"`
	Protected *bool               `json:"protected,omitempty"`
}

// BranchShort_commit ...
type BranchShort_commit struct {
	Sha *string `json:"sha,omitempty"`
	URL *string `json:"url,omitempty"`
}

// BranchWithProtection ...
type BranchWithProtection struct {
	_links                          BranchWithProtection__links `json:"_links"`
	Commit                          Commit                      `json:"commit"`
	Name                            string                      `json:"name"`
	Pattern                         *string                     `json:"pattern,omitempty"`
	Protected                       bool                        `json:"protected"`
	Protection                      BranchProtection            `json:"protection"`
	Protection_url                  string                      `json:"protection_url"`
	Required_approving_review_count *int64                      `json:"required_approving_review_count,omitempty"`
}

// BranchWithProtection__links ...
type BranchWithProtection__links struct {
	HTML string `json:"html"`
	Self string `json:"self"`
}

// CheckAnnotation ...
type CheckAnnotation struct {
	Annotation_level string `json:"annotation_level"`
	Blob_href        string `json:"blob_href"`
	End_column       int64  `json:"end_column"`
	End_line         int64  `json:"end_line"`
	Message          string `json:"message"`
	Path             string `json:"path"`
	Raw_details      string `json:"raw_details"`
	Start_column     int64  `json:"start_column"`
	Start_line       int64  `json:"start_line"`
	Title            string `json:"title"`
}

// CheckRun ...
type CheckRun struct {
	App           EXTERNAL_checkRun_app           `json:"app"`
	Check_suite   CheckRun_check_suite            `json:"check_suite"`
	Completed_at  convert.JSONTime                `json:"completed_at"`
	Conclusion    string                          `json:"conclusion"`
	Details_url   string                          `json:"details_url"`
	External_id   string                          `json:"external_id"`
	Head_sha      string                          `json:"head_sha"`
	Html_url      string                          `json:"html_url"`
	ID            int64                           `json:"id"`
	Name          string                          `json:"name"`
	Node_id       string                          `json:"node_id"`
	Output        CheckRun_output                 `json:"output"`
	Pull_requests EXTERNAL_checkRun_pull_requests `json:"pull_requests"`
	Started_at    convert.JSONTime                `json:"started_at"`
	Status        string                          `json:"status"`
	URL           string                          `json:"url"`
}

// CheckRun_check_suite ...
type CheckRun_check_suite struct {
	ID int64 `json:"id"`
}

// CheckRun_output ...
type CheckRun_output struct {
	Annotations_count int64  `json:"annotations_count"`
	Annotations_url   string `json:"annotations_url"`
	Summary           string `json:"summary"`
	Text              string `json:"text"`
	Title             string `json:"title"`
}

// CheckSuite ...
type CheckSuite struct {
	After                   string                  `json:"after"`
	App                     EXTERNAL_checkSuite_app `json:"app"`
	Before                  string                  `json:"before"`
	Check_runs_url          string                  `json:"check_runs_url"`
	Conclusion              string                  `json:"conclusion"`
	Created_at              convert.JSONTime        `json:"created_at"`
	Head_branch             string                  `json:"head_branch"`
	Head_commit             SimpleCommit            `json:"head_commit"`
	Head_sha                string                  `json:"head_sha"`
	ID                      int64                   `json:"id"`
	Latest_check_runs_count int64                   `json:"latest_check_runs_count"`
	Node_id                 string                  `json:"node_id"`
	Pull_requests           []PullRequestMinimal    `json:"pull_requests"`
	Repository              MinimalRepository       `json:"repository"`
	Status                  string                  `json:"status"`
	Updated_at              convert.JSONTime        `json:"updated_at"`
	URL                     string                  `json:"url"`
}

// CheckSuitePreference ...
type CheckSuitePreference struct {
	Preferences *CheckSuitePreference_preferences `json:"preferences,omitempty"`
	Repository  *Repository                       `json:"repository,omitempty"`
}

// CheckSuitePreference_preferences ...
type CheckSuitePreference_preferences struct {
	Auto_trigger_checks []CheckSuitePreference_preferences_auto_trigger_checks `json:"auto_trigger_checks,omitempty"`
}

// CheckSuitePreference_preferences_auto_trigger_checks ...
type CheckSuitePreference_preferences_auto_trigger_checks struct {
	App_id  int64 `json:"app_id"`
	Setting bool  `json:"setting"`
}

// CloneTraffic ...
type CloneTraffic struct {
	Clones  []Traffic `json:"clones"`
	Count   int64     `json:"count"`
	Uniques int64     `json:"uniques"`
}

// CodeOfConduct ...
type CodeOfConduct struct {
	Body     *string `json:"body,omitempty"`
	Html_url string  `json:"html_url"`
	Key      string  `json:"key"`
	Name     string  `json:"name"`
	URL      string  `json:"url"`
}

// CodeOfConductSimple ...
type CodeOfConductSimple struct {
	Html_url string `json:"html_url"`
	Key      string `json:"key"`
	Name     string `json:"name"`
	URL      string `json:"url"`
}

// CodeScanningAlertCodeScanningAlert ...
type CodeScanningAlertCodeScanningAlert struct {
	Created_at       *CodeScanningAlertCreatedAt       `json:"created_at,omitempty"`
	Dismissed_at     *CodeScanningAlertDismissedAt     `json:"dismissed_at,omitempty"`
	Dismissed_by     *CodeScanningAlertDismissedBy     `json:"dismissed_by,omitempty"`
	Dismissed_reason *CodeScanningAlertDismissedReason `json:"dismissed_reason,omitempty"`
	Html_url         *CodeScanningAlertHTMLURL         `json:"html_url,omitempty"`
	Instances        *CodeScanningAlertInstances       `json:"instances,omitempty"`
	Number           *CodeScanningAlertNumber          `json:"number,omitempty"`
	Rule             *CodeScanningAlertRule            `json:"rule,omitempty"`
	State            *CodeScanningAlertState           `json:"state,omitempty"`
	Tool             *CodeScanningAnalysisTool         `json:"tool,omitempty"`
	URL              *CodeScanningAlertURL             `json:"url,omitempty"`
}

// CodeScanningAlertCodeScanningAlertItems ...
type CodeScanningAlertCodeScanningAlertItems struct {
	Created_at       *CodeScanningAlertCreatedAt       `json:"created_at,omitempty"`
	Dismissed_at     *CodeScanningAlertDismissedAt     `json:"dismissed_at,omitempty"`
	Dismissed_by     *CodeScanningAlertDismissedBy     `json:"dismissed_by,omitempty"`
	Dismissed_reason *CodeScanningAlertDismissedReason `json:"dismissed_reason,omitempty"`
	Html_url         *CodeScanningAlertHTMLURL         `json:"html_url,omitempty"`
	Number           *CodeScanningAlertNumber          `json:"number,omitempty"`
	Rule             *CodeScanningAlertRule            `json:"rule,omitempty"`
	State            *CodeScanningAlertState           `json:"state,omitempty"`
	Tool             *CodeScanningAnalysisTool         `json:"tool,omitempty"`
	URL              *CodeScanningAlertURL             `json:"url,omitempty"`
}

// CodeScanningAlertInstances_obj ...
type CodeScanningAlertInstances_obj struct {
	Analysis_key *CodeScanningAnalysisAnalysisKey `json:"analysis_key,omitempty"`
	Environment  *CodeScanningAlertEnvironment    `json:"environment,omitempty"`
	Matrix_vars  *string                          `json:"matrix_vars,omitempty"`
	Ref          *CodeScanningAlertRef            `json:"ref,omitempty"`
	State        *CodeScanningAlertState          `json:"state,omitempty"`
}

// CodeScanningAlertRule ...
type CodeScanningAlertRule struct {
	Description *string `json:"description,omitempty"`
	ID          *string `json:"id,omitempty"`
	Severity    *string `json:"severity,omitempty"`
}

// CodeScanningAnalysisCodeScanningAnalysis ...
type CodeScanningAnalysisCodeScanningAnalysis struct {
	Analysis_key *CodeScanningAnalysisAnalysisKey `json:"analysis_key,omitempty"`
	Commit_sha   *CodeScanningAnalysisCommitSha   `json:"commit_sha,omitempty"`
	Created_at   *CodeScanningAnalysisCreatedAt   `json:"created_at,omitempty"`
	Environment  *CodeScanningAnalysisEnvironment `json:"environment,omitempty"`
	Error_       *string                          `json:"error,omitempty"`
	Ref          *CodeScanningAnalysisRef         `json:"ref,omitempty"`
	Tool_name    *CodeScanningAnalysisToolName    `json:"tool_name,omitempty"`
}

// CodeScanningAnalysisTool ...
type CodeScanningAnalysisTool struct {
	Name    *CodeScanningAnalysisToolName `json:"name,omitempty"`
	Version *string                       `json:"version,omitempty"`
}

// CodeSearchResultItem ...
type CodeSearchResultItem struct {
	File_size        *int64                   `json:"file_size,omitempty"`
	Git_url          string                   `json:"git_url"`
	Html_url         string                   `json:"html_url"`
	Language         *string                  `json:"language,omitempty"`
	Last_modified_at *convert.JSONTime        `json:"last_modified_at,omitempty"`
	Line_numbers     []string                 `json:"line_numbers,omitempty"`
	Name             string                   `json:"name"`
	Path             string                   `json:"path"`
	Repository       MinimalRepository        `json:"repository"`
	Score            int64                    `json:"score"`
	Sha              string                   `json:"sha"`
	Text_matches     *SearchResultTextMatches `json:"text_matches,omitempty"`
	URL              string                   `json:"url"`
}

// Collaborator ...
type Collaborator struct {
	Avatar_url          string                    `json:"avatar_url"`
	Events_url          string                    `json:"events_url"`
	Followers_url       string                    `json:"followers_url"`
	Following_url       string                    `json:"following_url"`
	Gists_url           string                    `json:"gists_url"`
	Gravatar_id         string                    `json:"gravatar_id"`
	Html_url            string                    `json:"html_url"`
	ID                  int64                     `json:"id"`
	Login               string                    `json:"login"`
	Node_id             string                    `json:"node_id"`
	Organizations_url   string                    `json:"organizations_url"`
	Permissions         *Collaborator_permissions `json:"permissions,omitempty"`
	Received_events_url string                    `json:"received_events_url"`
	Repos_url           string                    `json:"repos_url"`
	Site_admin          bool                      `json:"site_admin"`
	Starred_url         string                    `json:"starred_url"`
	Subscriptions_url   string                    `json:"subscriptions_url"`
	Type                string                    `json:"type"`
	URL                 string                    `json:"url"`
}

// Collaborator_permissions ...
type Collaborator_permissions struct {
	Admin bool `json:"admin"`
	Pull  bool `json:"pull"`
	Push  bool `json:"push"`
}

// CombinedBillingUsage ...
type CombinedBillingUsage struct {
	Days_left_in_billing_cycle       *int64 `json:"days_left_in_billing_cycle,omitempty"`
	Estimated_paid_storage_for_month *int64 `json:"estimated_paid_storage_for_month,omitempty"`
	Estimated_storage_for_month      *int64 `json:"estimated_storage_for_month,omitempty"`
}

// CombinedCommitStatus ...
type CombinedCommitStatus struct {
	Commit_url  string               `json:"commit_url"`
	Repository  MinimalRepository    `json:"repository"`
	Sha         string               `json:"sha"`
	State       string               `json:"state"`
	Statuses    []SimpleCommitStatus `json:"statuses"`
	Total_count int64                `json:"total_count"`
	URL         string               `json:"url"`
}

// Commit ...
type Commit struct {
	Author       EXTERNAL_commit_author    `json:"author"`
	Comments_url string                    `json:"comments_url"`
	Commit       Commit_commit             `json:"commit"`
	Committer    EXTERNAL_commit_committer `json:"committer"`
	Files        []Commit_files            `json:"files,omitempty"`
	Html_url     string                    `json:"html_url"`
	Node_id      string                    `json:"node_id"`
	Parents      []Commit_parents          `json:"parents"`
	Sha          string                    `json:"sha"`
	Stats        *Commit_stats             `json:"stats,omitempty"`
	URL          string                    `json:"url"`
}

// CommitActivity ...
type CommitActivity struct {
	Days  []int64 `json:"days"`
	Total int64   `json:"total"`
	Week  int64   `json:"week"`
}

// CommitComment ...
type CommitComment struct {
	Author_association string                      `json:"author_association"`
	Body               string                      `json:"body"`
	Commit_id          string                      `json:"commit_id"`
	Created_at         convert.JSONTime            `json:"created_at"`
	Html_url           string                      `json:"html_url"`
	ID                 int64                       `json:"id"`
	Line               int64                       `json:"line"`
	Node_id            string                      `json:"node_id"`
	Path               string                      `json:"path"`
	Position           int64                       `json:"position"`
	Reactions          *ReactionRollup             `json:"reactions,omitempty"`
	Updated_at         convert.JSONTime            `json:"updated_at"`
	URL                string                      `json:"url"`
	User               EXTERNAL_commitComment_user `json:"user"`
}

// CommitComparison ...
type CommitComparison struct {
	Ahead_by          int64       `json:"ahead_by"`
	Base_commit       Commit      `json:"base_commit"`
	Behind_by         int64       `json:"behind_by"`
	Commits           []Commit    `json:"commits"`
	Diff_url          string      `json:"diff_url"`
	Files             []DiffEntry `json:"files"`
	Html_url          string      `json:"html_url"`
	Merge_base_commit Commit      `json:"merge_base_commit"`
	Patch_url         string      `json:"patch_url"`
	Permalink_url     string      `json:"permalink_url"`
	Status            string      `json:"status"`
	Total_commits     int64       `json:"total_commits"`
	URL               string      `json:"url"`
}

// CommitSearchResultItem ...
type CommitSearchResultItem struct {
	Author       EXTERNAL_commitSearchResultItem_author    `json:"author"`
	Comments_url string                                    `json:"comments_url"`
	Commit       CommitSearchResultItem_commit             `json:"commit"`
	Committer    EXTERNAL_commitSearchResultItem_committer `json:"committer"`
	Html_url     string                                    `json:"html_url"`
	Node_id      string                                    `json:"node_id"`
	Parents      []CommitSearchResultItem_parents          `json:"parents"`
	Repository   MinimalRepository                         `json:"repository"`
	Score        int64                                     `json:"score"`
	Sha          string                                    `json:"sha"`
	Text_matches *SearchResultTextMatches                  `json:"text_matches,omitempty"`
	URL          string                                    `json:"url"`
}

// CommitSearchResultItem_commit ...
type CommitSearchResultItem_commit struct {
	Author        CommitSearchResultItem_commit_author             `json:"author"`
	Comment_count int64                                            `json:"comment_count"`
	Committer     EXTERNAL_commitSearchResultItem_commit_committer `json:"committer"`
	Message       string                                           `json:"message"`
	Tree          CommitSearchResultItem_commit_tree               `json:"tree"`
	URL           string                                           `json:"url"`
	Verification  *Verification                                    `json:"verification,omitempty"`
}

// CommitSearchResultItem_commit_author ...
type CommitSearchResultItem_commit_author struct {
	Date_ convert.JSONTime `json:"date"`
	Email string           `json:"email"`
	Name  string           `json:"name"`
}

// CommitSearchResultItem_commit_tree ...
type CommitSearchResultItem_commit_tree struct {
	Sha string `json:"sha"`
	URL string `json:"url"`
}

// CommitSearchResultItem_parents ...
type CommitSearchResultItem_parents struct {
	Html_url *string `json:"html_url,omitempty"`
	Sha      *string `json:"sha,omitempty"`
	URL      *string `json:"url,omitempty"`
}

// Commit_commit ...
type Commit_commit struct {
	Author        EXTERNAL_commit_commit_author    `json:"author"`
	Comment_count int64                            `json:"comment_count"`
	Committer     EXTERNAL_commit_commit_committer `json:"committer"`
	Message       string                           `json:"message"`
	Tree          Commit_commit_tree               `json:"tree"`
	URL           string                           `json:"url"`
	Verification  *Verification                    `json:"verification,omitempty"`
}

// Commit_commit_tree ...
type Commit_commit_tree struct {
	Sha string `json:"sha"`
	URL string `json:"url"`
}

// Commit_files ...
type Commit_files struct {
	Additions         *int64  `json:"additions,omitempty"`
	Blob_url          *string `json:"blob_url,omitempty"`
	Changes           *int64  `json:"changes,omitempty"`
	Contents_url      *string `json:"contents_url,omitempty"`
	Deletions         *int64  `json:"deletions,omitempty"`
	Filename          *string `json:"filename,omitempty"`
	Patch             *string `json:"patch,omitempty"`
	Previous_filename *string `json:"previous_filename,omitempty"`
	Raw_url           *string `json:"raw_url,omitempty"`
	Sha               *string `json:"sha,omitempty"`
	Status            *string `json:"status,omitempty"`
}

// Commit_parents ...
type Commit_parents struct {
	Html_url *string `json:"html_url,omitempty"`
	Sha      string  `json:"sha"`
	URL      string  `json:"url"`
}

// Commit_stats ...
type Commit_stats struct {
	Additions *int64 `json:"additions,omitempty"`
	Deletions *int64 `json:"deletions,omitempty"`
	Total     *int64 `json:"total,omitempty"`
}

// CommunityHealthFile ...
type CommunityHealthFile struct {
	Html_url string `json:"html_url"`
	URL      string `json:"url"`
}

// CommunityProfile ...
type CommunityProfile struct {
	Description       string                 `json:"description"`
	Documentation     string                 `json:"documentation"`
	Files             CommunityProfile_files `json:"files"`
	Health_percentage int64                  `json:"health_percentage"`
	Updated_at        convert.JSONTime       `json:"updated_at"`
}

// CommunityProfile_files ...
type CommunityProfile_files struct {
	Code_of_conduct       EXTERNAL_communityProfile_files_code_of_conduct       `json:"code_of_conduct"`
	Contributing          EXTERNAL_communityProfile_files_contributing          `json:"contributing"`
	Issue_template        EXTERNAL_communityProfile_files_issue_template        `json:"issue_template"`
	License               EXTERNAL_communityProfile_files_license               `json:"license"`
	Pull_request_template EXTERNAL_communityProfile_files_pull_request_template `json:"pull_request_template"`
	Readme                EXTERNAL_communityProfile_files_readme                `json:"readme"`
}

// ContentDirectory_obj ...
type ContentDirectory_obj struct {
	_links       ContentDirectory_obj_contentDirectory_obj__links `json:"_links"`
	Content      *string                                          `json:"content,omitempty"`
	Download_url string                                           `json:"download_url"`
	Git_url      string                                           `json:"git_url"`
	Html_url     string                                           `json:"html_url"`
	Name         string                                           `json:"name"`
	Path         string                                           `json:"path"`
	Sha          string                                           `json:"sha"`
	Size         int64                                            `json:"size"`
	Type         string                                           `json:"type"`
	URL          string                                           `json:"url"`
}

// ContentDirectory_obj_contentDirectory_obj__links ...
type ContentDirectory_obj_contentDirectory_obj__links struct {
	Git  string `json:"git"`
	HTML string `json:"html"`
	Self string `json:"self"`
}

// ContentFile ...
type ContentFile struct {
	_links            ContentFile__links `json:"_links"`
	Content           string             `json:"content"`
	Download_url      string             `json:"download_url"`
	Encoding          string             `json:"encoding"`
	Git_url           string             `json:"git_url"`
	Html_url          string             `json:"html_url"`
	Name              string             `json:"name"`
	Path              string             `json:"path"`
	Sha               string             `json:"sha"`
	Size              int64              `json:"size"`
	Submodule_git_url *string            `json:"submodule_git_url,omitempty"`
	Target            *string            `json:"target,omitempty"`
	Type              string             `json:"type"`
	URL               string             `json:"url"`
}

// ContentFile__links ...
type ContentFile__links struct {
	Git  string `json:"git"`
	HTML string `json:"html"`
	Self string `json:"self"`
}

// ContentReferenceAttachment ...
type ContentReferenceAttachment struct {
	Body    string  `json:"body"`
	ID      int64   `json:"id"`
	Node_id *string `json:"node_id,omitempty"`
	Title   string  `json:"title"`
}

// ContentSubmodule ...
type ContentSubmodule struct {
	_links            ContentSubmodule__links `json:"_links"`
	Download_url      string                  `json:"download_url"`
	Git_url           string                  `json:"git_url"`
	Html_url          string                  `json:"html_url"`
	Name              string                  `json:"name"`
	Path              string                  `json:"path"`
	Sha               string                  `json:"sha"`
	Size              int64                   `json:"size"`
	Submodule_git_url string                  `json:"submodule_git_url"`
	Type              string                  `json:"type"`
	URL               string                  `json:"url"`
}

// ContentSubmodule__links ...
type ContentSubmodule__links struct {
	Git  string `json:"git"`
	HTML string `json:"html"`
	Self string `json:"self"`
}

// ContentSymlink ...
type ContentSymlink struct {
	_links       ContentSymlink__links `json:"_links"`
	Download_url string                `json:"download_url"`
	Git_url      string                `json:"git_url"`
	Html_url     string                `json:"html_url"`
	Name         string                `json:"name"`
	Path         string                `json:"path"`
	Sha          string                `json:"sha"`
	Size         int64                 `json:"size"`
	Target       string                `json:"target"`
	Type         string                `json:"type"`
	URL          string                `json:"url"`
}

// ContentSymlink__links ...
type ContentSymlink__links struct {
	Git  string `json:"git"`
	HTML string `json:"html"`
	Self string `json:"self"`
}

// ContentTraffic ...
type ContentTraffic struct {
	Count   int64  `json:"count"`
	Path    string `json:"path"`
	Title   string `json:"title"`
	Uniques int64  `json:"uniques"`
}

// ContentTree ...
type ContentTree struct {
	_links       ContentTree__links    `json:"_links"`
	Download_url string                `json:"download_url"`
	Entries      []ContentTree_entries `json:"entries,omitempty"`
	Git_url      string                `json:"git_url"`
	Html_url     string                `json:"html_url"`
	Name         string                `json:"name"`
	Path         string                `json:"path"`
	Sha          string                `json:"sha"`
	Size         int64                 `json:"size"`
	Type         string                `json:"type"`
	URL          string                `json:"url"`
}

// ContentTree__links ...
type ContentTree__links struct {
	Git  string `json:"git"`
	HTML string `json:"html"`
	Self string `json:"self"`
}

// ContentTree_entries ...
type ContentTree_entries struct {
	_links       ContentTree_entries__links `json:"_links"`
	Content      *string                    `json:"content,omitempty"`
	Download_url string                     `json:"download_url"`
	Git_url      string                     `json:"git_url"`
	Html_url     string                     `json:"html_url"`
	Name         string                     `json:"name"`
	Path         string                     `json:"path"`
	Sha          string                     `json:"sha"`
	Size         int64                      `json:"size"`
	Type         string                     `json:"type"`
	URL          string                     `json:"url"`
}

// ContentTree_entries__links ...
type ContentTree_entries__links struct {
	Git  string `json:"git"`
	HTML string `json:"html"`
	Self string `json:"self"`
}

// Contributor ...
type Contributor struct {
	Avatar_url          *string `json:"avatar_url,omitempty"`
	Contributions       int64   `json:"contributions"`
	Email               *string `json:"email,omitempty"`
	Events_url          *string `json:"events_url,omitempty"`
	Followers_url       *string `json:"followers_url,omitempty"`
	Following_url       *string `json:"following_url,omitempty"`
	Gists_url           *string `json:"gists_url,omitempty"`
	Gravatar_id         *string `json:"gravatar_id,omitempty"`
	Html_url            *string `json:"html_url,omitempty"`
	ID                  *int64  `json:"id,omitempty"`
	Login               *string `json:"login,omitempty"`
	Name                *string `json:"name,omitempty"`
	Node_id             *string `json:"node_id,omitempty"`
	Organizations_url   *string `json:"organizations_url,omitempty"`
	Received_events_url *string `json:"received_events_url,omitempty"`
	Repos_url           *string `json:"repos_url,omitempty"`
	Site_admin          *bool   `json:"site_admin,omitempty"`
	Starred_url         *string `json:"starred_url,omitempty"`
	Subscriptions_url   *string `json:"subscriptions_url,omitempty"`
	Type                string  `json:"type"`
	URL                 *string `json:"url,omitempty"`
}

// ContributorActivity ...
type ContributorActivity struct {
	Author EXTERNAL_contributorActivity_author `json:"author"`
	Total  int64                               `json:"total"`
	Weeks  []ContributorActivity_weeks         `json:"weeks"`
}

// ContributorActivity_weeks ...
type ContributorActivity_weeks struct {
	A *int64  `json:"a,omitempty"`
	C *int64  `json:"c,omitempty"`
	D *int64  `json:"d,omitempty"`
	W *string `json:"w,omitempty"`
}

// CredentialAuthorization ...
type CredentialAuthorization struct {
	Credential_accessed_at   *convert.JSONTime `json:"credential_accessed_at,omitempty"`
	Credential_authorized_at convert.JSONTime  `json:"credential_authorized_at"`
	Credential_id            int64             `json:"credential_id"`
	Credential_type          string            `json:"credential_type"`
	Fingerprint              *string           `json:"fingerprint,omitempty"`
	Login                    string            `json:"login"`
	Scopes                   []string          `json:"scopes,omitempty"`
	Token_last_eight         *string           `json:"token_last_eight,omitempty"`
}

// DeployKey ...
type DeployKey struct {
	Created_at *string `json:"created_at,omitempty"`
	ID         *int64  `json:"id,omitempty"`
	Key        *string `json:"key,omitempty"`
	Read_only  *bool   `json:"read_only,omitempty"`
	Title      *string `json:"title,omitempty"`
	URL        *string `json:"url,omitempty"`
	Verified   *bool   `json:"verified,omitempty"`
}

// Deployment ...
type Deployment struct {
	Created_at               convert.JSONTime                              `json:"created_at"`
	Creator                  EXTERNAL_deployment_creator                   `json:"creator"`
	Description              string                                        `json:"description"`
	Environment              string                                        `json:"environment"`
	ID                       int64                                         `json:"id"`
	Node_id                  string                                        `json:"node_id"`
	Original_environment     *string                                       `json:"original_environment,omitempty"`
	Payload                  EXTERNAL_deployment_payload                   `json:"payload"`
	Performed_via_github_app *EXTERNAL_deployment_performed_via_github_app `json:"performed_via_github_app,omitempty"`
	Production_environment   *bool                                         `json:"production_environment,omitempty"`
	Ref                      string                                        `json:"ref"`
	Repository_url           string                                        `json:"repository_url"`
	Sha                      string                                        `json:"sha"`
	Statuses_url             string                                        `json:"statuses_url"`
	Task                     string                                        `json:"task"`
	Transient_environment    *bool                                         `json:"transient_environment,omitempty"`
	Updated_at               convert.JSONTime                              `json:"updated_at"`
	URL                      string                                        `json:"url"`
}

// DeploymentStatus ...
type DeploymentStatus struct {
	Created_at               convert.JSONTime                                    `json:"created_at"`
	Creator                  EXTERNAL_deploymentStatus_creator                   `json:"creator"`
	Deployment_url           string                                              `json:"deployment_url"`
	Description              string                                              `json:"description"`
	Environment              *string                                             `json:"environment,omitempty"`
	Environment_url          *string                                             `json:"environment_url,omitempty"`
	ID                       int64                                               `json:"id"`
	Log_url                  *string                                             `json:"log_url,omitempty"`
	Node_id                  string                                              `json:"node_id"`
	Performed_via_github_app *EXTERNAL_deploymentStatus_performed_via_github_app `json:"performed_via_github_app,omitempty"`
	Repository_url           string                                              `json:"repository_url"`
	State                    string                                              `json:"state"`
	Target_url               string                                              `json:"target_url"`
	Updated_at               convert.JSONTime                                    `json:"updated_at"`
	URL                      string                                              `json:"url"`
}

// DiffEntry ...
type DiffEntry struct {
	Additions         int64   `json:"additions"`
	Blob_url          string  `json:"blob_url"`
	Changes           int64   `json:"changes"`
	Contents_url      string  `json:"contents_url"`
	Deletions         int64   `json:"deletions"`
	Filename          string  `json:"filename"`
	Patch             *string `json:"patch,omitempty"`
	Previous_filename *string `json:"previous_filename,omitempty"`
	Raw_url           string  `json:"raw_url"`
	Sha               string  `json:"sha"`
	Status            string  `json:"status"`
}

// Email_object ...
type Email_object struct {
	Email      string `json:"email"`
	Primary    bool   `json:"primary"`
	Verified   bool   `json:"verified"`
	Visibility string `json:"visibility"`
}

// Enterprise ...
type Enterprise struct {
	Avatar_url  string           `json:"avatar_url"`
	Created_at  convert.JSONTime `json:"created_at"`
	Description *string          `json:"description,omitempty"`
	Html_url    string           `json:"html_url"`
	ID          int64            `json:"id"`
	Name        string           `json:"name"`
	Node_id     string           `json:"node_id"`
	Slug        string           `json:"slug"`
	Updated_at  convert.JSONTime `json:"updated_at"`
	Website_url *string          `json:"website_url,omitempty"`
}

// Event ...
type Event struct {
	Actor      Actor            `json:"actor"`
	Created_at convert.JSONTime `json:"created_at"`
	ID         string           `json:"id"`
	Org        *Actor           `json:"org,omitempty"`
	Payload    Event_payload    `json:"payload"`
	Public     bool             `json:"public"`
	Repo       Event_repo       `json:"repo"`
	Type       string           `json:"type"`
}

// Event_payload ...
type Event_payload struct {
	Action  string                `json:"action"`
	Comment *IssueComment         `json:"comment,omitempty"`
	Issue   *IssueSimple          `json:"issue,omitempty"`
	Pages   []Event_payload_pages `json:"pages,omitempty"`
}

// Event_payload_pages ...
type Event_payload_pages struct {
	Action    *string `json:"action,omitempty"`
	Html_url  *string `json:"html_url,omitempty"`
	Page_name *string `json:"page_name,omitempty"`
	Sha       *string `json:"sha,omitempty"`
	Summary   *string `json:"summary,omitempty"`
	Title     *string `json:"title,omitempty"`
}

// Event_repo ...
type Event_repo struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
	URL  string `json:"url"`
}

// Feed ...
type Feed struct {
	_links                         Feed__links `json:"_links"`
	Current_user_actor_url         *string     `json:"current_user_actor_url,omitempty"`
	Current_user_organization_url  *string     `json:"current_user_organization_url,omitempty"`
	Current_user_organization_urls []string    `json:"current_user_organization_urls,omitempty"`
	Current_user_public_url        *string     `json:"current_user_public_url,omitempty"`
	Current_user_url               *string     `json:"current_user_url,omitempty"`
	Security_advisories_url        *string     `json:"security_advisories_url,omitempty"`
	Timeline_url                   string      `json:"timeline_url"`
	User_url                       string      `json:"user_url"`
}

// Feed__links ...
type Feed__links struct {
	Current_user               *LinkWithType  `json:"current_user,omitempty"`
	Current_user_actor         *LinkWithType  `json:"current_user_actor,omitempty"`
	Current_user_organization  *LinkWithType  `json:"current_user_organization,omitempty"`
	Current_user_organizations []LinkWithType `json:"current_user_organizations,omitempty"`
	Current_user_public        *LinkWithType  `json:"current_user_public,omitempty"`
	Security_advisories        *LinkWithType  `json:"security_advisories,omitempty"`
	Timeline                   LinkWithType   `json:"timeline"`
	User                       LinkWithType   `json:"user"`
}

// FileCommit ...
type FileCommit struct {
	Commit  *FileCommit_commit  `json:"commit,omitempty"`
	Content *FileCommit_content `json:"content,omitempty"`
}

// FileCommit_commit ...
type FileCommit_commit struct {
	Author       *FileCommit_commit_author       `json:"author,omitempty"`
	Committer    *FileCommit_commit_committer    `json:"committer,omitempty"`
	Html_url     *string                         `json:"html_url,omitempty"`
	Message      *string                         `json:"message,omitempty"`
	Node_id      *string                         `json:"node_id,omitempty"`
	Parents      []FileCommit_commit_parents     `json:"parents,omitempty"`
	Sha          *string                         `json:"sha,omitempty"`
	Tree         *FileCommit_commit_tree         `json:"tree,omitempty"`
	URL          *string                         `json:"url,omitempty"`
	Verification *FileCommit_commit_verification `json:"verification,omitempty"`
}

// FileCommit_commit_author ...
type FileCommit_commit_author struct {
	Date_ *string `json:"date,omitempty"`
	Email *string `json:"email,omitempty"`
	Name  *string `json:"name,omitempty"`
}

// FileCommit_commit_committer ...
type FileCommit_commit_committer struct {
	Date_ *string `json:"date,omitempty"`
	Email *string `json:"email,omitempty"`
	Name  *string `json:"name,omitempty"`
}

// FileCommit_commit_parents ...
type FileCommit_commit_parents struct {
	Html_url *string `json:"html_url,omitempty"`
	Sha      *string `json:"sha,omitempty"`
	URL      *string `json:"url,omitempty"`
}

// FileCommit_commit_tree ...
type FileCommit_commit_tree struct {
	Sha *string `json:"sha,omitempty"`
	URL *string `json:"url,omitempty"`
}

// FileCommit_commit_verification ...
type FileCommit_commit_verification struct {
	Payload   *string `json:"payload,omitempty"`
	Reason    *string `json:"reason,omitempty"`
	Signature *string `json:"signature,omitempty"`
	Verified  *bool   `json:"verified,omitempty"`
}

// FileCommit_content ...
type FileCommit_content struct {
	_links       *FileCommit_content__links `json:"_links,omitempty"`
	Download_url *string                    `json:"download_url,omitempty"`
	Git_url      *string                    `json:"git_url,omitempty"`
	Html_url     *string                    `json:"html_url,omitempty"`
	Name         *string                    `json:"name,omitempty"`
	Path         *string                    `json:"path,omitempty"`
	Sha          *string                    `json:"sha,omitempty"`
	Size         *int64                     `json:"size,omitempty"`
	Type         *string                    `json:"type,omitempty"`
	URL          *string                    `json:"url,omitempty"`
}

// FileCommit_content__links ...
type FileCommit_content__links struct {
	Git  *string `json:"git,omitempty"`
	HTML *string `json:"html,omitempty"`
	Self *string `json:"self,omitempty"`
}

// FullRepository ...
type FullRepository struct {
	Allow_merge_commit       *bool                                        `json:"allow_merge_commit,omitempty"`
	Allow_rebase_merge       *bool                                        `json:"allow_rebase_merge,omitempty"`
	Allow_squash_merge       *bool                                        `json:"allow_squash_merge,omitempty"`
	Anonymous_access_enabled *bool                                        `json:"anonymous_access_enabled,omitempty"`
	Archive_url              string                                       `json:"archive_url"`
	Archived                 bool                                         `json:"archived"`
	Assignees_url            string                                       `json:"assignees_url"`
	Blobs_url                string                                       `json:"blobs_url"`
	Branches_url             string                                       `json:"branches_url"`
	Clone_url                string                                       `json:"clone_url"`
	Collaborators_url        string                                       `json:"collaborators_url"`
	Comments_url             string                                       `json:"comments_url"`
	Commits_url              string                                       `json:"commits_url"`
	Compare_url              string                                       `json:"compare_url"`
	Contents_url             string                                       `json:"contents_url"`
	Contributors_url         string                                       `json:"contributors_url"`
	Created_at               convert.JSONTime                             `json:"created_at"`
	Default_branch           string                                       `json:"default_branch"`
	Delete_branch_on_merge   *bool                                        `json:"delete_branch_on_merge,omitempty"`
	Deployments_url          string                                       `json:"deployments_url"`
	Description              string                                       `json:"description"`
	Disabled                 bool                                         `json:"disabled"`
	Downloads_url            string                                       `json:"downloads_url"`
	Events_url               string                                       `json:"events_url"`
	Fork                     bool                                         `json:"fork"`
	Forks                    int64                                        `json:"forks"`
	Forks_count              int64                                        `json:"forks_count"`
	Forks_url                string                                       `json:"forks_url"`
	Full_name                string                                       `json:"full_name"`
	Git_commits_url          string                                       `json:"git_commits_url"`
	Git_refs_url             string                                       `json:"git_refs_url"`
	Git_tags_url             string                                       `json:"git_tags_url"`
	Git_url                  string                                       `json:"git_url"`
	Has_downloads            bool                                         `json:"has_downloads"`
	Has_issues               bool                                         `json:"has_issues"`
	Has_pages                bool                                         `json:"has_pages"`
	Has_projects             bool                                         `json:"has_projects"`
	Has_wiki                 bool                                         `json:"has_wiki"`
	Homepage                 string                                       `json:"homepage"`
	Hooks_url                string                                       `json:"hooks_url"`
	Html_url                 string                                       `json:"html_url"`
	ID                       int64                                        `json:"id"`
	Is_template              *bool                                        `json:"is_template,omitempty"`
	Issue_comment_url        string                                       `json:"issue_comment_url"`
	Issue_events_url         string                                       `json:"issue_events_url"`
	Issues_url               string                                       `json:"issues_url"`
	Keys_url                 string                                       `json:"keys_url"`
	Labels_url               string                                       `json:"labels_url"`
	Language                 string                                       `json:"language"`
	Languages_url            string                                       `json:"languages_url"`
	License                  EXTERNAL_fullRepository_license              `json:"license"`
	Master_branch            *string                                      `json:"master_branch,omitempty"`
	Merges_url               string                                       `json:"merges_url"`
	Milestones_url           string                                       `json:"milestones_url"`
	Mirror_url               string                                       `json:"mirror_url"`
	Name                     string                                       `json:"name"`
	Network_count            int64                                        `json:"network_count"`
	Node_id                  string                                       `json:"node_id"`
	Notifications_url        string                                       `json:"notifications_url"`
	Open_issues              int64                                        `json:"open_issues"`
	Open_issues_count        int64                                        `json:"open_issues_count"`
	Organization             *EXTERNAL_fullRepository_organization        `json:"organization,omitempty"`
	Owner                    EXTERNAL_fullRepository_owner                `json:"owner"`
	Parent                   *Repository                                  `json:"parent,omitempty"`
	Permissions              *FullRepository_permissions                  `json:"permissions,omitempty"`
	Private                  bool                                         `json:"private"`
	Pulls_url                string                                       `json:"pulls_url"`
	Pushed_at                convert.JSONTime                             `json:"pushed_at"`
	Releases_url             string                                       `json:"releases_url"`
	Size                     int64                                        `json:"size"`
	Source                   *Repository                                  `json:"source,omitempty"`
	Ssh_url                  string                                       `json:"ssh_url"`
	Stargazers_count         int64                                        `json:"stargazers_count"`
	Stargazers_url           string                                       `json:"stargazers_url"`
	Statuses_url             string                                       `json:"statuses_url"`
	Subscribers_count        int64                                        `json:"subscribers_count"`
	Subscribers_url          string                                       `json:"subscribers_url"`
	Subscription_url         string                                       `json:"subscription_url"`
	Svn_url                  string                                       `json:"svn_url"`
	Tags_url                 string                                       `json:"tags_url"`
	Teams_url                string                                       `json:"teams_url"`
	Temp_clone_token         *string                                      `json:"temp_clone_token,omitempty"`
	Template_repository      *EXTERNAL_fullRepository_template_repository `json:"template_repository,omitempty"`
	Topics                   []string                                     `json:"topics,omitempty"`
	Trees_url                string                                       `json:"trees_url"`
	Updated_at               convert.JSONTime                             `json:"updated_at"`
	URL                      string                                       `json:"url"`
	Visibility               *string                                      `json:"visibility,omitempty"`
	Watchers                 int64                                        `json:"watchers"`
	Watchers_count           int64                                        `json:"watchers_count"`
}

// FullRepository_permissions ...
type FullRepository_permissions struct {
	Admin bool `json:"admin"`
	Pull  bool `json:"pull"`
	Push  bool `json:"push"`
}

// GistComment ...
type GistComment struct {
	Author_association string                    `json:"author_association"`
	Body               string                    `json:"body"`
	Created_at         convert.JSONTime          `json:"created_at"`
	ID                 int64                     `json:"id"`
	Node_id            string                    `json:"node_id"`
	Updated_at         convert.JSONTime          `json:"updated_at"`
	URL                string                    `json:"url"`
	User               EXTERNAL_gistComment_user `json:"user"`
}

// GistCommit ...
type GistCommit struct {
	Change_status GistCommit_change_status `json:"change_status"`
	Committed_at  convert.JSONTime         `json:"committed_at"`
	URL           string                   `json:"url"`
	User          EXTERNAL_gistCommit_user `json:"user"`
	Version       string                   `json:"version"`
}

// GistCommit_change_status ...
type GistCommit_change_status struct {
	Additions *int64 `json:"additions,omitempty"`
	Deletions *int64 `json:"deletions,omitempty"`
	Total     *int64 `json:"total,omitempty"`
}

// GistSimple ...
type GistSimple struct {
	Comments     *int64                     `json:"comments,omitempty"`
	Comments_url *string                    `json:"comments_url,omitempty"`
	Commits_url  *string                    `json:"commits_url,omitempty"`
	Created_at   *string                    `json:"created_at,omitempty"`
	Description  *string                    `json:"description,omitempty"`
	Files        *EXTERNAL_gistSimple_files `json:"files,omitempty"`
	Forks_url    *string                    `json:"forks_url,omitempty"`
	Git_pull_url *string                    `json:"git_pull_url,omitempty"`
	Git_push_url *string                    `json:"git_push_url,omitempty"`
	Html_url     *string                    `json:"html_url,omitempty"`
	ID           *string                    `json:"id,omitempty"`
	Node_id      *string                    `json:"node_id,omitempty"`
	Owner        *SimpleUser                `json:"owner,omitempty"`
	Public       *bool                      `json:"public,omitempty"`
	Truncated    *bool                      `json:"truncated,omitempty"`
	Updated_at   *string                    `json:"updated_at,omitempty"`
	URL          *string                    `json:"url,omitempty"`
	User         *string                    `json:"user,omitempty"`
}

// GitCommit ...
type GitCommit struct {
	Author       *GitCommit_author       `json:"author,omitempty"`
	Committer    *GitCommit_committer    `json:"committer,omitempty"`
	Html_url     *string                 `json:"html_url,omitempty"`
	Message      *string                 `json:"message,omitempty"`
	Node_id      *string                 `json:"node_id,omitempty"`
	Parents      []GitCommit_parents     `json:"parents,omitempty"`
	Sha          *string                 `json:"sha,omitempty"`
	Tree         *GitCommit_tree         `json:"tree,omitempty"`
	URL          *string                 `json:"url,omitempty"`
	Verification *GitCommit_verification `json:"verification,omitempty"`
}

// GitCommit_author ...
type GitCommit_author struct {
	Date_ *convert.JSONTime `json:"date,omitempty"`
	Email string            `json:"email"`
	Name  string            `json:"name"`
}

// GitCommit_committer ...
type GitCommit_committer struct {
	Date_ *convert.JSONTime `json:"date,omitempty"`
	Email string            `json:"email"`
	Name  string            `json:"name"`
}

// GitCommit_parents ...
type GitCommit_parents struct {
	Html_url *string `json:"html_url,omitempty"`
	Sha      *string `json:"sha,omitempty"`
	URL      *string `json:"url,omitempty"`
}

// GitCommit_tree ...
type GitCommit_tree struct {
	Sha *string `json:"sha,omitempty"`
	URL *string `json:"url,omitempty"`
}

// GitCommit_verification ...
type GitCommit_verification struct {
	Payload   *string `json:"payload,omitempty"`
	Reason    *string `json:"reason,omitempty"`
	Signature *string `json:"signature,omitempty"`
	Verified  *bool   `json:"verified,omitempty"`
}

// GitRef ...
type GitRef struct {
	Node_id *string        `json:"node_id,omitempty"`
	Object  *GitRef_object `json:"object,omitempty"`
	Ref     *string        `json:"ref,omitempty"`
	URL     *string        `json:"url,omitempty"`
}

// GitRef_object ...
type GitRef_object struct {
	Sha  *string `json:"sha,omitempty"`
	Type *string `json:"type,omitempty"`
	URL  *string `json:"url,omitempty"`
}

// GitTag ...
type GitTag struct {
	Message      string        `json:"message"`
	Node_id      string        `json:"node_id"`
	Object       GitTag_object `json:"object"`
	Sha          string        `json:"sha"`
	Tag          string        `json:"tag"`
	Tagger       GitTag_tagger `json:"tagger"`
	URL          string        `json:"url"`
	Verification *Verification `json:"verification,omitempty"`
}

// GitTag_object ...
type GitTag_object struct {
	Sha  string `json:"sha"`
	Type string `json:"type"`
	URL  string `json:"url"`
}

// GitTag_tagger ...
type GitTag_tagger struct {
	Date_ string `json:"date"`
	Email string `json:"email"`
	Name  string `json:"name"`
}

// GitTree ...
type GitTree struct {
	Sha       string         `json:"sha"`
	Tree      []GitTree_tree `json:"tree"`
	Truncated bool           `json:"truncated"`
	URL       string         `json:"url"`
}

// GitTree_tree ...
type GitTree_tree struct {
	Mode *string `json:"mode,omitempty"`
	Path *string `json:"path,omitempty"`
	Sha  *string `json:"sha,omitempty"`
	Size *int64  `json:"size,omitempty"`
	Type *string `json:"type,omitempty"`
	URL  *string `json:"url,omitempty"`
}

// GitUser ...
type GitUser struct {
	Date_ *string `json:"date,omitempty"`
	Email *string `json:"email,omitempty"`
	Name  *string `json:"name,omitempty"`
}

// GitignoreTemplate ...
type GitignoreTemplate struct {
	Name   string `json:"name"`
	Source string `json:"source"`
}

// GpgKey ...
type GpgKey struct {
	Can_certify         bool             `json:"can_certify"`
	Can_encrypt_comms   bool             `json:"can_encrypt_comms"`
	Can_encrypt_storage bool             `json:"can_encrypt_storage"`
	Can_sign            bool             `json:"can_sign"`
	Created_at          convert.JSONTime `json:"created_at"`
	Emails              []GpgKey_emails  `json:"emails"`
	Expires_at          convert.JSONTime `json:"expires_at"`
	ID                  int64            `json:"id"`
	Key_id              string           `json:"key_id"`
	Primary_key_id      int64            `json:"primary_key_id"`
	Public_key          string           `json:"public_key"`
	Raw_key             string           `json:"raw_key"`
	Subkeys             []GpgKey_subkeys `json:"subkeys"`
}

// GpgKey_emails ...
type GpgKey_emails struct {
	Email    *string `json:"email,omitempty"`
	Verified *bool   `json:"verified,omitempty"`
}

// GpgKey_subkeys ...
type GpgKey_subkeys struct {
	Can_certify         *bool                             `json:"can_certify,omitempty"`
	Can_encrypt_comms   *bool                             `json:"can_encrypt_comms,omitempty"`
	Can_encrypt_storage *bool                             `json:"can_encrypt_storage,omitempty"`
	Can_sign            *bool                             `json:"can_sign,omitempty"`
	Created_at          *string                           `json:"created_at,omitempty"`
	Emails              []EXTERNAL_gpgKey_subkeys_emails  `json:"emails,omitempty"`
	Expires_at          *string                           `json:"expires_at,omitempty"`
	ID                  *int64                            `json:"id,omitempty"`
	Key_id              *string                           `json:"key_id,omitempty"`
	Primary_key_id      *int64                            `json:"primary_key_id,omitempty"`
	Public_key          *string                           `json:"public_key,omitempty"`
	Raw_key             *string                           `json:"raw_key,omitempty"`
	Subkeys             []EXTERNAL_gpgKey_subkeys_subkeys `json:"subkeys,omitempty"`
}

// GroupMapping ...
type GroupMapping struct {
	Group_description *string               `json:"group_description,omitempty"`
	Group_id          *string               `json:"group_id,omitempty"`
	Group_name        *string               `json:"group_name,omitempty"`
	Groups            []GroupMapping_groups `json:"groups,omitempty"`
	Status            *string               `json:"status,omitempty"`
	Synced_at         *string               `json:"synced_at,omitempty"`
}

// GroupMapping_groups ...
type GroupMapping_groups struct {
	Group_description string `json:"group_description"`
	Group_id          string `json:"group_id"`
	Group_name        string `json:"group_name"`
}

// Hook ...
type Hook struct {
	Active        bool             `json:"active"`
	Config        Hook_config      `json:"config"`
	Created_at    convert.JSONTime `json:"created_at"`
	Events        []string         `json:"events"`
	ID            int64            `json:"id"`
	Last_response HookResponse     `json:"last_response"`
	Name          string           `json:"name"`
	Ping_url      string           `json:"ping_url"`
	Test_url      string           `json:"test_url"`
	Type          string           `json:"type"`
	Updated_at    convert.JSONTime `json:"updated_at"`
	URL           string           `json:"url"`
}

// HookResponse ...
type HookResponse struct {
	Code    int64  `json:"code"`
	Message string `json:"message"`
	Status  string `json:"status"`
}

// Hook_config ...
type Hook_config struct {
	Content_type *string `json:"content_type,omitempty"`
	Digest       *string `json:"digest,omitempty"`
	Email        *string `json:"email,omitempty"`
	Insecure_ssl *string `json:"insecure_ssl,omitempty"`
	Password     *string `json:"password,omitempty"`
	Room         *string `json:"room,omitempty"`
	Secret       *string `json:"secret,omitempty"`
	Subdomain    *string `json:"subdomain,omitempty"`
	Token        *string `json:"token,omitempty"`
	URL          *string `json:"url,omitempty"`
}

// Hovercard ...
type Hovercard struct {
	Contexts []Hovercard_contexts `json:"contexts"`
}

// Hovercard_contexts ...
type Hovercard_contexts struct {
	Message string `json:"message"`
	Octicon string `json:"octicon"`
}

// Import ...
type Import struct {
	Authors_count     *int64                   `json:"authors_count,omitempty"`
	Authors_url       string                   `json:"authors_url"`
	Commit_count      *int64                   `json:"commit_count,omitempty"`
	Error_message     *string                  `json:"error_message,omitempty"`
	Failed_step       *string                  `json:"failed_step,omitempty"`
	Has_large_files   *bool                    `json:"has_large_files,omitempty"`
	Html_url          string                   `json:"html_url"`
	Import_percent    *int64                   `json:"import_percent,omitempty"`
	Large_files_count *int64                   `json:"large_files_count,omitempty"`
	Large_files_size  *int64                   `json:"large_files_size,omitempty"`
	Message           *string                  `json:"message,omitempty"`
	Project_choices   []Import_project_choices `json:"project_choices,omitempty"`
	Push_percent      *int64                   `json:"push_percent,omitempty"`
	Repository_url    string                   `json:"repository_url"`
	Status            string                   `json:"status"`
	Status_text       *string                  `json:"status_text,omitempty"`
	Svc_root          *string                  `json:"svc_root,omitempty"`
	Svn_root          *string                  `json:"svn_root,omitempty"`
	Tfvc_project      *string                  `json:"tfvc_project,omitempty"`
	URL               string                   `json:"url"`
	Use_lfs           *string                  `json:"use_lfs,omitempty"`
	Vcs               string                   `json:"vcs"`
	Vcs_url           string                   `json:"vcs_url"`
}

// Import_project_choices ...
type Import_project_choices struct {
	Human_name   *string `json:"human_name,omitempty"`
	Tfvc_project *string `json:"tfvc_project,omitempty"`
	Vcs          *string `json:"vcs,omitempty"`
}

// Installation ...
type Installation struct {
	Access_tokens_url    string                              `json:"access_tokens_url"`
	Account              EXTERNAL_installation_account       `json:"account"`
	App_id               int64                               `json:"app_id"`
	App_slug             string                              `json:"app_slug"`
	Contact_email        *string                             `json:"contact_email,omitempty"`
	Created_at           convert.JSONTime                    `json:"created_at"`
	Events               []string                            `json:"events"`
	Html_url             string                              `json:"html_url"`
	ID                   int64                               `json:"id"`
	Permissions          Installation_permissions            `json:"permissions"`
	Repositories_url     string                              `json:"repositories_url"`
	Repository_selection string                              `json:"repository_selection"`
	Single_file_name     string                              `json:"single_file_name"`
	Suspended_at         *convert.JSONTime                   `json:"suspended_at,omitempty"`
	Suspended_by         *EXTERNAL_installation_suspended_by `json:"suspended_by,omitempty"`
	Target_id            int64                               `json:"target_id"`
	Target_type          string                              `json:"target_type"`
	Updated_at           convert.JSONTime                    `json:"updated_at"`
}

// InstallationToken ...
type InstallationToken struct {
	Expires_at           *string                        `json:"expires_at,omitempty"`
	Permissions          *InstallationToken_permissions `json:"permissions,omitempty"`
	Repositories         []Repository                   `json:"repositories,omitempty"`
	Repository_selection *string                        `json:"repository_selection,omitempty"`
	Single_file          *string                        `json:"single_file,omitempty"`
	Token                *string                        `json:"token,omitempty"`
}

// InstallationToken_permissions ...
type InstallationToken_permissions struct {
	Contents    *string `json:"contents,omitempty"`
	Issues      *string `json:"issues,omitempty"`
	Metadata    *string `json:"metadata,omitempty"`
	Single_file *string `json:"single_file,omitempty"`
}

// Installation_permissions ...
type Installation_permissions struct {
	Checks                      *string `json:"checks,omitempty"`
	Contents                    *string `json:"contents,omitempty"`
	Deployments                 *string `json:"deployments,omitempty"`
	Issues                      *string `json:"issues,omitempty"`
	Metadata                    *string `json:"metadata,omitempty"`
	Organization_administration *string `json:"organization_administration,omitempty"`
	Pull_requests               *string `json:"pull_requests,omitempty"`
	Statuses                    *string `json:"statuses,omitempty"`
}

// Issue ...
type Issue struct {
	Active_lock_reason       *string                                  `json:"active_lock_reason,omitempty"`
	Assignee                 EXTERNAL_issue_assignee                  `json:"assignee"`
	Assignees                []SimpleUser                             `json:"assignees,omitempty"`
	Author_association       string                                   `json:"author_association"`
	Body                     *string                                  `json:"body,omitempty"`
	Body_html                *string                                  `json:"body_html,omitempty"`
	Body_text                *string                                  `json:"body_text,omitempty"`
	Closed_at                convert.JSONTime                         `json:"closed_at"`
	Closed_by                *EXTERNAL_issue_closed_by                `json:"closed_by,omitempty"`
	Comments                 int64                                    `json:"comments"`
	Comments_url             string                                   `json:"comments_url"`
	Created_at               convert.JSONTime                         `json:"created_at"`
	Events_url               string                                   `json:"events_url"`
	Html_url                 string                                   `json:"html_url"`
	ID                       int64                                    `json:"id"`
	Labels                   []Issue_labels                           `json:"labels"`
	Labels_url               string                                   `json:"labels_url"`
	Locked                   bool                                     `json:"locked"`
	Milestone                EXTERNAL_issue_milestone                 `json:"milestone"`
	Node_id                  string                                   `json:"node_id"`
	Number                   int64                                    `json:"number"`
	Performed_via_github_app *EXTERNAL_issue_performed_via_github_app `json:"performed_via_github_app,omitempty"`
	Pull_request             *Issue_pull_request                      `json:"pull_request,omitempty"`
	Reactions                *ReactionRollup                          `json:"reactions,omitempty"`
	Repository               *Repository                              `json:"repository,omitempty"`
	Repository_url           string                                   `json:"repository_url"`
	State                    string                                   `json:"state"`
	Timeline_url             *string                                  `json:"timeline_url,omitempty"`
	Title                    string                                   `json:"title"`
	Updated_at               convert.JSONTime                         `json:"updated_at"`
	URL                      string                                   `json:"url"`
	User                     EXTERNAL_issue_user                      `json:"user"`
}

// IssueComment ...
type IssueComment struct {
	Author_association       string                                          `json:"author_association"`
	Body                     *string                                         `json:"body,omitempty"`
	Body_html                *string                                         `json:"body_html,omitempty"`
	Body_text                *string                                         `json:"body_text,omitempty"`
	Created_at               convert.JSONTime                                `json:"created_at"`
	Html_url                 string                                          `json:"html_url"`
	ID                       int64                                           `json:"id"`
	Issue_url                string                                          `json:"issue_url"`
	Node_id                  string                                          `json:"node_id"`
	Performed_via_github_app *EXTERNAL_issueComment_performed_via_github_app `json:"performed_via_github_app,omitempty"`
	Reactions                *ReactionRollup                                 `json:"reactions,omitempty"`
	Updated_at               convert.JSONTime                                `json:"updated_at"`
	URL                      string                                          `json:"url"`
	User                     EXTERNAL_issueComment_user                      `json:"user"`
}

// IssueEvent ...
type IssueEvent struct {
	Actor              EXTERNAL_issueEvent_actor               `json:"actor"`
	Assignee           *EXTERNAL_issueEvent_assignee           `json:"assignee,omitempty"`
	Assigner           *EXTERNAL_issueEvent_assigner           `json:"assigner,omitempty"`
	Author_association *string                                 `json:"author_association,omitempty"`
	Commit_id          string                                  `json:"commit_id"`
	Commit_url         string                                  `json:"commit_url"`
	Created_at         convert.JSONTime                        `json:"created_at"`
	Dismissed_review   *IssueEventDismissedReview              `json:"dismissed_review,omitempty"`
	Event              string                                  `json:"event"`
	ID                 int64                                   `json:"id"`
	Issue              *IssueSimple                            `json:"issue,omitempty"`
	Label              *IssueEventLabel                        `json:"label,omitempty"`
	Lock_reason        *string                                 `json:"lock_reason,omitempty"`
	Milestone          *IssueEventMilestone                    `json:"milestone,omitempty"`
	Node_id            string                                  `json:"node_id"`
	Project_card       *IssueEventProjectCard                  `json:"project_card,omitempty"`
	Rename             *IssueEventRename                       `json:"rename,omitempty"`
	Requested_reviewer *EXTERNAL_issueEvent_requested_reviewer `json:"requested_reviewer,omitempty"`
	Requested_team     *Team                                   `json:"requested_team,omitempty"`
	Review_requester   *EXTERNAL_issueEvent_review_requester   `json:"review_requester,omitempty"`
	URL                string                                  `json:"url"`
}

// IssueEventDismissedReview ...
type IssueEventDismissedReview struct {
	Dismissal_commit_id *string `json:"dismissal_commit_id,omitempty"`
	Dismissal_message   string  `json:"dismissal_message"`
	Review_id           int64   `json:"review_id"`
	State               string  `json:"state"`
}

// IssueEventForIssue ...
type IssueEventForIssue struct {
	Actor              *SimpleUser `json:"actor,omitempty"`
	Author_association *string     `json:"author_association,omitempty"`
	Body               *string     `json:"body,omitempty"`
	Body_html          *string     `json:"body_html,omitempty"`
	Body_text          *string     `json:"body_text,omitempty"`
	Commit_id          *string     `json:"commit_id,omitempty"`
	Commit_url         *string     `json:"commit_url,omitempty"`
	Created_at         *string     `json:"created_at,omitempty"`
	Event              *string     `json:"event,omitempty"`
	Html_url           *string     `json:"html_url,omitempty"`
	ID                 *int64      `json:"id,omitempty"`
	Issue_url          *string     `json:"issue_url,omitempty"`
	Lock_reason        *string     `json:"lock_reason,omitempty"`
	Message            *string     `json:"message,omitempty"`
	Node_id            *string     `json:"node_id,omitempty"`
	Pull_request_url   *string     `json:"pull_request_url,omitempty"`
	Sha                *string     `json:"sha,omitempty"`
	State              *string     `json:"state,omitempty"`
	Submitted_at       *string     `json:"submitted_at,omitempty"`
	Updated_at         *string     `json:"updated_at,omitempty"`
	URL                *string     `json:"url,omitempty"`
}

// IssueEventLabel ...
type IssueEventLabel struct {
	Color string `json:"color"`
	Name  string `json:"name"`
}

// IssueEventMilestone ...
type IssueEventMilestone struct {
	Title string `json:"title"`
}

// IssueEventProjectCard ...
type IssueEventProjectCard struct {
	Column_name          string  `json:"column_name"`
	ID                   int64   `json:"id"`
	Previous_column_name *string `json:"previous_column_name,omitempty"`
	Project_id           int64   `json:"project_id"`
	Project_url          string  `json:"project_url"`
	URL                  string  `json:"url"`
}

// IssueEventRename ...
type IssueEventRename struct {
	From string `json:"from"`
	To   string `json:"to"`
}

// IssueSearchResultItem ...
type IssueSearchResultItem struct {
	Active_lock_reason       *string                                                  `json:"active_lock_reason,omitempty"`
	Assignee                 EXTERNAL_issueSearchResultItem_assignee                  `json:"assignee"`
	Assignees                []SimpleUser                                             `json:"assignees,omitempty"`
	Author_association       string                                                   `json:"author_association"`
	Body                     *string                                                  `json:"body,omitempty"`
	Body_html                *string                                                  `json:"body_html,omitempty"`
	Body_text                *string                                                  `json:"body_text,omitempty"`
	Closed_at                convert.JSONTime                                         `json:"closed_at"`
	Comments                 int64                                                    `json:"comments"`
	Comments_url             string                                                   `json:"comments_url"`
	Created_at               convert.JSONTime                                         `json:"created_at"`
	Draft                    *bool                                                    `json:"draft,omitempty"`
	Events_url               string                                                   `json:"events_url"`
	Html_url                 string                                                   `json:"html_url"`
	ID                       int64                                                    `json:"id"`
	Labels                   []IssueSearchResultItem_labels                           `json:"labels"`
	Labels_url               string                                                   `json:"labels_url"`
	Locked                   bool                                                     `json:"locked"`
	Milestone                EXTERNAL_issueSearchResultItem_milestone                 `json:"milestone"`
	Node_id                  string                                                   `json:"node_id"`
	Number                   int64                                                    `json:"number"`
	Performed_via_github_app *EXTERNAL_issueSearchResultItem_performed_via_github_app `json:"performed_via_github_app,omitempty"`
	Pull_request             *IssueSearchResultItem_pull_request                      `json:"pull_request,omitempty"`
	Repository               *Repository                                              `json:"repository,omitempty"`
	Repository_url           string                                                   `json:"repository_url"`
	Score                    int64                                                    `json:"score"`
	State                    string                                                   `json:"state"`
	Text_matches             *SearchResultTextMatches                                 `json:"text_matches,omitempty"`
	Timeline_url             *string                                                  `json:"timeline_url,omitempty"`
	Title                    string                                                   `json:"title"`
	Updated_at               convert.JSONTime                                         `json:"updated_at"`
	URL                      string                                                   `json:"url"`
	User                     EXTERNAL_issueSearchResultItem_user                      `json:"user"`
}

// IssueSearchResultItem_labels ...
type IssueSearchResultItem_labels struct {
	Color       *string `json:"color,omitempty"`
	Default     *bool   `json:"default,omitempty"`
	Description *string `json:"description,omitempty"`
	ID          *int64  `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
	Node_id     *string `json:"node_id,omitempty"`
	URL         *string `json:"url,omitempty"`
}

// IssueSearchResultItem_pull_request ...
type IssueSearchResultItem_pull_request struct {
	Diff_url  string            `json:"diff_url"`
	Html_url  string            `json:"html_url"`
	Merged_at *convert.JSONTime `json:"merged_at,omitempty"`
	Patch_url string            `json:"patch_url"`
	URL       string            `json:"url"`
}

// IssueSimple ...
type IssueSimple struct {
	//Active_lock_reason       *string                                        `json:"active_lock_reason,omitempty"`
	//Assignee                 EXTERNAL_issueSimple_assignee                  `json:"assignee"`
	//Assignees                []SimpleUser                                   `json:"assignees,omitempty"`
	//Author_association       string                                         `json:"author_association"`
	//Body                     *string                                        `json:"body,omitempty"`
	//Body_html                *string                                        `json:"body_html,omitempty"`
	//Body_text                *string                                        `json:"body_text,omitempty"`
	//Closed_at                convert.JSONTime                               `json:"closed_at"`
	//Comments                 int64                                          `json:"comments"`
	//Comments_url             string                                         `json:"comments_url"`
	//Created_at               convert.JSONTime                               `json:"created_at"`
	//Events_url               string                                         `json:"events_url"`
	//Html_url                 string                                         `json:"html_url"`
	ID                       int64                                          `json:"id"`
	//Labels                   []IssueSimple_labels                           `json:"labels"`
	//Labels_url               string                                         `json:"labels_url"`
	//Locked                   bool                                           `json:"locked"`
	//Milestone                EXTERNAL_issueSimple_milestone                 `json:"milestone"`
	//Node_id                  string                                         `json:"node_id"`
	//Number                   int64                                          `json:"number"`
	//Performed_via_github_app *EXTERNAL_issueSimple_performed_via_github_app `json:"performed_via_github_app,omitempty"`
	//Pull_request             *IssueSimple_pull_request                      `json:"pull_request,omitempty"`
	//Repository               *Repository                                    `json:"repository,omitempty"`
	//Repository_url           string                                         `json:"repository_url"`
	//State                    string                                         `json:"state"`
	//Timeline_url             *string                                        `json:"timeline_url,omitempty"`
	Title                    string                                         `json:"title"`
	//Updated_at               convert.JSONTime                               `json:"updated_at"`
	//URL                      string                                         `json:"url"`
	//User                     EXTERNAL_issueSimple_user                      `json:"user"`
}

// IssueSimple_labels ...
type IssueSimple_labels struct {
	Color       *string `json:"color,omitempty"`
	Default     *bool   `json:"default,omitempty"`
	Description *string `json:"description,omitempty"`
	ID          *int64  `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
	Node_id     *string `json:"node_id,omitempty"`
	URL         *string `json:"url,omitempty"`
}

// IssueSimple_pull_request ...
type IssueSimple_pull_request struct {
	Diff_url  string            `json:"diff_url"`
	Html_url  string            `json:"html_url"`
	Merged_at *convert.JSONTime `json:"merged_at,omitempty"`
	Patch_url string            `json:"patch_url"`
	URL       string            `json:"url"`
}

// Issue_labels_object ...
type Issue_labels_object struct {
	Color       *string `json:"color,omitempty"`
	Default     *bool   `json:"default,omitempty"`
	Description *string `json:"description,omitempty"`
	ID          *int64  `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
	Node_id     *string `json:"node_id,omitempty"`
	URL         *string `json:"url,omitempty"`
}

// Issue_pull_request ...
type Issue_pull_request struct {
	Diff_url  string            `json:"diff_url"`
	Html_url  string            `json:"html_url"`
	Merged_at *convert.JSONTime `json:"merged_at,omitempty"`
	Patch_url string            `json:"patch_url"`
	URL       string            `json:"url"`
}

// Job ...
type Job struct {
	Check_run_url string           `json:"check_run_url"`
	Completed_at  convert.JSONTime `json:"completed_at"`
	Conclusion    string           `json:"conclusion"`
	Head_sha      string           `json:"head_sha"`
	Html_url      string           `json:"html_url"`
	ID            int64            `json:"id"`
	Name          string           `json:"name"`
	Node_id       string           `json:"node_id"`
	Run_id        int64            `json:"run_id"`
	Run_url       string           `json:"run_url"`
	Started_at    convert.JSONTime `json:"started_at"`
	Status        string           `json:"status"`
	Steps         []Job_steps      `json:"steps,omitempty"`
	URL           string           `json:"url"`
}

// Job_steps ...
type Job_steps struct {
	Completed_at *convert.JSONTime `json:"completed_at,omitempty"`
	Conclusion   string            `json:"conclusion"`
	Name         string            `json:"name"`
	Number       int64             `json:"number"`
	Started_at   *convert.JSONTime `json:"started_at,omitempty"`
	Status       string            `json:"status"`
}

// Key ...
type Key struct {
	Created_at *convert.JSONTime `json:"created_at,omitempty"`
	ID         *int64            `json:"id,omitempty"`
	Key        *string           `json:"key,omitempty"`
	Key_id     *string           `json:"key_id,omitempty"`
	Read_only  *bool             `json:"read_only,omitempty"`
	Title      *string           `json:"title,omitempty"`
	URL        *string           `json:"url,omitempty"`
	Verified   *bool             `json:"verified,omitempty"`
}

// KeySimple ...
type KeySimple struct {
	ID  int64  `json:"id"`
	Key string `json:"key"`
}

// Label ...
type Label struct {
	Color       string  `json:"color"`
	Default     bool    `json:"default"`
	Description *string `json:"description,omitempty"`
	ID          int64   `json:"id"`
	Name        string  `json:"name"`
	Node_id     string  `json:"node_id"`
	URL         string  `json:"url"`
}

// LabelSearchResultItem ...
type LabelSearchResultItem struct {
	Color        string                   `json:"color"`
	Default      bool                     `json:"default"`
	Description  string                   `json:"description"`
	ID           int64                    `json:"id"`
	Name         string                   `json:"name"`
	Node_id      string                   `json:"node_id"`
	Score        int64                    `json:"score"`
	Text_matches *SearchResultTextMatches `json:"text_matches,omitempty"`
	URL          string                   `json:"url"`
}

// License ...
type License struct {
	Body           string   `json:"body"`
	Conditions     []string `json:"conditions"`
	Description    string   `json:"description"`
	Featured       bool     `json:"featured"`
	Html_url       string   `json:"html_url"`
	Implementation string   `json:"implementation"`
	Key            string   `json:"key"`
	Limitations    []string `json:"limitations"`
	Name           string   `json:"name"`
	Node_id        string   `json:"node_id"`
	Permissions    []string `json:"permissions"`
	Spdx_id        string   `json:"spdx_id"`
	URL            string   `json:"url"`
}

// LicenseContent ...
type LicenseContent struct {
	_links       LicenseContent__links           `json:"_links"`
	Content      string                          `json:"content"`
	Download_url string                          `json:"download_url"`
	Encoding     string                          `json:"encoding"`
	Git_url      string                          `json:"git_url"`
	Html_url     string                          `json:"html_url"`
	License      EXTERNAL_licenseContent_license `json:"license"`
	Name         string                          `json:"name"`
	Path         string                          `json:"path"`
	Sha          string                          `json:"sha"`
	Size         int64                           `json:"size"`
	Type         string                          `json:"type"`
	URL          string                          `json:"url"`
}

// LicenseContent__links ...
type LicenseContent__links struct {
	Git  string `json:"git"`
	HTML string `json:"html"`
	Self string `json:"self"`
}

// LicenseSimple ...
type LicenseSimple struct {
	Html_url *string `json:"html_url,omitempty"`
	Key      string  `json:"key"`
	Name     string  `json:"name"`
	Node_id  string  `json:"node_id"`
	Spdx_id  string  `json:"spdx_id"`
	URL      string  `json:"url"`
}

// Link ...
type Link struct {
	Href string `json:"href"`
}

// LinkWithType ...
type LinkWithType struct {
	Href string `json:"href"`
	Type string `json:"type"`
}

// MarketplaceAccount ...
type MarketplaceAccount struct {
	Email                      *string `json:"email,omitempty"`
	ID                         int64   `json:"id"`
	Login                      string  `json:"login"`
	Node_id                    *string `json:"node_id,omitempty"`
	Organization_billing_email *string `json:"organization_billing_email,omitempty"`
	Type                       string  `json:"type"`
	URL                        string  `json:"url"`
}

// MarketplaceListingPlan ...
type MarketplaceListingPlan struct {
	Accounts_url           string   `json:"accounts_url"`
	Bullets                []string `json:"bullets"`
	Description            string   `json:"description"`
	Has_free_trial         bool     `json:"has_free_trial"`
	ID                     int64    `json:"id"`
	Monthly_price_in_cents int64    `json:"monthly_price_in_cents"`
	Name                   string   `json:"name"`
	Number                 int64    `json:"number"`
	Price_model            string   `json:"price_model"`
	State                  string   `json:"state"`
	Unit_name              string   `json:"unit_name"`
	URL                    string   `json:"url"`
	Yearly_price_in_cents  int64    `json:"yearly_price_in_cents"`
}

// MarketplacePurchase ...
type MarketplacePurchase struct {
	ID                         int64                                           `json:"id"`
	Login                      string                                          `json:"login"`
	Marketplace_pending_change *MarketplacePurchase_marketplace_pending_change `json:"marketplace_pending_change,omitempty"`
	Marketplace_purchase       MarketplacePurchase_marketplace_purchase        `json:"marketplace_purchase"`
	Organization_billing_email *string                                         `json:"organization_billing_email,omitempty"`
	Type                       string                                          `json:"type"`
	URL                        string                                          `json:"url"`
}

// MarketplacePurchase_marketplace_pending_change ...
type MarketplacePurchase_marketplace_pending_change struct {
	Effective_date *string                 `json:"effective_date,omitempty"`
	ID             *int64                  `json:"id,omitempty"`
	Is_installed   *bool                   `json:"is_installed,omitempty"`
	Plan           *MarketplaceListingPlan `json:"plan,omitempty"`
	Unit_count     *int64                  `json:"unit_count,omitempty"`
}

// MarketplacePurchase_marketplace_purchase ...
type MarketplacePurchase_marketplace_purchase struct {
	Billing_cycle      *string                 `json:"billing_cycle,omitempty"`
	Free_trial_ends_on *string                 `json:"free_trial_ends_on,omitempty"`
	Is_installed       *bool                   `json:"is_installed,omitempty"`
	Next_billing_date  *string                 `json:"next_billing_date,omitempty"`
	On_free_trial      *bool                   `json:"on_free_trial,omitempty"`
	Plan               *MarketplaceListingPlan `json:"plan,omitempty"`
	Unit_count         *int64                  `json:"unit_count,omitempty"`
	Updated_at         *string                 `json:"updated_at,omitempty"`
}

// Migration ...
type Migration struct {
	Archive_url         *string                      `json:"archive_url,omitempty"`
	Created_at          convert.JSONTime             `json:"created_at"`
	Exclude             []EXTERNAL_migration_exclude `json:"exclude,omitempty"`
	Exclude_attachments bool                         `json:"exclude_attachments"`
	GUID                string                       `json:"guid"`
	ID                  int64                        `json:"id"`
	Lock_repositories   bool                         `json:"lock_repositories"`
	Node_id             string                       `json:"node_id"`
	Owner               EXTERNAL_migration_owner     `json:"owner"`
	Repositories        []Repository                 `json:"repositories"`
	State               string                       `json:"state"`
	Updated_at          convert.JSONTime             `json:"updated_at"`
	URL                 string                       `json:"url"`
}

// Milestone ...
type Milestone struct {
	Closed_at     convert.JSONTime           `json:"closed_at"`
	Closed_issues int64                      `json:"closed_issues"`
	Created_at    convert.JSONTime           `json:"created_at"`
	Creator       EXTERNAL_milestone_creator `json:"creator"`
	Description   string                     `json:"description"`
	Due_on        convert.JSONTime           `json:"due_on"`
	Html_url      string                     `json:"html_url"`
	ID            int64                      `json:"id"`
	Labels_url    string                     `json:"labels_url"`
	Node_id       string                     `json:"node_id"`
	Number        int64                      `json:"number"`
	Open_issues   int64                      `json:"open_issues"`
	State         string                     `json:"state"`
	Title         string                     `json:"title"`
	Updated_at    convert.JSONTime           `json:"updated_at"`
	URL           string                     `json:"url"`
}

// MinimalRepository ...
type MinimalRepository struct {
	Archive_url            string                           `json:"archive_url"`
	Archived               *bool                            `json:"archived,omitempty"`
	Assignees_url          string                           `json:"assignees_url"`
	Blobs_url              string                           `json:"blobs_url"`
	Branches_url           string                           `json:"branches_url"`
	Clone_url              *string                          `json:"clone_url,omitempty"`
	Collaborators_url      string                           `json:"collaborators_url"`
	Comments_url           string                           `json:"comments_url"`
	Commits_url            string                           `json:"commits_url"`
	Compare_url            string                           `json:"compare_url"`
	Contents_url           string                           `json:"contents_url"`
	Contributors_url       string                           `json:"contributors_url"`
	Created_at             *convert.JSONTime                `json:"created_at,omitempty"`
	Default_branch         *string                          `json:"default_branch,omitempty"`
	Delete_branch_on_merge *bool                            `json:"delete_branch_on_merge,omitempty"`
	Deployments_url        string                           `json:"deployments_url"`
	Description            string                           `json:"description"`
	Disabled               *bool                            `json:"disabled,omitempty"`
	Downloads_url          string                           `json:"downloads_url"`
	Events_url             string                           `json:"events_url"`
	Fork                   bool                             `json:"fork"`
	Forks                  *int64                           `json:"forks,omitempty"`
	Forks_count            *int64                           `json:"forks_count,omitempty"`
	Forks_url              string                           `json:"forks_url"`
	Full_name              string                           `json:"full_name"`
	Git_commits_url        string                           `json:"git_commits_url"`
	Git_refs_url           string                           `json:"git_refs_url"`
	Git_tags_url           string                           `json:"git_tags_url"`
	Git_url                *string                          `json:"git_url,omitempty"`
	Has_downloads          *bool                            `json:"has_downloads,omitempty"`
	Has_issues             *bool                            `json:"has_issues,omitempty"`
	Has_pages              *bool                            `json:"has_pages,omitempty"`
	Has_projects           *bool                            `json:"has_projects,omitempty"`
	Has_wiki               *bool                            `json:"has_wiki,omitempty"`
	Homepage               *string                          `json:"homepage,omitempty"`
	Hooks_url              string                           `json:"hooks_url"`
	Html_url               string                           `json:"html_url"`
	ID                     int64                            `json:"id"`
	Is_template            *bool                            `json:"is_template,omitempty"`
	Issue_comment_url      string                           `json:"issue_comment_url"`
	Issue_events_url       string                           `json:"issue_events_url"`
	Issues_url             string                           `json:"issues_url"`
	Keys_url               string                           `json:"keys_url"`
	Labels_url             string                           `json:"labels_url"`
	Language               *string                          `json:"language,omitempty"`
	Languages_url          string                           `json:"languages_url"`
	License                *MinimalRepository_license       `json:"license,omitempty"`
	Merges_url             string                           `json:"merges_url"`
	Milestones_url         string                           `json:"milestones_url"`
	Mirror_url             *string                          `json:"mirror_url,omitempty"`
	Name                   string                           `json:"name"`
	Network_count          *int64                           `json:"network_count,omitempty"`
	Node_id                string                           `json:"node_id"`
	Notifications_url      string                           `json:"notifications_url"`
	Open_issues            *int64                           `json:"open_issues,omitempty"`
	Open_issues_count      *int64                           `json:"open_issues_count,omitempty"`
	Owner                  EXTERNAL_minimalRepository_owner `json:"owner"`
	Permissions            *MinimalRepository_permissions   `json:"permissions,omitempty"`
	Private                bool                             `json:"private"`
	Pulls_url              string                           `json:"pulls_url"`
	Pushed_at              *convert.JSONTime                `json:"pushed_at,omitempty"`
	Releases_url           string                           `json:"releases_url"`
	Size                   *int64                           `json:"size,omitempty"`
	Ssh_url                *string                          `json:"ssh_url,omitempty"`
	Stargazers_count       *int64                           `json:"stargazers_count,omitempty"`
	Stargazers_url         string                           `json:"stargazers_url"`
	Statuses_url           string                           `json:"statuses_url"`
	Subscribers_count      *int64                           `json:"subscribers_count,omitempty"`
	Subscribers_url        string                           `json:"subscribers_url"`
	Subscription_url       string                           `json:"subscription_url"`
	Svn_url                *string                          `json:"svn_url,omitempty"`
	Tags_url               string                           `json:"tags_url"`
	Teams_url              string                           `json:"teams_url"`
	Temp_clone_token       *string                          `json:"temp_clone_token,omitempty"`
	Template_repository    *string                          `json:"template_repository,omitempty"`
	Topics                 []string                         `json:"topics,omitempty"`
	Trees_url              string                           `json:"trees_url"`
	Updated_at             *convert.JSONTime                `json:"updated_at,omitempty"`
	URL                    string                           `json:"url"`
	Visibility             *string                          `json:"visibility,omitempty"`
	Watchers               *int64                           `json:"watchers,omitempty"`
	Watchers_count         *int64                           `json:"watchers_count,omitempty"`
}

// MinimalRepository_license ...
type MinimalRepository_license struct {
	Key     *string `json:"key,omitempty"`
	Name    *string `json:"name,omitempty"`
	Node_id *string `json:"node_id,omitempty"`
	Spdx_id *string `json:"spdx_id,omitempty"`
	URL     *string `json:"url,omitempty"`
}

// MinimalRepository_permissions ...
type MinimalRepository_permissions struct {
	Admin *bool `json:"admin,omitempty"`
	Pull  *bool `json:"pull,omitempty"`
	Push  *bool `json:"push,omitempty"`
}

// Object ...
type Object struct {
	Assignee          *string         `json:"assignee,omitempty"`
	Assignees         []string        `json:"assignees,omitempty"`
	Body              *string         `json:"body,omitempty"`
	Code              *string         `json:"code,omitempty"`
	Documentation_url *string         `json:"documentation_url,omitempty"`
	Labels            []Object_labels `json:"labels,omitempty"`
	Message           *string         `json:"message,omitempty"`
	Milestone         *int64          `json:"milestone,omitempty"`
	Title             string          `json:"title"`
}

// ObjectRequest ...
type ObjectRequest struct {
	Assignee    *string  `json:"assignee,omitempty"`
	Assignees   []string `json:"assignees,omitempty"`
	Body        *string  `json:"body,omitempty"`
	Color       *string  `json:"color,omitempty"`
	Content     string   `json:"content"`
	Description *string  `json:"description,omitempty"`
	Key         string   `json:"key"`
	Labels      []string `json:"labels,omitempty"`
	Lock_reason *string  `json:"lock_reason,omitempty"`
	Milestone   *int64   `json:"milestone,omitempty"`
	Name        string   `json:"name"`
	New_name    *string  `json:"new_name,omitempty"`
	Read_only   *bool    `json:"read_only,omitempty"`
	State       *string  `json:"state,omitempty"`
	Title       *string  `json:"title,omitempty"`
}

// ObjectRequest_labels_object ...
type ObjectRequest_labels_object struct {
	Color       *string `json:"color,omitempty"`
	Description *string `json:"description,omitempty"`
	ID          *int64  `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
}

// Object_labels_object ...
type Object_labels_object struct {
	Color       *string `json:"color,omitempty"`
	Description *string `json:"description,omitempty"`
	ID          *int64  `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
}

// OrgHook ...
type OrgHook struct {
	Active     bool             `json:"active"`
	Config     OrgHook_config   `json:"config"`
	Created_at convert.JSONTime `json:"created_at"`
	Events     []string         `json:"events"`
	ID         int64            `json:"id"`
	Name       string           `json:"name"`
	Ping_url   string           `json:"ping_url"`
	Type       string           `json:"type"`
	Updated_at convert.JSONTime `json:"updated_at"`
	URL        string           `json:"url"`
}

// OrgHook_config ...
type OrgHook_config struct {
	Content_type *string `json:"content_type,omitempty"`
	Insecure_ssl *string `json:"insecure_ssl,omitempty"`
	Secret       *string `json:"secret,omitempty"`
	URL          *string `json:"url,omitempty"`
}

// OrgMembership ...
type OrgMembership struct {
	Organization     OrganizationSimple          `json:"organization"`
	Organization_url string                      `json:"organization_url"`
	Permissions      *OrgMembership_permissions  `json:"permissions,omitempty"`
	Role             string                      `json:"role"`
	State            string                      `json:"state"`
	URL              string                      `json:"url"`
	User             EXTERNAL_orgMembership_user `json:"user"`
}

// OrgMembership_permissions ...
type OrgMembership_permissions struct {
	Can_create_repository bool `json:"can_create_repository"`
}

// OrganizationActionsSecret ...
type OrganizationActionsSecret struct {
	Created_at                convert.JSONTime `json:"created_at"`
	Name                      string           `json:"name"`
	Selected_repositories_url *string          `json:"selected_repositories_url,omitempty"`
	Updated_at                convert.JSONTime `json:"updated_at"`
	Visibility                string           `json:"visibility"`
}

// OrganizationFull ...
type OrganizationFull struct {
	Avatar_url                               string                 `json:"avatar_url"`
	Billing_email                            *string                `json:"billing_email,omitempty"`
	Blog                                     *string                `json:"blog,omitempty"`
	Collaborators                            *int64                 `json:"collaborators,omitempty"`
	Company                                  *string                `json:"company,omitempty"`
	Created_at                               convert.JSONTime       `json:"created_at"`
	Default_repository_permission            *string                `json:"default_repository_permission,omitempty"`
	Description                              string                 `json:"description"`
	Disk_usage                               *int64                 `json:"disk_usage,omitempty"`
	Email                                    *string                `json:"email,omitempty"`
	Events_url                               string                 `json:"events_url"`
	Followers                                int64                  `json:"followers"`
	Following                                int64                  `json:"following"`
	Has_organization_projects                bool                   `json:"has_organization_projects"`
	Has_repository_projects                  bool                   `json:"has_repository_projects"`
	Hooks_url                                string                 `json:"hooks_url"`
	Html_url                                 string                 `json:"html_url"`
	ID                                       int64                  `json:"id"`
	Is_verified                              *bool                  `json:"is_verified,omitempty"`
	Issues_url                               string                 `json:"issues_url"`
	Location                                 *string                `json:"location,omitempty"`
	Login                                    string                 `json:"login"`
	Members_allowed_repository_creation_type *string                `json:"members_allowed_repository_creation_type,omitempty"`
	Members_can_create_internal_repositories *bool                  `json:"members_can_create_internal_repositories,omitempty"`
	Members_can_create_pages                 *bool                  `json:"members_can_create_pages,omitempty"`
	Members_can_create_private_repositories  *bool                  `json:"members_can_create_private_repositories,omitempty"`
	Members_can_create_public_repositories   *bool                  `json:"members_can_create_public_repositories,omitempty"`
	Members_can_create_repositories          *bool                  `json:"members_can_create_repositories,omitempty"`
	Members_url                              string                 `json:"members_url"`
	Name                                     *string                `json:"name,omitempty"`
	Node_id                                  string                 `json:"node_id"`
	Owned_private_repos                      *int64                 `json:"owned_private_repos,omitempty"`
	Plan                                     *OrganizationFull_plan `json:"plan,omitempty"`
	Private_gists                            *int64                 `json:"private_gists,omitempty"`
	Public_gists                             int64                  `json:"public_gists"`
	Public_members_url                       string                 `json:"public_members_url"`
	Public_repos                             int64                  `json:"public_repos"`
	Repos_url                                string                 `json:"repos_url"`
	Total_private_repos                      *int64                 `json:"total_private_repos,omitempty"`
	Twitter_username                         *string                `json:"twitter_username,omitempty"`
	Two_factor_requirement_enabled           *bool                  `json:"two_factor_requirement_enabled,omitempty"`
	Type                                     string                 `json:"type"`
	Updated_at                               convert.JSONTime       `json:"updated_at"`
	URL                                      string                 `json:"url"`
}

// OrganizationFull_plan ...
type OrganizationFull_plan struct {
	Filled_seats  *int64 `json:"filled_seats,omitempty"`
	Name          string `json:"name"`
	Private_repos int64  `json:"private_repos"`
	Seats         *int64 `json:"seats,omitempty"`
	Space         int64  `json:"space"`
}

// OrganizationInvitation ...
type OrganizationInvitation struct {
	Created_at           *string     `json:"created_at,omitempty"`
	Email                *string     `json:"email,omitempty"`
	ID                   *int64      `json:"id,omitempty"`
	Invitation_team_url  *string     `json:"invitation_team_url,omitempty"`
	Invitation_teams_url *string     `json:"invitation_teams_url,omitempty"`
	Inviter              *SimpleUser `json:"inviter,omitempty"`
	Login                *string     `json:"login,omitempty"`
	Node_id              *string     `json:"node_id,omitempty"`
	Role                 *string     `json:"role,omitempty"`
	Team_count           *int64      `json:"team_count,omitempty"`
}

// OrganizationSimple ...
type OrganizationSimple struct {
	Avatar_url         string `json:"avatar_url"`
	Description        string `json:"description"`
	Events_url         string `json:"events_url"`
	Hooks_url          string `json:"hooks_url"`
	ID                 int64  `json:"id"`
	Issues_url         string `json:"issues_url"`
	Login              string `json:"login"`
	Members_url        string `json:"members_url"`
	Node_id            string `json:"node_id"`
	Public_members_url string `json:"public_members_url"`
	Repos_url          string `json:"repos_url"`
	URL                string `json:"url"`
}

// PackagesBillingUsage ...
type PackagesBillingUsage struct {
	Included_gigabytes_bandwidth        *int64 `json:"included_gigabytes_bandwidth,omitempty"`
	Total_gigabytes_bandwidth_used      *int64 `json:"total_gigabytes_bandwidth_used,omitempty"`
	Total_paid_gigabytes_bandwidth_used *int64 `json:"total_paid_gigabytes_bandwidth_used,omitempty"`
}

// Page ...
type Page struct {
	Cname      string           `json:"cname"`
	Custom_404 bool             `json:"custom_404"`
	Html_url   *string          `json:"html_url,omitempty"`
	Source     *PagesSourceHash `json:"source,omitempty"`
	Status     string           `json:"status"`
	URL        string           `json:"url"`
}

// PageBuild ...
type PageBuild struct {
	Commit     string                    `json:"commit"`
	Created_at convert.JSONTime          `json:"created_at"`
	Duration   int64                     `json:"duration"`
	Error_     PageBuild_error           `json:"error"`
	Pusher     EXTERNAL_pageBuild_pusher `json:"pusher"`
	Status     string                    `json:"status"`
	Updated_at convert.JSONTime          `json:"updated_at"`
	URL        string                    `json:"url"`
}

// PageBuildStatus ...
type PageBuildStatus struct {
	Status string `json:"status"`
	URL    string `json:"url"`
}

// PageBuild_error ...
type PageBuild_error struct {
	Message string `json:"message"`
}

// PagesSourceHash ...
type PagesSourceHash struct {
	Branch string `json:"branch"`
	Path   string `json:"path"`
}

// ParticipationStats ...
type ParticipationStats struct {
	All   []int64 `json:"all,omitempty"`
	Owner []int64 `json:"owner,omitempty"`
}

// PorterAuthor ...
type PorterAuthor struct {
	Email       string `json:"email"`
	ID          int64  `json:"id"`
	Import_url  string `json:"import_url"`
	Name        string `json:"name"`
	Remote_id   string `json:"remote_id"`
	Remote_name string `json:"remote_name"`
	URL         string `json:"url"`
}

// PorterLargeFile ...
type PorterLargeFile struct {
	Oid      string `json:"oid"`
	Path     string `json:"path"`
	Ref_name string `json:"ref_name"`
	Size     int64  `json:"size"`
}

// PrivateUser ...
type PrivateUser struct {
	Avatar_url                string            `json:"avatar_url"`
	Bio                       string            `json:"bio"`
	Blog                      string            `json:"blog"`
	Business_plus             *bool             `json:"business_plus,omitempty"`
	Collaborators             int64             `json:"collaborators"`
	Company                   string            `json:"company"`
	Created_at                convert.JSONTime  `json:"created_at"`
	Disk_usage                int64             `json:"disk_usage"`
	Email                     string            `json:"email"`
	Events_url                string            `json:"events_url"`
	Followers                 int64             `json:"followers"`
	Followers_url             string            `json:"followers_url"`
	Following                 int64             `json:"following"`
	Following_url             string            `json:"following_url"`
	Gists_url                 string            `json:"gists_url"`
	Gravatar_id               string            `json:"gravatar_id"`
	Hireable                  bool              `json:"hireable"`
	Html_url                  string            `json:"html_url"`
	ID                        int64             `json:"id"`
	Ldap_dn                   *string           `json:"ldap_dn,omitempty"`
	Location                  string            `json:"location"`
	Login                     string            `json:"login"`
	Name                      string            `json:"name"`
	Node_id                   string            `json:"node_id"`
	Organizations_url         string            `json:"organizations_url"`
	Owned_private_repos       int64             `json:"owned_private_repos"`
	Plan                      *PrivateUser_plan `json:"plan,omitempty"`
	Private_gists             int64             `json:"private_gists"`
	Public_gists              int64             `json:"public_gists"`
	Public_repos              int64             `json:"public_repos"`
	Received_events_url       string            `json:"received_events_url"`
	Repos_url                 string            `json:"repos_url"`
	Site_admin                bool              `json:"site_admin"`
	Starred_url               string            `json:"starred_url"`
	Subscriptions_url         string            `json:"subscriptions_url"`
	Suspended_at              *convert.JSONTime `json:"suspended_at,omitempty"`
	Total_private_repos       int64             `json:"total_private_repos"`
	Twitter_username          *string           `json:"twitter_username,omitempty"`
	Two_factor_authentication bool              `json:"two_factor_authentication"`
	Type                      string            `json:"type"`
	Updated_at                convert.JSONTime  `json:"updated_at"`
	URL                       string            `json:"url"`
}

// PrivateUser_plan ...
type PrivateUser_plan struct {
	Collaborators int64  `json:"collaborators"`
	Name          string `json:"name"`
	Private_repos int64  `json:"private_repos"`
	Space         int64  `json:"space"`
}

// Project ...
type Project struct {
	Body                    string                   `json:"body"`
	Cards_url               *string                  `json:"cards_url,omitempty"`
	Columns_url             string                   `json:"columns_url"`
	Created_at              convert.JSONTime         `json:"created_at"`
	Creator                 EXTERNAL_project_creator `json:"creator"`
	Html_url                string                   `json:"html_url"`
	ID                      int64                    `json:"id"`
	Name                    string                   `json:"name"`
	Node_id                 string                   `json:"node_id"`
	Number                  int64                    `json:"number"`
	Organization_permission *string                  `json:"organization_permission,omitempty"`
	Owner_url               string                   `json:"owner_url"`
	Permissions             *Project_permissions     `json:"permissions,omitempty"`
	Private                 *bool                    `json:"private,omitempty"`
	State                   string                   `json:"state"`
	Updated_at              convert.JSONTime         `json:"updated_at"`
	URL                     string                   `json:"url"`
}

// ProjectCard ...
type ProjectCard struct {
	Archived    *bool                        `json:"archived,omitempty"`
	Column_url  string                       `json:"column_url"`
	Content_url *string                      `json:"content_url,omitempty"`
	Created_at  convert.JSONTime             `json:"created_at"`
	Creator     EXTERNAL_projectCard_creator `json:"creator"`
	ID          int64                        `json:"id"`
	Node_id     string                       `json:"node_id"`
	Note        string                       `json:"note"`
	Project_url string                       `json:"project_url"`
	Updated_at  convert.JSONTime             `json:"updated_at"`
	URL         string                       `json:"url"`
}

// ProjectColumn ...
type ProjectColumn struct {
	Cards_url   string           `json:"cards_url"`
	Created_at  convert.JSONTime `json:"created_at"`
	ID          int64            `json:"id"`
	Name        string           `json:"name"`
	Node_id     string           `json:"node_id"`
	Project_url string           `json:"project_url"`
	Updated_at  convert.JSONTime `json:"updated_at"`
	URL         string           `json:"url"`
}

// Project_permissions ...
type Project_permissions struct {
	Admin bool `json:"admin"`
	Read  bool `json:"read"`
	Write bool `json:"write"`
}

// ProtectedBranch ...
type ProtectedBranch struct {
	Allow_deletions               *ProtectedBranch_allow_deletions               `json:"allow_deletions,omitempty"`
	Allow_force_pushes            *ProtectedBranch_allow_force_pushes            `json:"allow_force_pushes,omitempty"`
	Enforce_admins                *ProtectedBranch_enforce_admins                `json:"enforce_admins,omitempty"`
	Required_linear_history       *ProtectedBranch_required_linear_history       `json:"required_linear_history,omitempty"`
	Required_pull_request_reviews *ProtectedBranch_required_pull_request_reviews `json:"required_pull_request_reviews,omitempty"`
	Required_signatures           *ProtectedBranch_required_signatures           `json:"required_signatures,omitempty"`
	Required_status_checks        *StatusCheckPolicy                             `json:"required_status_checks,omitempty"`
	Restrictions                  *BranchRestrictionPolicy                       `json:"restrictions,omitempty"`
	URL                           string                                         `json:"url"`
}

// ProtectedBranchAdminEnforced ...
type ProtectedBranchAdminEnforced struct {
	Enabled bool   `json:"enabled"`
	URL     string `json:"url"`
}

// ProtectedBranchPullRequestReview ...
type ProtectedBranchPullRequestReview struct {
	Dismiss_stale_reviews           bool                                                     `json:"dismiss_stale_reviews"`
	Dismissal_restrictions          *ProtectedBranchPullRequestReview_dismissal_restrictions `json:"dismissal_restrictions,omitempty"`
	Require_code_owner_reviews      bool                                                     `json:"require_code_owner_reviews"`
	Required_approving_review_count *int64                                                   `json:"required_approving_review_count,omitempty"`
	URL                             *string                                                  `json:"url,omitempty"`
}

// ProtectedBranchPullRequestReview_dismissal_restrictions ...
type ProtectedBranchPullRequestReview_dismissal_restrictions struct {
	Teams     []Team       `json:"teams,omitempty"`
	Teams_url *string      `json:"teams_url,omitempty"`
	URL       *string      `json:"url,omitempty"`
	Users     []SimpleUser `json:"users,omitempty"`
	Users_url *string      `json:"users_url,omitempty"`
}

// ProtectedBranch_allow_deletions ...
type ProtectedBranch_allow_deletions struct {
	Enabled bool `json:"enabled"`
}

// ProtectedBranch_allow_force_pushes ...
type ProtectedBranch_allow_force_pushes struct {
	Enabled bool `json:"enabled"`
}

// ProtectedBranch_enforce_admins ...
type ProtectedBranch_enforce_admins struct {
	Enabled bool   `json:"enabled"`
	URL     string `json:"url"`
}

// ProtectedBranch_required_linear_history ...
type ProtectedBranch_required_linear_history struct {
	Enabled bool `json:"enabled"`
}

// ProtectedBranch_required_pull_request_reviews ...
type ProtectedBranch_required_pull_request_reviews struct {
	Dismiss_stale_reviews           *bool                                                                 `json:"dismiss_stale_reviews,omitempty"`
	Dismissal_restrictions          *ProtectedBranch_required_pull_request_reviews_dismissal_restrictions `json:"dismissal_restrictions,omitempty"`
	Require_code_owner_reviews      *bool                                                                 `json:"require_code_owner_reviews,omitempty"`
	Required_approving_review_count *int64                                                                `json:"required_approving_review_count,omitempty"`
	URL                             string                                                                `json:"url"`
}

// ProtectedBranch_required_pull_request_reviews_dismissal_restrictions ...
type ProtectedBranch_required_pull_request_reviews_dismissal_restrictions struct {
	Teams     []Team       `json:"teams"`
	Teams_url string       `json:"teams_url"`
	URL       string       `json:"url"`
	Users     []SimpleUser `json:"users"`
	Users_url string       `json:"users_url"`
}

// ProtectedBranch_required_signatures ...
type ProtectedBranch_required_signatures struct {
	Enabled bool   `json:"enabled"`
	URL     string `json:"url"`
}

// PublicUser ...
type PublicUser struct {
	Avatar_url          string            `json:"avatar_url"`
	Bio                 string            `json:"bio"`
	Blog                string            `json:"blog"`
	Collaborators       *int64            `json:"collaborators,omitempty"`
	Company             string            `json:"company"`
	Created_at          convert.JSONTime  `json:"created_at"`
	Disk_usage          *int64            `json:"disk_usage,omitempty"`
	Email               string            `json:"email"`
	Events_url          string            `json:"events_url"`
	Followers           int64             `json:"followers"`
	Followers_url       string            `json:"followers_url"`
	Following           int64             `json:"following"`
	Following_url       string            `json:"following_url"`
	Gists_url           string            `json:"gists_url"`
	Gravatar_id         string            `json:"gravatar_id"`
	Hireable            bool              `json:"hireable"`
	Html_url            string            `json:"html_url"`
	ID                  int64             `json:"id"`
	Location            string            `json:"location"`
	Login               string            `json:"login"`
	Name                string            `json:"name"`
	Node_id             string            `json:"node_id"`
	Organizations_url   string            `json:"organizations_url"`
	Owned_private_repos *int64            `json:"owned_private_repos,omitempty"`
	Plan                *PublicUser_plan  `json:"plan,omitempty"`
	Private_gists       *int64            `json:"private_gists,omitempty"`
	Public_gists        int64             `json:"public_gists"`
	Public_repos        int64             `json:"public_repos"`
	Received_events_url string            `json:"received_events_url"`
	Repos_url           string            `json:"repos_url"`
	Site_admin          bool              `json:"site_admin"`
	Starred_url         string            `json:"starred_url"`
	Subscriptions_url   string            `json:"subscriptions_url"`
	Suspended_at        *convert.JSONTime `json:"suspended_at,omitempty"`
	Total_private_repos *int64            `json:"total_private_repos,omitempty"`
	Twitter_username    *string           `json:"twitter_username,omitempty"`
	Type                string            `json:"type"`
	Updated_at          convert.JSONTime  `json:"updated_at"`
	URL                 string            `json:"url"`
}

// PublicUser_plan ...
type PublicUser_plan struct {
	Collaborators int64  `json:"collaborators"`
	Name          string `json:"name"`
	Private_repos int64  `json:"private_repos"`
	Space         int64  `json:"space"`
}

// PullRequest ...
type PullRequest struct {
	_links                PullRequest__links             `json:"_links"`
	Active_lock_reason    *string                        `json:"active_lock_reason,omitempty"`
	Additions             int64                          `json:"additions"`
	Assignee              EXTERNAL_pullRequest_assignee  `json:"assignee"`
	Assignees             []SimpleUser                   `json:"assignees,omitempty"`
	Author_association    string                         `json:"author_association"`
	Base                  PullRequest_base               `json:"base"`
	Body                  string                         `json:"body"`
	Changed_files         int64                          `json:"changed_files"`
	Closed_at             convert.JSONTime               `json:"closed_at"`
	Comments              int64                          `json:"comments"`
	Comments_url          string                         `json:"comments_url"`
	Commits               int64                          `json:"commits"`
	Commits_url           string                         `json:"commits_url"`
	Created_at            convert.JSONTime               `json:"created_at"`
	Deletions             int64                          `json:"deletions"`
	Diff_url              string                         `json:"diff_url"`
	Draft                 *bool                          `json:"draft,omitempty"`
	Head                  PullRequest_head               `json:"head"`
	Html_url              string                         `json:"html_url"`
	ID                    int64                          `json:"id"`
	Issue_url             string                         `json:"issue_url"`
	Labels                []PullRequest_labels           `json:"labels"`
	Locked                bool                           `json:"locked"`
	Maintainer_can_modify bool                           `json:"maintainer_can_modify"`
	Merge_commit_sha      string                         `json:"merge_commit_sha"`
	Mergeable             bool                           `json:"mergeable"`
	Mergeable_state       string                         `json:"mergeable_state"`
	Merged                bool                           `json:"merged"`
	Merged_at             convert.JSONTime               `json:"merged_at"`
	Merged_by             EXTERNAL_pullRequest_merged_by `json:"merged_by"`
	Milestone             EXTERNAL_pullRequest_milestone `json:"milestone"`
	Node_id               string                         `json:"node_id"`
	Number                int64                          `json:"number"`
	Patch_url             string                         `json:"patch_url"`
	Rebaseable            *bool                          `json:"rebaseable,omitempty"`
	Requested_reviewers   []SimpleUser                   `json:"requested_reviewers,omitempty"`
	Requested_teams       []TeamSimple                   `json:"requested_teams,omitempty"`
	Review_comment_url    string                         `json:"review_comment_url"`
	Review_comments       int64                          `json:"review_comments"`
	Review_comments_url   string                         `json:"review_comments_url"`
	State                 string                         `json:"state"`
	Statuses_url          string                         `json:"statuses_url"`
	Title                 string                         `json:"title"`
	Updated_at            convert.JSONTime               `json:"updated_at"`
	URL                   string                         `json:"url"`
	User                  EXTERNAL_pullRequest_user      `json:"user"`
}

// PullRequestMergeResult ...
type PullRequestMergeResult struct {
	Merged  bool   `json:"merged"`
	Message string `json:"message"`
	Sha     string `json:"sha"`
}

// PullRequestMinimal ...
type PullRequestMinimal struct {
	Base   PullRequestMinimal_base `json:"base"`
	Head   PullRequestMinimal_head `json:"head"`
	ID     int64                   `json:"id"`
	Number int64                   `json:"number"`
	URL    string                  `json:"url"`
}

// PullRequestMinimal_base ...
type PullRequestMinimal_base struct {
	Ref  string                       `json:"ref"`
	Repo PullRequestMinimal_base_repo `json:"repo"`
	Sha  string                       `json:"sha"`
}

// PullRequestMinimal_base_repo ...
type PullRequestMinimal_base_repo struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
	URL  string `json:"url"`
}

// PullRequestMinimal_head ...
type PullRequestMinimal_head struct {
	Ref  string                       `json:"ref"`
	Repo PullRequestMinimal_head_repo `json:"repo"`
	Sha  string                       `json:"sha"`
}

// PullRequestMinimal_head_repo ...
type PullRequestMinimal_head_repo struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
	URL  string `json:"url"`
}

// PullRequestReview ...
type PullRequestReview struct {
	_links             PullRequestReview__links        `json:"_links"`
	Author_association string                          `json:"author_association"`
	Body               string                          `json:"body"`
	Body_html          *string                         `json:"body_html,omitempty"`
	Body_text          *string                         `json:"body_text,omitempty"`
	Commit_id          string                          `json:"commit_id"`
	Html_url           string                          `json:"html_url"`
	ID                 int64                           `json:"id"`
	Node_id            string                          `json:"node_id"`
	Pull_request_url   string                          `json:"pull_request_url"`
	State              string                          `json:"state"`
	Submitted_at       *convert.JSONTime               `json:"submitted_at,omitempty"`
	User               EXTERNAL_pullRequestReview_user `json:"user"`
}

// PullRequestReviewComment ...
type PullRequestReviewComment struct {
	_links                 PullRequestReviewComment__links `json:"_links"`
	Author_association     string                          `json:"author_association"`
	Body                   string                          `json:"body"`
	Body_html              *string                         `json:"body_html,omitempty"`
	Body_text              *string                         `json:"body_text,omitempty"`
	Commit_id              string                          `json:"commit_id"`
	Created_at             convert.JSONTime                `json:"created_at"`
	Diff_hunk              string                          `json:"diff_hunk"`
	Html_url               string                          `json:"html_url"`
	ID                     int64                           `json:"id"`
	In_reply_to_id         *int64                          `json:"in_reply_to_id,omitempty"`
	Line                   *int64                          `json:"line,omitempty"`
	Node_id                string                          `json:"node_id"`
	Original_commit_id     string                          `json:"original_commit_id"`
	Original_line          *int64                          `json:"original_line,omitempty"`
	Original_position      int64                           `json:"original_position"`
	Original_start_line    *int64                          `json:"original_start_line,omitempty"`
	Path                   string                          `json:"path"`
	Position               int64                           `json:"position"`
	Pull_request_review_id int64                           `json:"pull_request_review_id"`
	Pull_request_url       string                          `json:"pull_request_url"`
	Reactions              *ReactionRollup                 `json:"reactions,omitempty"`
	Side                   *string                         `json:"side,omitempty"`
	Start_line             *int64                          `json:"start_line,omitempty"`
	Start_side             *string                         `json:"start_side,omitempty"`
	Updated_at             convert.JSONTime                `json:"updated_at"`
	URL                    string                          `json:"url"`
	User                   SimpleUser                      `json:"user"`
}

// PullRequestReviewComment__links ...
type PullRequestReviewComment__links struct {
	HTML         PullRequestReviewComment__links_html         `json:"html"`
	Pull_request PullRequestReviewComment__links_pull_request `json:"pull_request"`
	Self         PullRequestReviewComment__links_self         `json:"self"`
}

// PullRequestReviewComment__links_html ...
type PullRequestReviewComment__links_html struct {
	Href string `json:"href"`
}

// PullRequestReviewComment__links_pull_request ...
type PullRequestReviewComment__links_pull_request struct {
	Href string `json:"href"`
}

// PullRequestReviewComment__links_self ...
type PullRequestReviewComment__links_self struct {
	Href string `json:"href"`
}

// PullRequestReviewRequest ...
type PullRequestReviewRequest struct {
	Teams []PullRequestReviewRequest_teams `json:"teams,omitempty"`
	Users []PullRequestReviewRequest_users `json:"users,omitempty"`
}

// PullRequestReviewRequest_teams ...
type PullRequestReviewRequest_teams struct {
	Description      *string `json:"description,omitempty"`
	Html_url         *string `json:"html_url,omitempty"`
	ID               *int64  `json:"id,omitempty"`
	Members_url      *string `json:"members_url,omitempty"`
	Name             *string `json:"name,omitempty"`
	Node_id          *string `json:"node_id,omitempty"`
	Parent           *string `json:"parent,omitempty"`
	Permission       *string `json:"permission,omitempty"`
	Privacy          *string `json:"privacy,omitempty"`
	Repositories_url *string `json:"repositories_url,omitempty"`
	Slug             *string `json:"slug,omitempty"`
	URL              *string `json:"url,omitempty"`
}

// PullRequestReviewRequest_users ...
type PullRequestReviewRequest_users struct {
	Avatar_url          *string `json:"avatar_url,omitempty"`
	Events_url          *string `json:"events_url,omitempty"`
	Followers_url       *string `json:"followers_url,omitempty"`
	Following_url       *string `json:"following_url,omitempty"`
	Gists_url           *string `json:"gists_url,omitempty"`
	Gravatar_id         *string `json:"gravatar_id,omitempty"`
	Html_url            *string `json:"html_url,omitempty"`
	ID                  *int64  `json:"id,omitempty"`
	Login               *string `json:"login,omitempty"`
	Node_id             *string `json:"node_id,omitempty"`
	Organizations_url   *string `json:"organizations_url,omitempty"`
	Received_events_url *string `json:"received_events_url,omitempty"`
	Repos_url           *string `json:"repos_url,omitempty"`
	Site_admin          *bool   `json:"site_admin,omitempty"`
	Starred_url         *string `json:"starred_url,omitempty"`
	Subscriptions_url   *string `json:"subscriptions_url,omitempty"`
	Type                *string `json:"type,omitempty"`
	URL                 *string `json:"url,omitempty"`
}

// PullRequestReview__links ...
type PullRequestReview__links struct {
	HTML         PullRequestReview__links_html         `json:"html"`
	Pull_request PullRequestReview__links_pull_request `json:"pull_request"`
}

// PullRequestReview__links_html ...
type PullRequestReview__links_html struct {
	Href string `json:"href"`
}

// PullRequestReview__links_pull_request ...
type PullRequestReview__links_pull_request struct {
	Href string `json:"href"`
}

// PullRequestSimple ...
type PullRequestSimple struct {
	_links              PullRequestSimple__links             `json:"_links"`
	Active_lock_reason  *string                              `json:"active_lock_reason,omitempty"`
	Assignee            EXTERNAL_pullRequestSimple_assignee  `json:"assignee"`
	Assignees           []SimpleUser                         `json:"assignees,omitempty"`
	Author_association  string                               `json:"author_association"`
	Base                PullRequestSimple_base               `json:"base"`
	Body                string                               `json:"body"`
	Closed_at           convert.JSONTime                     `json:"closed_at"`
	Comments_url        string                               `json:"comments_url"`
	Commits_url         string                               `json:"commits_url"`
	Created_at          convert.JSONTime                     `json:"created_at"`
	Diff_url            string                               `json:"diff_url"`
	Draft               *bool                                `json:"draft,omitempty"`
	Head                PullRequestSimple_head               `json:"head"`
	Html_url            string                               `json:"html_url"`
	ID                  int64                                `json:"id"`
	Issue_url           string                               `json:"issue_url"`
	Labels              []PullRequestSimple_labels           `json:"labels"`
	Locked              bool                                 `json:"locked"`
	Merge_commit_sha    string                               `json:"merge_commit_sha"`
	Merged_at           convert.JSONTime                     `json:"merged_at"`
	Milestone           EXTERNAL_pullRequestSimple_milestone `json:"milestone"`
	Node_id             string                               `json:"node_id"`
	Number              int64                                `json:"number"`
	Patch_url           string                               `json:"patch_url"`
	Requested_reviewers []SimpleUser                         `json:"requested_reviewers,omitempty"`
	Requested_teams     []TeamSimple                         `json:"requested_teams,omitempty"`
	Review_comment_url  string                               `json:"review_comment_url"`
	Review_comments_url string                               `json:"review_comments_url"`
	State               string                               `json:"state"`
	Statuses_url        string                               `json:"statuses_url"`
	Title               string                               `json:"title"`
	Updated_at          convert.JSONTime                     `json:"updated_at"`
	URL                 string                               `json:"url"`
	User                EXTERNAL_pullRequestSimple_user      `json:"user"`
}

// PullRequestSimple__links ...
type PullRequestSimple__links struct {
	Comments        Link `json:"comments"`
	Commits         Link `json:"commits"`
	HTML            Link `json:"html"`
	Issue           Link `json:"issue"`
	Review_comment  Link `json:"review_comment"`
	Review_comments Link `json:"review_comments"`
	Self            Link `json:"self"`
	Statuses        Link `json:"statuses"`
}

// PullRequestSimple_base ...
type PullRequestSimple_base struct {
	Label string                               `json:"label"`
	Ref   string                               `json:"ref"`
	Repo  Repository                           `json:"repo"`
	Sha   string                               `json:"sha"`
	User  EXTERNAL_pullRequestSimple_base_user `json:"user"`
}

// PullRequestSimple_head ...
type PullRequestSimple_head struct {
	Label string                               `json:"label"`
	Ref   string                               `json:"ref"`
	Repo  Repository                           `json:"repo"`
	Sha   string                               `json:"sha"`
	User  EXTERNAL_pullRequestSimple_head_user `json:"user"`
}

// PullRequestSimple_labels ...
type PullRequestSimple_labels struct {
	Color       *string `json:"color,omitempty"`
	Default     *bool   `json:"default,omitempty"`
	Description *string `json:"description,omitempty"`
	ID          *int64  `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
	Node_id     *string `json:"node_id,omitempty"`
	URL         *string `json:"url,omitempty"`
}

// PullRequest__links ...
type PullRequest__links struct {
	Comments        Link `json:"comments"`
	Commits         Link `json:"commits"`
	HTML            Link `json:"html"`
	Issue           Link `json:"issue"`
	Review_comment  Link `json:"review_comment"`
	Review_comments Link `json:"review_comments"`
	Self            Link `json:"self"`
	Statuses        Link `json:"statuses"`
}

// PullRequest_base ...
type PullRequest_base struct {
	Label string                `json:"label"`
	Ref   string                `json:"ref"`
	Repo  PullRequest_base_repo `json:"repo"`
	Sha   string                `json:"sha"`
	User  PullRequest_base_user `json:"user"`
}

// PullRequest_base_repo ...
type PullRequest_base_repo struct {
	Allow_merge_commit *bool                                  `json:"allow_merge_commit,omitempty"`
	Allow_rebase_merge *bool                                  `json:"allow_rebase_merge,omitempty"`
	Allow_squash_merge *bool                                  `json:"allow_squash_merge,omitempty"`
	Archive_url        string                                 `json:"archive_url"`
	Archived           bool                                   `json:"archived"`
	Assignees_url      string                                 `json:"assignees_url"`
	Blobs_url          string                                 `json:"blobs_url"`
	Branches_url       string                                 `json:"branches_url"`
	Clone_url          string                                 `json:"clone_url"`
	Collaborators_url  string                                 `json:"collaborators_url"`
	Comments_url       string                                 `json:"comments_url"`
	Commits_url        string                                 `json:"commits_url"`
	Compare_url        string                                 `json:"compare_url"`
	Contents_url       string                                 `json:"contents_url"`
	Contributors_url   string                                 `json:"contributors_url"`
	Created_at         convert.JSONTime                       `json:"created_at"`
	Default_branch     string                                 `json:"default_branch"`
	Deployments_url    string                                 `json:"deployments_url"`
	Description        string                                 `json:"description"`
	Disabled           bool                                   `json:"disabled"`
	Downloads_url      string                                 `json:"downloads_url"`
	Events_url         string                                 `json:"events_url"`
	Fork               bool                                   `json:"fork"`
	Forks              int64                                  `json:"forks"`
	Forks_count        int64                                  `json:"forks_count"`
	Forks_url          string                                 `json:"forks_url"`
	Full_name          string                                 `json:"full_name"`
	Git_commits_url    string                                 `json:"git_commits_url"`
	Git_refs_url       string                                 `json:"git_refs_url"`
	Git_tags_url       string                                 `json:"git_tags_url"`
	Git_url            string                                 `json:"git_url"`
	Has_downloads      bool                                   `json:"has_downloads"`
	Has_issues         bool                                   `json:"has_issues"`
	Has_pages          bool                                   `json:"has_pages"`
	Has_projects       bool                                   `json:"has_projects"`
	Has_wiki           bool                                   `json:"has_wiki"`
	Homepage           string                                 `json:"homepage"`
	Hooks_url          string                                 `json:"hooks_url"`
	Html_url           string                                 `json:"html_url"`
	ID                 int64                                  `json:"id"`
	Issue_comment_url  string                                 `json:"issue_comment_url"`
	Issue_events_url   string                                 `json:"issue_events_url"`
	Issues_url         string                                 `json:"issues_url"`
	Keys_url           string                                 `json:"keys_url"`
	Labels_url         string                                 `json:"labels_url"`
	Language           string                                 `json:"language"`
	Languages_url      string                                 `json:"languages_url"`
	License            EXTERNAL_pullRequest_base_repo_license `json:"license"`
	Master_branch      *string                                `json:"master_branch,omitempty"`
	Merges_url         string                                 `json:"merges_url"`
	Milestones_url     string                                 `json:"milestones_url"`
	Mirror_url         string                                 `json:"mirror_url"`
	Name               string                                 `json:"name"`
	Node_id            string                                 `json:"node_id"`
	Notifications_url  string                                 `json:"notifications_url"`
	Open_issues        int64                                  `json:"open_issues"`
	Open_issues_count  int64                                  `json:"open_issues_count"`
	Owner              PullRequest_base_repo_owner            `json:"owner"`
	Permissions        *PullRequest_base_repo_permissions     `json:"permissions,omitempty"`
	Private            bool                                   `json:"private"`
	Pulls_url          string                                 `json:"pulls_url"`
	Pushed_at          convert.JSONTime                       `json:"pushed_at"`
	Releases_url       string                                 `json:"releases_url"`
	Size               int64                                  `json:"size"`
	Ssh_url            string                                 `json:"ssh_url"`
	Stargazers_count   int64                                  `json:"stargazers_count"`
	Stargazers_url     string                                 `json:"stargazers_url"`
	Statuses_url       string                                 `json:"statuses_url"`
	Subscribers_url    string                                 `json:"subscribers_url"`
	Subscription_url   string                                 `json:"subscription_url"`
	Svn_url            string                                 `json:"svn_url"`
	Tags_url           string                                 `json:"tags_url"`
	Teams_url          string                                 `json:"teams_url"`
	Temp_clone_token   *string                                `json:"temp_clone_token,omitempty"`
	Topics             []string                               `json:"topics,omitempty"`
	Trees_url          string                                 `json:"trees_url"`
	Updated_at         convert.JSONTime                       `json:"updated_at"`
	URL                string                                 `json:"url"`
	Watchers           int64                                  `json:"watchers"`
	Watchers_count     int64                                  `json:"watchers_count"`
}

// PullRequest_base_repo_owner ...
type PullRequest_base_repo_owner struct {
	Avatar_url          string `json:"avatar_url"`
	Events_url          string `json:"events_url"`
	Followers_url       string `json:"followers_url"`
	Following_url       string `json:"following_url"`
	Gists_url           string `json:"gists_url"`
	Gravatar_id         string `json:"gravatar_id"`
	Html_url            string `json:"html_url"`
	ID                  int64  `json:"id"`
	Login               string `json:"login"`
	Node_id             string `json:"node_id"`
	Organizations_url   string `json:"organizations_url"`
	Received_events_url string `json:"received_events_url"`
	Repos_url           string `json:"repos_url"`
	Site_admin          bool   `json:"site_admin"`
	Starred_url         string `json:"starred_url"`
	Subscriptions_url   string `json:"subscriptions_url"`
	Type                string `json:"type"`
	URL                 string `json:"url"`
}

// PullRequest_base_repo_permissions ...
type PullRequest_base_repo_permissions struct {
	Admin bool `json:"admin"`
	Pull  bool `json:"pull"`
	Push  bool `json:"push"`
}

// PullRequest_base_user ...
type PullRequest_base_user struct {
	Avatar_url          string `json:"avatar_url"`
	Events_url          string `json:"events_url"`
	Followers_url       string `json:"followers_url"`
	Following_url       string `json:"following_url"`
	Gists_url           string `json:"gists_url"`
	Gravatar_id         string `json:"gravatar_id"`
	Html_url            string `json:"html_url"`
	ID                  int64  `json:"id"`
	Login               string `json:"login"`
	Node_id             string `json:"node_id"`
	Organizations_url   string `json:"organizations_url"`
	Received_events_url string `json:"received_events_url"`
	Repos_url           string `json:"repos_url"`
	Site_admin          bool   `json:"site_admin"`
	Starred_url         string `json:"starred_url"`
	Subscriptions_url   string `json:"subscriptions_url"`
	Type                string `json:"type"`
	URL                 string `json:"url"`
}

// PullRequest_head ...
type PullRequest_head struct {
	Label string                `json:"label"`
	Ref   string                `json:"ref"`
	Repo  PullRequest_head_repo `json:"repo"`
	Sha   string                `json:"sha"`
	User  PullRequest_head_user `json:"user"`
}

// PullRequest_head_repo ...
type PullRequest_head_repo struct {
	Allow_merge_commit *bool                              `json:"allow_merge_commit,omitempty"`
	Allow_rebase_merge *bool                              `json:"allow_rebase_merge,omitempty"`
	Allow_squash_merge *bool                              `json:"allow_squash_merge,omitempty"`
	Archive_url        string                             `json:"archive_url"`
	Archived           bool                               `json:"archived"`
	Assignees_url      string                             `json:"assignees_url"`
	Blobs_url          string                             `json:"blobs_url"`
	Branches_url       string                             `json:"branches_url"`
	Clone_url          string                             `json:"clone_url"`
	Collaborators_url  string                             `json:"collaborators_url"`
	Comments_url       string                             `json:"comments_url"`
	Commits_url        string                             `json:"commits_url"`
	Compare_url        string                             `json:"compare_url"`
	Contents_url       string                             `json:"contents_url"`
	Contributors_url   string                             `json:"contributors_url"`
	Created_at         convert.JSONTime                   `json:"created_at"`
	Default_branch     string                             `json:"default_branch"`
	Deployments_url    string                             `json:"deployments_url"`
	Description        string                             `json:"description"`
	Disabled           bool                               `json:"disabled"`
	Downloads_url      string                             `json:"downloads_url"`
	Events_url         string                             `json:"events_url"`
	Fork               bool                               `json:"fork"`
	Forks              int64                              `json:"forks"`
	Forks_count        int64                              `json:"forks_count"`
	Forks_url          string                             `json:"forks_url"`
	Full_name          string                             `json:"full_name"`
	Git_commits_url    string                             `json:"git_commits_url"`
	Git_refs_url       string                             `json:"git_refs_url"`
	Git_tags_url       string                             `json:"git_tags_url"`
	Git_url            string                             `json:"git_url"`
	Has_downloads      bool                               `json:"has_downloads"`
	Has_issues         bool                               `json:"has_issues"`
	Has_pages          bool                               `json:"has_pages"`
	Has_projects       bool                               `json:"has_projects"`
	Has_wiki           bool                               `json:"has_wiki"`
	Homepage           string                             `json:"homepage"`
	Hooks_url          string                             `json:"hooks_url"`
	Html_url           string                             `json:"html_url"`
	ID                 int64                              `json:"id"`
	Issue_comment_url  string                             `json:"issue_comment_url"`
	Issue_events_url   string                             `json:"issue_events_url"`
	Issues_url         string                             `json:"issues_url"`
	Keys_url           string                             `json:"keys_url"`
	Labels_url         string                             `json:"labels_url"`
	Language           string                             `json:"language"`
	Languages_url      string                             `json:"languages_url"`
	License            PullRequest_head_repo_license      `json:"license"`
	Master_branch      *string                            `json:"master_branch,omitempty"`
	Merges_url         string                             `json:"merges_url"`
	Milestones_url     string                             `json:"milestones_url"`
	Mirror_url         string                             `json:"mirror_url"`
	Name               string                             `json:"name"`
	Node_id            string                             `json:"node_id"`
	Notifications_url  string                             `json:"notifications_url"`
	Open_issues        int64                              `json:"open_issues"`
	Open_issues_count  int64                              `json:"open_issues_count"`
	Owner              PullRequest_head_repo_owner        `json:"owner"`
	Permissions        *PullRequest_head_repo_permissions `json:"permissions,omitempty"`
	Private            bool                               `json:"private"`
	Pulls_url          string                             `json:"pulls_url"`
	Pushed_at          convert.JSONTime                   `json:"pushed_at"`
	Releases_url       string                             `json:"releases_url"`
	Size               int64                              `json:"size"`
	Ssh_url            string                             `json:"ssh_url"`
	Stargazers_count   int64                              `json:"stargazers_count"`
	Stargazers_url     string                             `json:"stargazers_url"`
	Statuses_url       string                             `json:"statuses_url"`
	Subscribers_url    string                             `json:"subscribers_url"`
	Subscription_url   string                             `json:"subscription_url"`
	Svn_url            string                             `json:"svn_url"`
	Tags_url           string                             `json:"tags_url"`
	Teams_url          string                             `json:"teams_url"`
	Temp_clone_token   *string                            `json:"temp_clone_token,omitempty"`
	Topics             []string                           `json:"topics,omitempty"`
	Trees_url          string                             `json:"trees_url"`
	Updated_at         convert.JSONTime                   `json:"updated_at"`
	URL                string                             `json:"url"`
	Watchers           int64                              `json:"watchers"`
	Watchers_count     int64                              `json:"watchers_count"`
}

// PullRequest_head_repo_license ...
type PullRequest_head_repo_license struct {
	Key     string `json:"key"`
	Name    string `json:"name"`
	Node_id string `json:"node_id"`
	Spdx_id string `json:"spdx_id"`
	URL     string `json:"url"`
}

// PullRequest_head_repo_owner ...
type PullRequest_head_repo_owner struct {
	Avatar_url          string `json:"avatar_url"`
	Events_url          string `json:"events_url"`
	Followers_url       string `json:"followers_url"`
	Following_url       string `json:"following_url"`
	Gists_url           string `json:"gists_url"`
	Gravatar_id         string `json:"gravatar_id"`
	Html_url            string `json:"html_url"`
	ID                  int64  `json:"id"`
	Login               string `json:"login"`
	Node_id             string `json:"node_id"`
	Organizations_url   string `json:"organizations_url"`
	Received_events_url string `json:"received_events_url"`
	Repos_url           string `json:"repos_url"`
	Site_admin          bool   `json:"site_admin"`
	Starred_url         string `json:"starred_url"`
	Subscriptions_url   string `json:"subscriptions_url"`
	Type                string `json:"type"`
	URL                 string `json:"url"`
}

// PullRequest_head_repo_permissions ...
type PullRequest_head_repo_permissions struct {
	Admin bool `json:"admin"`
	Pull  bool `json:"pull"`
	Push  bool `json:"push"`
}

// PullRequest_head_user ...
type PullRequest_head_user struct {
	Avatar_url          string `json:"avatar_url"`
	Events_url          string `json:"events_url"`
	Followers_url       string `json:"followers_url"`
	Following_url       string `json:"following_url"`
	Gists_url           string `json:"gists_url"`
	Gravatar_id         string `json:"gravatar_id"`
	Html_url            string `json:"html_url"`
	ID                  int64  `json:"id"`
	Login               string `json:"login"`
	Node_id             string `json:"node_id"`
	Organizations_url   string `json:"organizations_url"`
	Received_events_url string `json:"received_events_url"`
	Repos_url           string `json:"repos_url"`
	Site_admin          bool   `json:"site_admin"`
	Starred_url         string `json:"starred_url"`
	Subscriptions_url   string `json:"subscriptions_url"`
	Type                string `json:"type"`
	URL                 string `json:"url"`
}

// PullRequest_labels ...
type PullRequest_labels struct {
	Color       *string `json:"color,omitempty"`
	Default     *bool   `json:"default,omitempty"`
	Description *string `json:"description,omitempty"`
	ID          *int64  `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
	Node_id     *string `json:"node_id,omitempty"`
	URL         *string `json:"url,omitempty"`
}

// RateLimit ...
type RateLimit struct {
	Limit     int64 `json:"limit"`
	Remaining int64 `json:"remaining"`
	Reset     int64 `json:"reset"`
}

// RateLimitOverview ...
type RateLimitOverview struct {
	Rate      RateLimit                   `json:"rate"`
	Resources RateLimitOverview_resources `json:"resources"`
}

// RateLimitOverview_resources ...
type RateLimitOverview_resources struct {
	Code_scanning_upload *RateLimit `json:"code_scanning_upload,omitempty"`
	Core                 RateLimit  `json:"core"`
	Graphql              *RateLimit `json:"graphql,omitempty"`
	Integration_manifest *RateLimit `json:"integration_manifest,omitempty"`
	Search               RateLimit  `json:"search"`
	Source_import        *RateLimit `json:"source_import,omitempty"`
}

// Reaction ...
type Reaction struct {
	Content    string                 `json:"content"`
	Created_at convert.JSONTime       `json:"created_at"`
	ID         int64                  `json:"id"`
	Node_id    string                 `json:"node_id"`
	User       EXTERNAL_reaction_user `json:"user"`
}

// ReactionRollup ...
type ReactionRollup struct {
	Confused    int64  `json:"confused"`
	Eyes        int64  `json:"eyes"`
	Heart       int64  `json:"heart"`
	Hooray      int64  `json:"hooray"`
	Laugh       int64  `json:"laugh"`
	M1          int64  `json:"-1"`
	P1          int64  `json:"+1"`
	Rocket      int64  `json:"rocket"`
	Total_count int64  `json:"total_count"`
	URL         string `json:"url"`
}

// ReferrerTraffic ...
type ReferrerTraffic struct {
	Count    int64  `json:"count"`
	Referrer string `json:"referrer"`
	Uniques  int64  `json:"uniques"`
}

// Release ...
type Release struct {
	Assets           []ReleaseAsset   `json:"assets"`
	Assets_url       string           `json:"assets_url"`
	Author           SimpleUser       `json:"author"`
	Body             *string          `json:"body,omitempty"`
	Body_html        *string          `json:"body_html,omitempty"`
	Body_text        *string          `json:"body_text,omitempty"`
	Created_at       convert.JSONTime `json:"created_at"`
	Draft            bool             `json:"draft"`
	Html_url         string           `json:"html_url"`
	ID               int64            `json:"id"`
	Name             string           `json:"name"`
	Node_id          string           `json:"node_id"`
	Prerelease       bool             `json:"prerelease"`
	Published_at     convert.JSONTime `json:"published_at"`
	Tag_name         string           `json:"tag_name"`
	Tarball_url      string           `json:"tarball_url"`
	Target_commitish string           `json:"target_commitish"`
	Upload_url       string           `json:"upload_url"`
	URL              string           `json:"url"`
	Zipball_url      string           `json:"zipball_url"`
}

// ReleaseAsset ...
type ReleaseAsset struct {
	Browser_download_url string                         `json:"browser_download_url"`
	Content_type         string                         `json:"content_type"`
	Created_at           convert.JSONTime               `json:"created_at"`
	Download_count       int64                          `json:"download_count"`
	ID                   int64                          `json:"id"`
	Label                string                         `json:"label"`
	Name                 string                         `json:"name"`
	Node_id              string                         `json:"node_id"`
	Size                 int64                          `json:"size"`
	State                string                         `json:"state"`
	Updated_at           convert.JSONTime               `json:"updated_at"`
	Uploader             EXTERNAL_releaseAsset_uploader `json:"uploader"`
	URL                  string                         `json:"url"`
}

// RepoSearchResultItem ...
type RepoSearchResultItem struct {
	Allow_merge_commit     *bool                                 `json:"allow_merge_commit,omitempty"`
	Allow_rebase_merge     *bool                                 `json:"allow_rebase_merge,omitempty"`
	Allow_squash_merge     *bool                                 `json:"allow_squash_merge,omitempty"`
	Archive_url            string                                `json:"archive_url"`
	Archived               bool                                  `json:"archived"`
	Assignees_url          string                                `json:"assignees_url"`
	Blobs_url              string                                `json:"blobs_url"`
	Branches_url           string                                `json:"branches_url"`
	Clone_url              string                                `json:"clone_url"`
	Collaborators_url      string                                `json:"collaborators_url"`
	Comments_url           string                                `json:"comments_url"`
	Commits_url            string                                `json:"commits_url"`
	Compare_url            string                                `json:"compare_url"`
	Contents_url           string                                `json:"contents_url"`
	Contributors_url       string                                `json:"contributors_url"`
	Created_at             convert.JSONTime                      `json:"created_at"`
	Default_branch         string                                `json:"default_branch"`
	Delete_branch_on_merge *bool                                 `json:"delete_branch_on_merge,omitempty"`
	Deployments_url        string                                `json:"deployments_url"`
	Description            string                                `json:"description"`
	Disabled               bool                                  `json:"disabled"`
	Downloads_url          string                                `json:"downloads_url"`
	Events_url             string                                `json:"events_url"`
	Fork                   bool                                  `json:"fork"`
	Forks                  int64                                 `json:"forks"`
	Forks_count            int64                                 `json:"forks_count"`
	Forks_url              string                                `json:"forks_url"`
	Full_name              string                                `json:"full_name"`
	Git_commits_url        string                                `json:"git_commits_url"`
	Git_refs_url           string                                `json:"git_refs_url"`
	Git_tags_url           string                                `json:"git_tags_url"`
	Git_url                string                                `json:"git_url"`
	Has_downloads          bool                                  `json:"has_downloads"`
	Has_issues             bool                                  `json:"has_issues"`
	Has_pages              bool                                  `json:"has_pages"`
	Has_projects           bool                                  `json:"has_projects"`
	Has_wiki               bool                                  `json:"has_wiki"`
	Homepage               string                                `json:"homepage"`
	Hooks_url              string                                `json:"hooks_url"`
	Html_url               string                                `json:"html_url"`
	ID                     int64                                 `json:"id"`
	Issue_comment_url      string                                `json:"issue_comment_url"`
	Issue_events_url       string                                `json:"issue_events_url"`
	Issues_url             string                                `json:"issues_url"`
	Keys_url               string                                `json:"keys_url"`
	Labels_url             string                                `json:"labels_url"`
	Language               string                                `json:"language"`
	Languages_url          string                                `json:"languages_url"`
	License                EXTERNAL_repoSearchResultItem_license `json:"license"`
	Master_branch          *string                               `json:"master_branch,omitempty"`
	Merges_url             string                                `json:"merges_url"`
	Milestones_url         string                                `json:"milestones_url"`
	Mirror_url             string                                `json:"mirror_url"`
	Name                   string                                `json:"name"`
	Node_id                string                                `json:"node_id"`
	Notifications_url      string                                `json:"notifications_url"`
	Open_issues            int64                                 `json:"open_issues"`
	Open_issues_count      int64                                 `json:"open_issues_count"`
	Owner                  EXTERNAL_repoSearchResultItem_owner   `json:"owner"`
	Permissions            *RepoSearchResultItem_permissions     `json:"permissions,omitempty"`
	Private                bool                                  `json:"private"`
	Pulls_url              string                                `json:"pulls_url"`
	Pushed_at              convert.JSONTime                      `json:"pushed_at"`
	Releases_url           string                                `json:"releases_url"`
	Score                  int64                                 `json:"score"`
	Size                   int64                                 `json:"size"`
	Ssh_url                string                                `json:"ssh_url"`
	Stargazers_count       int64                                 `json:"stargazers_count"`
	Stargazers_url         string                                `json:"stargazers_url"`
	Statuses_url           string                                `json:"statuses_url"`
	Subscribers_url        string                                `json:"subscribers_url"`
	Subscription_url       string                                `json:"subscription_url"`
	Svn_url                string                                `json:"svn_url"`
	Tags_url               string                                `json:"tags_url"`
	Teams_url              string                                `json:"teams_url"`
	Temp_clone_token       *string                               `json:"temp_clone_token,omitempty"`
	Text_matches           *SearchResultTextMatches              `json:"text_matches,omitempty"`
	Topics                 []string                              `json:"topics,omitempty"`
	Trees_url              string                                `json:"trees_url"`
	Updated_at             convert.JSONTime                      `json:"updated_at"`
	URL                    string                                `json:"url"`
	Watchers               int64                                 `json:"watchers"`
	Watchers_count         int64                                 `json:"watchers_count"`
}

// RepoSearchResultItem_permissions ...
type RepoSearchResultItem_permissions struct {
	Admin bool `json:"admin"`
	Pull  bool `json:"pull"`
	Push  bool `json:"push"`
}

// Repository ...
type Repository struct {
	Allow_merge_commit     *bool                           `json:"allow_merge_commit,omitempty"`
	Allow_rebase_merge     *bool                           `json:"allow_rebase_merge,omitempty"`
	Allow_squash_merge     *bool                           `json:"allow_squash_merge,omitempty"`
	Archive_url            string                          `json:"archive_url"`
	Archived               bool                            `json:"archived"`
	Assignees_url          string                          `json:"assignees_url"`
	Blobs_url              string                          `json:"blobs_url"`
	Branches_url           string                          `json:"branches_url"`
	Clone_url              string                          `json:"clone_url"`
	Collaborators_url      string                          `json:"collaborators_url"`
	Comments_url           string                          `json:"comments_url"`
	Commits_url            string                          `json:"commits_url"`
	Compare_url            string                          `json:"compare_url"`
	Contents_url           string                          `json:"contents_url"`
	Contributors_url       string                          `json:"contributors_url"`
	Created_at             convert.JSONTime                `json:"created_at"`
	Default_branch         string                          `json:"default_branch"`
	Delete_branch_on_merge *bool                           `json:"delete_branch_on_merge,omitempty"`
	Deployments_url        string                          `json:"deployments_url"`
	Description            string                          `json:"description"`
	Disabled               bool                            `json:"disabled"`
	Downloads_url          string                          `json:"downloads_url"`
	Events_url             string                          `json:"events_url"`
	Fork                   bool                            `json:"fork"`
	Forks                  int64                           `json:"forks"`
	Forks_count            int64                           `json:"forks_count"`
	Forks_url              string                          `json:"forks_url"`
	Full_name              string                          `json:"full_name"`
	Git_commits_url        string                          `json:"git_commits_url"`
	Git_refs_url           string                          `json:"git_refs_url"`
	Git_tags_url           string                          `json:"git_tags_url"`
	Git_url                string                          `json:"git_url"`
	Has_downloads          bool                            `json:"has_downloads"`
	Has_issues             bool                            `json:"has_issues"`
	Has_pages              bool                            `json:"has_pages"`
	Has_projects           bool                            `json:"has_projects"`
	Has_wiki               bool                            `json:"has_wiki"`
	Homepage               string                          `json:"homepage"`
	Hooks_url              string                          `json:"hooks_url"`
	Html_url               string                          `json:"html_url"`
	ID                     int64                           `json:"id"`
	Is_template            *bool                           `json:"is_template,omitempty"`
	Issue_comment_url      string                          `json:"issue_comment_url"`
	Issue_events_url       string                          `json:"issue_events_url"`
	Issues_url             string                          `json:"issues_url"`
	Keys_url               string                          `json:"keys_url"`
	Labels_url             string                          `json:"labels_url"`
	Language               string                          `json:"language"`
	Languages_url          string                          `json:"languages_url"`
	License                EXTERNAL_repository_license     `json:"license"`
	Master_branch          *string                         `json:"master_branch,omitempty"`
	Merges_url             string                          `json:"merges_url"`
	Milestones_url         string                          `json:"milestones_url"`
	Mirror_url             string                          `json:"mirror_url"`
	Name                   string                          `json:"name"`
	Network_count          *int64                          `json:"network_count,omitempty"`
	Node_id                string                          `json:"node_id"`
	Notifications_url      string                          `json:"notifications_url"`
	Open_issues            int64                           `json:"open_issues"`
	Open_issues_count      int64                           `json:"open_issues_count"`
	Owner                  EXTERNAL_repository_owner       `json:"owner"`
	Permissions            *Repository_permissions         `json:"permissions,omitempty"`
	Private                bool                            `json:"private"`
	Pulls_url              string                          `json:"pulls_url"`
	Pushed_at              convert.JSONTime                `json:"pushed_at"`
	Releases_url           string                          `json:"releases_url"`
	Size                   int64                           `json:"size"`
	Ssh_url                string                          `json:"ssh_url"`
	Stargazers_count       int64                           `json:"stargazers_count"`
	Stargazers_url         string                          `json:"stargazers_url"`
	Starred_at             *string                         `json:"starred_at,omitempty"`
	Statuses_url           string                          `json:"statuses_url"`
	Subscribers_count      *int64                          `json:"subscribers_count,omitempty"`
	Subscribers_url        string                          `json:"subscribers_url"`
	Subscription_url       string                          `json:"subscription_url"`
	Svn_url                string                          `json:"svn_url"`
	Tags_url               string                          `json:"tags_url"`
	Teams_url              string                          `json:"teams_url"`
	Temp_clone_token       *string                         `json:"temp_clone_token,omitempty"`
	Template_repository    *Repository_template_repository `json:"template_repository,omitempty"`
	Topics                 []string                        `json:"topics,omitempty"`
	Trees_url              string                          `json:"trees_url"`
	Updated_at             convert.JSONTime                `json:"updated_at"`
	URL                    string                          `json:"url"`
	Visibility             *string                         `json:"visibility,omitempty"`
	Watchers               int64                           `json:"watchers"`
	Watchers_count         int64                           `json:"watchers_count"`
}

// RepositoryCollaboratorPermission ...
type RepositoryCollaboratorPermission struct {
	Permission string                                         `json:"permission"`
	User       EXTERNAL_repositoryCollaboratorPermission_user `json:"user"`
}

// RepositoryInvitation ...
type RepositoryInvitation struct {
	Created_at  convert.JSONTime                      `json:"created_at"`
	Html_url    string                                `json:"html_url"`
	ID          int64                                 `json:"id"`
	Invitee     EXTERNAL_repositoryInvitation_invitee `json:"invitee"`
	Inviter     EXTERNAL_repositoryInvitation_inviter `json:"inviter"`
	Node_id     string                                `json:"node_id"`
	Permissions string                                `json:"permissions"`
	Repository  MinimalRepository                     `json:"repository"`
	URL         string                                `json:"url"`
}

// RepositorySubscription ...
type RepositorySubscription struct {
	Created_at     convert.JSONTime `json:"created_at"`
	Ignored        bool             `json:"ignored"`
	Reason         string           `json:"reason"`
	Repository_url string           `json:"repository_url"`
	Subscribed     bool             `json:"subscribed"`
	URL            string           `json:"url"`
}

// Repository_permissions ...
type Repository_permissions struct {
	Admin    bool  `json:"admin"`
	Maintain *bool `json:"maintain,omitempty"`
	Pull     bool  `json:"pull"`
	Push     bool  `json:"push"`
	Triage   *bool `json:"triage,omitempty"`
}

// Repository_template_repository ...
type Repository_template_repository struct {
	Allow_merge_commit     *bool                                       `json:"allow_merge_commit,omitempty"`
	Allow_rebase_merge     *bool                                       `json:"allow_rebase_merge,omitempty"`
	Allow_squash_merge     *bool                                       `json:"allow_squash_merge,omitempty"`
	Archive_url            *string                                     `json:"archive_url,omitempty"`
	Archived               *bool                                       `json:"archived,omitempty"`
	Assignees_url          *string                                     `json:"assignees_url,omitempty"`
	Blobs_url              *string                                     `json:"blobs_url,omitempty"`
	Branches_url           *string                                     `json:"branches_url,omitempty"`
	Clone_url              *string                                     `json:"clone_url,omitempty"`
	Collaborators_url      *string                                     `json:"collaborators_url,omitempty"`
	Comments_url           *string                                     `json:"comments_url,omitempty"`
	Commits_url            *string                                     `json:"commits_url,omitempty"`
	Compare_url            *string                                     `json:"compare_url,omitempty"`
	Contents_url           *string                                     `json:"contents_url,omitempty"`
	Contributors_url       *string                                     `json:"contributors_url,omitempty"`
	Created_at             *string                                     `json:"created_at,omitempty"`
	Default_branch         *string                                     `json:"default_branch,omitempty"`
	Delete_branch_on_merge *bool                                       `json:"delete_branch_on_merge,omitempty"`
	Deployments_url        *string                                     `json:"deployments_url,omitempty"`
	Description            *string                                     `json:"description,omitempty"`
	Disabled               *bool                                       `json:"disabled,omitempty"`
	Downloads_url          *string                                     `json:"downloads_url,omitempty"`
	Events_url             *string                                     `json:"events_url,omitempty"`
	Fork                   *bool                                       `json:"fork,omitempty"`
	Forks_count            *int64                                      `json:"forks_count,omitempty"`
	Forks_url              *string                                     `json:"forks_url,omitempty"`
	Full_name              *string                                     `json:"full_name,omitempty"`
	Git_commits_url        *string                                     `json:"git_commits_url,omitempty"`
	Git_refs_url           *string                                     `json:"git_refs_url,omitempty"`
	Git_tags_url           *string                                     `json:"git_tags_url,omitempty"`
	Git_url                *string                                     `json:"git_url,omitempty"`
	Has_downloads          *bool                                       `json:"has_downloads,omitempty"`
	Has_issues             *bool                                       `json:"has_issues,omitempty"`
	Has_pages              *bool                                       `json:"has_pages,omitempty"`
	Has_projects           *bool                                       `json:"has_projects,omitempty"`
	Has_wiki               *bool                                       `json:"has_wiki,omitempty"`
	Homepage               *string                                     `json:"homepage,omitempty"`
	Hooks_url              *string                                     `json:"hooks_url,omitempty"`
	Html_url               *string                                     `json:"html_url,omitempty"`
	ID                     *int64                                      `json:"id,omitempty"`
	Is_template            *bool                                       `json:"is_template,omitempty"`
	Issue_comment_url      *string                                     `json:"issue_comment_url,omitempty"`
	Issue_events_url       *string                                     `json:"issue_events_url,omitempty"`
	Issues_url             *string                                     `json:"issues_url,omitempty"`
	Keys_url               *string                                     `json:"keys_url,omitempty"`
	Labels_url             *string                                     `json:"labels_url,omitempty"`
	Language               *string                                     `json:"language,omitempty"`
	Languages_url          *string                                     `json:"languages_url,omitempty"`
	Merges_url             *string                                     `json:"merges_url,omitempty"`
	Milestones_url         *string                                     `json:"milestones_url,omitempty"`
	Mirror_url             *string                                     `json:"mirror_url,omitempty"`
	Name                   *string                                     `json:"name,omitempty"`
	Network_count          *int64                                      `json:"network_count,omitempty"`
	Node_id                *string                                     `json:"node_id,omitempty"`
	Notifications_url      *string                                     `json:"notifications_url,omitempty"`
	Open_issues_count      *int64                                      `json:"open_issues_count,omitempty"`
	Owner                  *Repository_template_repository_owner       `json:"owner,omitempty"`
	Permissions            *Repository_template_repository_permissions `json:"permissions,omitempty"`
	Private                *bool                                       `json:"private,omitempty"`
	Pulls_url              *string                                     `json:"pulls_url,omitempty"`
	Pushed_at              *string                                     `json:"pushed_at,omitempty"`
	Releases_url           *string                                     `json:"releases_url,omitempty"`
	Size                   *int64                                      `json:"size,omitempty"`
	Ssh_url                *string                                     `json:"ssh_url,omitempty"`
	Stargazers_count       *int64                                      `json:"stargazers_count,omitempty"`
	Stargazers_url         *string                                     `json:"stargazers_url,omitempty"`
	Statuses_url           *string                                     `json:"statuses_url,omitempty"`
	Subscribers_count      *int64                                      `json:"subscribers_count,omitempty"`
	Subscribers_url        *string                                     `json:"subscribers_url,omitempty"`
	Subscription_url       *string                                     `json:"subscription_url,omitempty"`
	Svn_url                *string                                     `json:"svn_url,omitempty"`
	Tags_url               *string                                     `json:"tags_url,omitempty"`
	Teams_url              *string                                     `json:"teams_url,omitempty"`
	Temp_clone_token       *string                                     `json:"temp_clone_token,omitempty"`
	Template_repository    *string                                     `json:"template_repository,omitempty"`
	Topics                 []string                                    `json:"topics,omitempty"`
	Trees_url              *string                                     `json:"trees_url,omitempty"`
	Updated_at             *string                                     `json:"updated_at,omitempty"`
	URL                    *string                                     `json:"url,omitempty"`
	Visibility             *string                                     `json:"visibility,omitempty"`
	Watchers_count         *int64                                      `json:"watchers_count,omitempty"`
}

// Repository_template_repository_owner ...
type Repository_template_repository_owner struct {
	Avatar_url          *string `json:"avatar_url,omitempty"`
	Events_url          *string `json:"events_url,omitempty"`
	Followers_url       *string `json:"followers_url,omitempty"`
	Following_url       *string `json:"following_url,omitempty"`
	Gists_url           *string `json:"gists_url,omitempty"`
	Gravatar_id         *string `json:"gravatar_id,omitempty"`
	Html_url            *string `json:"html_url,omitempty"`
	ID                  *int64  `json:"id,omitempty"`
	Login               *string `json:"login,omitempty"`
	Node_id             *string `json:"node_id,omitempty"`
	Organizations_url   *string `json:"organizations_url,omitempty"`
	Received_events_url *string `json:"received_events_url,omitempty"`
	Repos_url           *string `json:"repos_url,omitempty"`
	Site_admin          *bool   `json:"site_admin,omitempty"`
	Starred_url         *string `json:"starred_url,omitempty"`
	Subscriptions_url   *string `json:"subscriptions_url,omitempty"`
	Type                *string `json:"type,omitempty"`
	URL                 *string `json:"url,omitempty"`
}

// Repository_template_repository_permissions ...
type Repository_template_repository_permissions struct {
	Admin *bool `json:"admin,omitempty"`
	Pull  *bool `json:"pull,omitempty"`
	Push  *bool `json:"push,omitempty"`
}

// ReviewComment ...
type ReviewComment struct {
	_links                 ReviewComment__links        `json:"_links"`
	Author_association     string                      `json:"author_association"`
	Body                   string                      `json:"body"`
	Body_html              *string                     `json:"body_html,omitempty"`
	Body_text              *string                     `json:"body_text,omitempty"`
	Commit_id              string                      `json:"commit_id"`
	Created_at             convert.JSONTime            `json:"created_at"`
	Diff_hunk              string                      `json:"diff_hunk"`
	Html_url               string                      `json:"html_url"`
	ID                     int64                       `json:"id"`
	In_reply_to_id         *int64                      `json:"in_reply_to_id,omitempty"`
	Line                   *int64                      `json:"line,omitempty"`
	Node_id                string                      `json:"node_id"`
	Original_commit_id     string                      `json:"original_commit_id"`
	Original_line          *int64                      `json:"original_line,omitempty"`
	Original_position      int64                       `json:"original_position"`
	Original_start_line    *int64                      `json:"original_start_line,omitempty"`
	Path                   string                      `json:"path"`
	Position               int64                       `json:"position"`
	Pull_request_review_id int64                       `json:"pull_request_review_id"`
	Pull_request_url       string                      `json:"pull_request_url"`
	Side                   *string                     `json:"side,omitempty"`
	Start_line             *int64                      `json:"start_line,omitempty"`
	Start_side             *string                     `json:"start_side,omitempty"`
	Updated_at             convert.JSONTime            `json:"updated_at"`
	URL                    string                      `json:"url"`
	User                   EXTERNAL_reviewComment_user `json:"user"`
}

// ReviewComment__links ...
type ReviewComment__links struct {
	HTML         Link `json:"html"`
	Pull_request Link `json:"pull_request"`
	Self         Link `json:"self"`
}

// Runner ...
type Runner struct {
	Busy   bool            `json:"busy"`
	ID     int64           `json:"id"`
	Labels []Runner_labels `json:"labels"`
	Name   string          `json:"name"`
	Os     string          `json:"os"`
	Status string          `json:"status"`
}

// RunnerApplication ...
type RunnerApplication struct {
	Architecture *string `json:"architecture,omitempty"`
	Download_url *string `json:"download_url,omitempty"`
	Filename     *string `json:"filename,omitempty"`
	Os           *string `json:"os,omitempty"`
}

// RunnerGroupsEnterprise ...
type RunnerGroupsEnterprise struct {
	Default                    *bool    `json:"default,omitempty"`
	ID                         *float64 `json:"id,omitempty"`
	Name                       *string  `json:"name,omitempty"`
	Runners_url                *string  `json:"runners_url,omitempty"`
	Selected_organizations_url *string  `json:"selected_organizations_url,omitempty"`
	Visibility                 *string  `json:"visibility,omitempty"`
}

// RunnerGroupsOrg ...
type RunnerGroupsOrg struct {
	Default                   *bool    `json:"default,omitempty"`
	ID                        *float64 `json:"id,omitempty"`
	Inherited                 *bool    `json:"inherited,omitempty"`
	Name                      *string  `json:"name,omitempty"`
	Runners_url               *string  `json:"runners_url,omitempty"`
	Selected_repositories_url *string  `json:"selected_repositories_url,omitempty"`
	Visibility                *string  `json:"visibility,omitempty"`
}

// Runner_labels ...
type Runner_labels struct {
	ID   *int64  `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Type *string `json:"type,omitempty"`
}

// ScimEnterpriseGroup ...
type ScimEnterpriseGroup struct {
	DisplayName *string                       `json:"displayName,omitempty"`
	ExternalId  *string                       `json:"externalId,omitempty"`
	ID          *string                       `json:"id,omitempty"`
	Members     []ScimEnterpriseGroup_members `json:"members,omitempty"`
	Meta        *ScimEnterpriseGroup_meta     `json:"meta,omitempty"`
	Schemas     []string                      `json:"schemas,omitempty"`
}

// ScimEnterpriseGroup_members ...
type ScimEnterpriseGroup_members struct {
	Display   *string `json:"display,omitempty"`
	DollarRef *string `json:"$ref,omitempty"`
	Value     *string `json:"value,omitempty"`
}

// ScimEnterpriseGroup_meta ...
type ScimEnterpriseGroup_meta struct {
	Created      *string `json:"created,omitempty"`
	LastModified *string `json:"lastModified,omitempty"`
	Location     *string `json:"location,omitempty"`
	ResourceType *string `json:"resourceType,omitempty"`
}

// ScimEnterpriseUser ...
type ScimEnterpriseUser struct {
	Active     *bool                       `json:"active,omitempty"`
	Emails     []ScimEnterpriseUser_emails `json:"emails,omitempty"`
	ExternalId *string                     `json:"externalId,omitempty"`
	Groups     []ScimEnterpriseUser_groups `json:"groups,omitempty"`
	ID         *string                     `json:"id,omitempty"`
	Meta       *ScimEnterpriseUser_meta    `json:"meta,omitempty"`
	Name       *ScimEnterpriseUser_name    `json:"name,omitempty"`
	Schemas    []string                    `json:"schemas,omitempty"`
	UserName   *string                     `json:"userName,omitempty"`
}

// ScimEnterpriseUser_emails ...
type ScimEnterpriseUser_emails struct {
	Primary *bool   `json:"primary,omitempty"`
	Type    *string `json:"type,omitempty"`
	Value   *string `json:"value,omitempty"`
}

// ScimEnterpriseUser_groups ...
type ScimEnterpriseUser_groups struct {
	Value *string `json:"value,omitempty"`
}

// ScimEnterpriseUser_meta ...
type ScimEnterpriseUser_meta struct {
	Created      *string `json:"created,omitempty"`
	LastModified *string `json:"lastModified,omitempty"`
	Location     *string `json:"location,omitempty"`
	ResourceType *string `json:"resourceType,omitempty"`
}

// ScimEnterpriseUser_name ...
type ScimEnterpriseUser_name struct {
	FamilyName *string `json:"familyName,omitempty"`
	GivenName  *string `json:"givenName,omitempty"`
}

// ScimError ...
type ScimError struct {
	Detail            *string  `json:"detail,omitempty"`
	Documentation_url *string  `json:"documentation_url,omitempty"`
	Message           *string  `json:"message,omitempty"`
	Schemas           []string `json:"schemas,omitempty"`
	ScimType          *string  `json:"scimType,omitempty"`
	Status            *int64   `json:"status,omitempty"`
}

// ScimGroupListEnterprise ...
type ScimGroupListEnterprise struct {
	Resources    []ScimGroupListEnterprise_Resources `json:"Resources,omitempty"`
	ItemsPerPage *float64                            `json:"itemsPerPage,omitempty"`
	Schemas      []string                            `json:"schemas,omitempty"`
	StartIndex   *float64                            `json:"startIndex,omitempty"`
	TotalResults *float64                            `json:"totalResults,omitempty"`
}

// ScimGroupListEnterprise_Resources ...
type ScimGroupListEnterprise_Resources struct {
	DisplayName *string                                     `json:"displayName,omitempty"`
	ExternalId  *string                                     `json:"externalId,omitempty"`
	ID          *string                                     `json:"id,omitempty"`
	Members     []ScimGroupListEnterprise_Resources_members `json:"members,omitempty"`
	Meta        *ScimGroupListEnterprise_Resources_meta     `json:"meta,omitempty"`
	Schemas     []string                                    `json:"schemas,omitempty"`
}

// ScimGroupListEnterprise_Resources_members ...
type ScimGroupListEnterprise_Resources_members struct {
	Display   *string `json:"display,omitempty"`
	DollarRef *string `json:"$ref,omitempty"`
	Value     *string `json:"value,omitempty"`
}

// ScimGroupListEnterprise_Resources_meta ...
type ScimGroupListEnterprise_Resources_meta struct {
	Created      *string `json:"created,omitempty"`
	LastModified *string `json:"lastModified,omitempty"`
	Location     *string `json:"location,omitempty"`
	ResourceType *string `json:"resourceType,omitempty"`
}

// ScimUser ...
type ScimUser struct {
	Active          bool                  `json:"active"`
	DisplayName     *string               `json:"displayName,omitempty"`
	Emails          []ScimUser_emails     `json:"emails"`
	ExternalId      string                `json:"externalId"`
	Groups          []ScimUser_groups     `json:"groups,omitempty"`
	ID              string                `json:"id"`
	Meta            ScimUser_meta         `json:"meta"`
	Name            ScimUser_name         `json:"name"`
	Operations      []ScimUser_operations `json:"operations,omitempty"`
	Organization_id *int64                `json:"organization_id,omitempty"`
	Schemas         []string              `json:"schemas"`
	UserName        string                `json:"userName"`
}

// ScimUserList ...
type ScimUserList struct {
	Resources    []ScimUser `json:"Resources"`
	ItemsPerPage int64      `json:"itemsPerPage"`
	Schemas      []string   `json:"schemas"`
	StartIndex   int64      `json:"startIndex"`
	TotalResults int64      `json:"totalResults"`
}

// ScimUserListEnterprise ...
type ScimUserListEnterprise struct {
	Resources    []ScimUserListEnterprise_Resources `json:"Resources,omitempty"`
	ItemsPerPage *float64                           `json:"itemsPerPage,omitempty"`
	Schemas      []string                           `json:"schemas,omitempty"`
	StartIndex   *float64                           `json:"startIndex,omitempty"`
	TotalResults *float64                           `json:"totalResults,omitempty"`
}

// ScimUserListEnterprise_Resources ...
type ScimUserListEnterprise_Resources struct {
	Active     *bool                                     `json:"active,omitempty"`
	Emails     []ScimUserListEnterprise_Resources_emails `json:"emails,omitempty"`
	ExternalId *string                                   `json:"externalId,omitempty"`
	Groups     []ScimUserListEnterprise_Resources_groups `json:"groups,omitempty"`
	ID         *string                                   `json:"id,omitempty"`
	Meta       *ScimUserListEnterprise_Resources_meta    `json:"meta,omitempty"`
	Name       *ScimUserListEnterprise_Resources_name    `json:"name,omitempty"`
	Schemas    []string                                  `json:"schemas,omitempty"`
	UserName   *string                                   `json:"userName,omitempty"`
}

// ScimUserListEnterprise_Resources_emails ...
type ScimUserListEnterprise_Resources_emails struct {
	Primary *bool   `json:"primary,omitempty"`
	Type    *string `json:"type,omitempty"`
	Value   *string `json:"value,omitempty"`
}

// ScimUserListEnterprise_Resources_groups ...
type ScimUserListEnterprise_Resources_groups struct {
	Value *string `json:"value,omitempty"`
}

// ScimUserListEnterprise_Resources_meta ...
type ScimUserListEnterprise_Resources_meta struct {
	Created      *string `json:"created,omitempty"`
	LastModified *string `json:"lastModified,omitempty"`
	Location     *string `json:"location,omitempty"`
	ResourceType *string `json:"resourceType,omitempty"`
}

// ScimUserListEnterprise_Resources_name ...
type ScimUserListEnterprise_Resources_name struct {
	FamilyName *string `json:"familyName,omitempty"`
	GivenName  *string `json:"givenName,omitempty"`
}

// ScimUser_emails ...
type ScimUser_emails struct {
	Primary *bool  `json:"primary,omitempty"`
	Value   string `json:"value"`
}

// ScimUser_groups ...
type ScimUser_groups struct {
	Display *string `json:"display,omitempty"`
	Value   *string `json:"value,omitempty"`
}

// ScimUser_meta ...
type ScimUser_meta struct {
	Created      *convert.JSONTime `json:"created,omitempty"`
	LastModified *convert.JSONTime `json:"lastModified,omitempty"`
	Location     *string           `json:"location,omitempty"`
	ResourceType *string           `json:"resourceType,omitempty"`
}

// ScimUser_name ...
type ScimUser_name struct {
	FamilyName string  `json:"familyName"`
	Formatted  *string `json:"formatted,omitempty"`
	GivenName  string  `json:"givenName"`
}

// ScimUser_operations ...
type ScimUser_operations struct {
	Op    string                     `json:"op"`
	Path  *string                    `json:"path,omitempty"`
	Value *ScimUser_operations_value `json:"value,omitempty"`
}

// ScopedInstallation ...
type ScopedInstallation struct {
	Account              SimpleUser                              `json:"account"`
	Permissions          EXTERNAL_scopedInstallation_permissions `json:"permissions"`
	Repositories_url     string                                  `json:"repositories_url"`
	Repository_selection string                                  `json:"repository_selection"`
	Single_file_name     string                                  `json:"single_file_name"`
}

// SearchResultTextMatches_obj ...
type SearchResultTextMatches_obj struct {
	Fragment    *string                                                           `json:"fragment,omitempty"`
	Matches     []SearchResultTextMatches_obj_searchResultTextMatches_obj_matches `json:"matches,omitempty"`
	Object_type *string                                                           `json:"object_type,omitempty"`
	Object_url  *string                                                           `json:"object_url,omitempty"`
	Property    *string                                                           `json:"property,omitempty"`
}

// SearchResultTextMatches_obj_searchResultTextMatches_obj_matches ...
type SearchResultTextMatches_obj_searchResultTextMatches_obj_matches struct {
	Indices []int64 `json:"indices,omitempty"`
	Text    *string `json:"text,omitempty"`
}

// SelectedActions ...
type SelectedActions struct {
	Github_owned_allowed *bool    `json:"github_owned_allowed,omitempty"`
	Patterns_allowed     []string `json:"patterns_allowed,omitempty"`
	Verified_allowed     *bool    `json:"verified_allowed,omitempty"`
}

// ShortBlob ...
type ShortBlob struct {
	Sha *string `json:"sha,omitempty"`
	URL *string `json:"url,omitempty"`
}

// ShortBranch ...
type ShortBranch struct {
	Commit         ShortBranch_commit `json:"commit"`
	Name           string             `json:"name"`
	Protected      bool               `json:"protected"`
	Protection     *BranchProtection  `json:"protection,omitempty"`
	Protection_url *string            `json:"protection_url,omitempty"`
}

// ShortBranch_commit ...
type ShortBranch_commit struct {
	Sha string `json:"sha"`
	URL string `json:"url"`
}

// SimpleCommit ...
type SimpleCommit struct {
	Author    SimpleCommit_author    `json:"author"`
	Committer SimpleCommit_committer `json:"committer"`
	ID        string                 `json:"id"`
	Message   string                 `json:"message"`
	Timestamp convert.JSONTime       `json:"timestamp"`
	Tree_id   string                 `json:"tree_id"`
}

// SimpleCommitStatus ...
type SimpleCommitStatus struct {
	Avatar_url  string           `json:"avatar_url"`
	Context     string           `json:"context"`
	Created_at  convert.JSONTime `json:"created_at"`
	Description string           `json:"description"`
	ID          int64            `json:"id"`
	Node_id     string           `json:"node_id"`
	Required    *bool            `json:"required,omitempty"`
	State       string           `json:"state"`
	Target_url  string           `json:"target_url"`
	Updated_at  convert.JSONTime `json:"updated_at"`
	URL         string           `json:"url"`
}

// SimpleCommit_author ...
type SimpleCommit_author struct {
	Email string `json:"email"`
	Name  string `json:"name"`
}

// SimpleCommit_committer ...
type SimpleCommit_committer struct {
	Email string `json:"email"`
	Name  string `json:"name"`
}

// SimpleUser ...
type SimpleUser struct {
	Avatar_url          string  `json:"avatar_url"`
	Events_url          string  `json:"events_url"`
	Followers_url       string  `json:"followers_url"`
	Following_url       string  `json:"following_url"`
	Gists_url           string  `json:"gists_url"`
	Gravatar_id         string  `json:"gravatar_id"`
	Html_url            string  `json:"html_url"`
	ID                  int64   `json:"id"`
	Login               string  `json:"login"`
	Node_id             string  `json:"node_id"`
	Organizations_url   string  `json:"organizations_url"`
	Received_events_url string  `json:"received_events_url"`
	Repos_url           string  `json:"repos_url"`
	Site_admin          bool    `json:"site_admin"`
	Starred_at          *string `json:"starred_at,omitempty"`
	Starred_url         string  `json:"starred_url"`
	Subscriptions_url   string  `json:"subscriptions_url"`
	Type                string  `json:"type"`
	URL                 string  `json:"url"`
}

// Stargazer ...
type Stargazer struct {
	Starred_at convert.JSONTime        `json:"starred_at"`
	User       EXTERNAL_stargazer_user `json:"user"`
}

// StarredRepository ...
type StarredRepository struct {
	Repo       Repository       `json:"repo"`
	Starred_at convert.JSONTime `json:"starred_at"`
}

// Status ...
type Status struct {
	Avatar_url  *string     `json:"avatar_url,omitempty"`
	Context     *string     `json:"context,omitempty"`
	Created_at  *string     `json:"created_at,omitempty"`
	Creator     *SimpleUser `json:"creator,omitempty"`
	Description *string     `json:"description,omitempty"`
	ID          *int64      `json:"id,omitempty"`
	Node_id     *string     `json:"node_id,omitempty"`
	State       *string     `json:"state,omitempty"`
	Target_url  *string     `json:"target_url,omitempty"`
	Updated_at  *string     `json:"updated_at,omitempty"`
	URL         *string     `json:"url,omitempty"`
}

// StatusCheckPolicy ...
type StatusCheckPolicy struct {
	Contexts     []string `json:"contexts"`
	Contexts_url string   `json:"contexts_url"`
	Strict       bool     `json:"strict"`
	URL          string   `json:"url"`
}

// Tag ...
type Tag struct {
	Commit      Tag_commit `json:"commit"`
	Name        string     `json:"name"`
	Node_id     string     `json:"node_id"`
	Tarball_url string     `json:"tarball_url"`
	Zipball_url string     `json:"zipball_url"`
}

// Tag_commit ...
type Tag_commit struct {
	Sha string `json:"sha"`
	URL string `json:"url"`
}

// Team ...
type Team struct {
	Description      string                `json:"description"`
	Html_url         string                `json:"html_url"`
	ID               int64                 `json:"id"`
	Members_url      string                `json:"members_url"`
	Name             string                `json:"name"`
	Node_id          string                `json:"node_id"`
	Parent           *EXTERNAL_team_parent `json:"parent,omitempty"`
	Permission       string                `json:"permission"`
	Privacy          *string               `json:"privacy,omitempty"`
	Repositories_url string                `json:"repositories_url"`
	Slug             string                `json:"slug"`
	URL              string                `json:"url"`
}

// TeamDiscussion ...
type TeamDiscussion struct {
	Author         EXTERNAL_teamDiscussion_author `json:"author"`
	Body           string                         `json:"body"`
	Body_html      string                         `json:"body_html"`
	Body_version   string                         `json:"body_version"`
	Comments_count int64                          `json:"comments_count"`
	Comments_url   string                         `json:"comments_url"`
	Created_at     convert.JSONTime               `json:"created_at"`
	Html_url       string                         `json:"html_url"`
	Last_edited_at convert.JSONTime               `json:"last_edited_at"`
	Node_id        string                         `json:"node_id"`
	Number         int64                          `json:"number"`
	Pinned         bool                           `json:"pinned"`
	Private        bool                           `json:"private"`
	Reactions      *ReactionRollup                `json:"reactions,omitempty"`
	Team_url       string                         `json:"team_url"`
	Title          string                         `json:"title"`
	Updated_at     convert.JSONTime               `json:"updated_at"`
	URL            string                         `json:"url"`
}

// TeamDiscussionComment ...
type TeamDiscussionComment struct {
	Author         EXTERNAL_teamDiscussionComment_author `json:"author"`
	Body           string                                `json:"body"`
	Body_html      string                                `json:"body_html"`
	Body_version   string                                `json:"body_version"`
	Created_at     convert.JSONTime                      `json:"created_at"`
	Discussion_url string                                `json:"discussion_url"`
	Html_url       string                                `json:"html_url"`
	Last_edited_at convert.JSONTime                      `json:"last_edited_at"`
	Node_id        string                                `json:"node_id"`
	Number         int64                                 `json:"number"`
	Reactions      *ReactionRollup                       `json:"reactions,omitempty"`
	Updated_at     convert.JSONTime                      `json:"updated_at"`
	URL            string                                `json:"url"`
}

// TeamFull ...
type TeamFull struct {
	Created_at       convert.JSONTime          `json:"created_at"`
	Description      string                    `json:"description"`
	Html_url         string                    `json:"html_url"`
	ID               int64                     `json:"id"`
	Ldap_dn          *string                   `json:"ldap_dn,omitempty"`
	Members_count    int64                     `json:"members_count"`
	Members_url      string                    `json:"members_url"`
	Name             string                    `json:"name"`
	Node_id          string                    `json:"node_id"`
	Organization     OrganizationFull          `json:"organization"`
	Parent           *EXTERNAL_teamFull_parent `json:"parent,omitempty"`
	Permission       string                    `json:"permission"`
	Privacy          *string                   `json:"privacy,omitempty"`
	Repos_count      int64                     `json:"repos_count"`
	Repositories_url string                    `json:"repositories_url"`
	Slug             string                    `json:"slug"`
	Updated_at       convert.JSONTime          `json:"updated_at"`
	URL              string                    `json:"url"`
}

// TeamMembership ...
type TeamMembership struct {
	Role  string `json:"role"`
	State string `json:"state"`
	URL   string `json:"url"`
}

// TeamProject ...
type TeamProject struct {
	Body                    *string                  `json:"body,omitempty"`
	Columns_url             *string                  `json:"columns_url,omitempty"`
	Created_at              *string                  `json:"created_at,omitempty"`
	Creator                 *SimpleUser              `json:"creator,omitempty"`
	Html_url                *string                  `json:"html_url,omitempty"`
	ID                      *int64                   `json:"id,omitempty"`
	Name                    *string                  `json:"name,omitempty"`
	Node_id                 *string                  `json:"node_id,omitempty"`
	Number                  *int64                   `json:"number,omitempty"`
	Organization_permission *string                  `json:"organization_permission,omitempty"`
	Owner_url               *string                  `json:"owner_url,omitempty"`
	Permissions             *TeamProject_permissions `json:"permissions,omitempty"`
	Private                 *bool                    `json:"private,omitempty"`
	State                   *string                  `json:"state,omitempty"`
	Updated_at              *string                  `json:"updated_at,omitempty"`
	URL                     *string                  `json:"url,omitempty"`
}

// TeamProject_permissions ...
type TeamProject_permissions struct {
	Admin *bool `json:"admin,omitempty"`
	Read  *bool `json:"read,omitempty"`
	Write *bool `json:"write,omitempty"`
}

// TeamRepository ...
type TeamRepository struct {
	Allow_merge_commit     *bool                               `json:"allow_merge_commit,omitempty"`
	Allow_rebase_merge     *bool                               `json:"allow_rebase_merge,omitempty"`
	Allow_squash_merge     *bool                               `json:"allow_squash_merge,omitempty"`
	Archive_url            string                              `json:"archive_url"`
	Archived               bool                                `json:"archived"`
	Assignees_url          string                              `json:"assignees_url"`
	Blobs_url              string                              `json:"blobs_url"`
	Branches_url           string                              `json:"branches_url"`
	Clone_url              string                              `json:"clone_url"`
	Collaborators_url      string                              `json:"collaborators_url"`
	Comments_url           string                              `json:"comments_url"`
	Commits_url            string                              `json:"commits_url"`
	Compare_url            string                              `json:"compare_url"`
	Contents_url           string                              `json:"contents_url"`
	Contributors_url       string                              `json:"contributors_url"`
	Created_at             convert.JSONTime                    `json:"created_at"`
	Default_branch         string                              `json:"default_branch"`
	Delete_branch_on_merge *bool                               `json:"delete_branch_on_merge,omitempty"`
	Deployments_url        string                              `json:"deployments_url"`
	Description            string                              `json:"description"`
	Disabled               bool                                `json:"disabled"`
	Downloads_url          string                              `json:"downloads_url"`
	Events_url             string                              `json:"events_url"`
	Fork                   bool                                `json:"fork"`
	Forks                  int64                               `json:"forks"`
	Forks_count            int64                               `json:"forks_count"`
	Forks_url              string                              `json:"forks_url"`
	Full_name              string                              `json:"full_name"`
	Git_commits_url        string                              `json:"git_commits_url"`
	Git_refs_url           string                              `json:"git_refs_url"`
	Git_tags_url           string                              `json:"git_tags_url"`
	Git_url                string                              `json:"git_url"`
	Has_downloads          bool                                `json:"has_downloads"`
	Has_issues             bool                                `json:"has_issues"`
	Has_pages              bool                                `json:"has_pages"`
	Has_projects           bool                                `json:"has_projects"`
	Has_wiki               bool                                `json:"has_wiki"`
	Homepage               string                              `json:"homepage"`
	Hooks_url              string                              `json:"hooks_url"`
	Html_url               string                              `json:"html_url"`
	ID                     int64                               `json:"id"`
	Is_template            *bool                               `json:"is_template,omitempty"`
	Issue_comment_url      string                              `json:"issue_comment_url"`
	Issue_events_url       string                              `json:"issue_events_url"`
	Issues_url             string                              `json:"issues_url"`
	Keys_url               string                              `json:"keys_url"`
	Labels_url             string                              `json:"labels_url"`
	Language               string                              `json:"language"`
	Languages_url          string                              `json:"languages_url"`
	License                EXTERNAL_teamRepository_license     `json:"license"`
	Master_branch          *string                             `json:"master_branch,omitempty"`
	Merges_url             string                              `json:"merges_url"`
	Milestones_url         string                              `json:"milestones_url"`
	Mirror_url             string                              `json:"mirror_url"`
	Name                   string                              `json:"name"`
	Network_count          *int64                              `json:"network_count,omitempty"`
	Node_id                string                              `json:"node_id"`
	Notifications_url      string                              `json:"notifications_url"`
	Open_issues            int64                               `json:"open_issues"`
	Open_issues_count      int64                               `json:"open_issues_count"`
	Owner                  EXTERNAL_teamRepository_owner       `json:"owner"`
	Permissions            *TeamRepository_permissions         `json:"permissions,omitempty"`
	Private                bool                                `json:"private"`
	Pulls_url              string                              `json:"pulls_url"`
	Pushed_at              convert.JSONTime                    `json:"pushed_at"`
	Releases_url           string                              `json:"releases_url"`
	Size                   int64                               `json:"size"`
	Ssh_url                string                              `json:"ssh_url"`
	Stargazers_count       int64                               `json:"stargazers_count"`
	Stargazers_url         string                              `json:"stargazers_url"`
	Statuses_url           string                              `json:"statuses_url"`
	Subscribers_count      *int64                              `json:"subscribers_count,omitempty"`
	Subscribers_url        string                              `json:"subscribers_url"`
	Subscription_url       string                              `json:"subscription_url"`
	Svn_url                string                              `json:"svn_url"`
	Tags_url               string                              `json:"tags_url"`
	Teams_url              string                              `json:"teams_url"`
	Temp_clone_token       *string                             `json:"temp_clone_token,omitempty"`
	Template_repository    *TeamRepository_template_repository `json:"template_repository,omitempty"`
	Topics                 []string                            `json:"topics,omitempty"`
	Trees_url              string                              `json:"trees_url"`
	Updated_at             convert.JSONTime                    `json:"updated_at"`
	URL                    string                              `json:"url"`
	Visibility             *string                             `json:"visibility,omitempty"`
	Watchers               int64                               `json:"watchers"`
	Watchers_count         int64                               `json:"watchers_count"`
}

// TeamRepository_permissions ...
type TeamRepository_permissions struct {
	Admin    bool  `json:"admin"`
	Maintain *bool `json:"maintain,omitempty"`
	Pull     bool  `json:"pull"`
	Push     bool  `json:"push"`
	Triage   *bool `json:"triage,omitempty"`
}

// TeamRepository_template_repository ...
type TeamRepository_template_repository struct {
	Allow_merge_commit     *bool                                           `json:"allow_merge_commit,omitempty"`
	Allow_rebase_merge     *bool                                           `json:"allow_rebase_merge,omitempty"`
	Allow_squash_merge     *bool                                           `json:"allow_squash_merge,omitempty"`
	Archive_url            *string                                         `json:"archive_url,omitempty"`
	Archived               *bool                                           `json:"archived,omitempty"`
	Assignees_url          *string                                         `json:"assignees_url,omitempty"`
	Blobs_url              *string                                         `json:"blobs_url,omitempty"`
	Branches_url           *string                                         `json:"branches_url,omitempty"`
	Clone_url              *string                                         `json:"clone_url,omitempty"`
	Collaborators_url      *string                                         `json:"collaborators_url,omitempty"`
	Comments_url           *string                                         `json:"comments_url,omitempty"`
	Commits_url            *string                                         `json:"commits_url,omitempty"`
	Compare_url            *string                                         `json:"compare_url,omitempty"`
	Contents_url           *string                                         `json:"contents_url,omitempty"`
	Contributors_url       *string                                         `json:"contributors_url,omitempty"`
	Created_at             *string                                         `json:"created_at,omitempty"`
	Default_branch         *string                                         `json:"default_branch,omitempty"`
	Delete_branch_on_merge *bool                                           `json:"delete_branch_on_merge,omitempty"`
	Deployments_url        *string                                         `json:"deployments_url,omitempty"`
	Description            *string                                         `json:"description,omitempty"`
	Disabled               *bool                                           `json:"disabled,omitempty"`
	Downloads_url          *string                                         `json:"downloads_url,omitempty"`
	Events_url             *string                                         `json:"events_url,omitempty"`
	Fork                   *bool                                           `json:"fork,omitempty"`
	Forks_count            *int64                                          `json:"forks_count,omitempty"`
	Forks_url              *string                                         `json:"forks_url,omitempty"`
	Full_name              *string                                         `json:"full_name,omitempty"`
	Git_commits_url        *string                                         `json:"git_commits_url,omitempty"`
	Git_refs_url           *string                                         `json:"git_refs_url,omitempty"`
	Git_tags_url           *string                                         `json:"git_tags_url,omitempty"`
	Git_url                *string                                         `json:"git_url,omitempty"`
	Has_downloads          *bool                                           `json:"has_downloads,omitempty"`
	Has_issues             *bool                                           `json:"has_issues,omitempty"`
	Has_pages              *bool                                           `json:"has_pages,omitempty"`
	Has_projects           *bool                                           `json:"has_projects,omitempty"`
	Has_wiki               *bool                                           `json:"has_wiki,omitempty"`
	Homepage               *string                                         `json:"homepage,omitempty"`
	Hooks_url              *string                                         `json:"hooks_url,omitempty"`
	Html_url               *string                                         `json:"html_url,omitempty"`
	ID                     *int64                                          `json:"id,omitempty"`
	Is_template            *bool                                           `json:"is_template,omitempty"`
	Issue_comment_url      *string                                         `json:"issue_comment_url,omitempty"`
	Issue_events_url       *string                                         `json:"issue_events_url,omitempty"`
	Issues_url             *string                                         `json:"issues_url,omitempty"`
	Keys_url               *string                                         `json:"keys_url,omitempty"`
	Labels_url             *string                                         `json:"labels_url,omitempty"`
	Language               *string                                         `json:"language,omitempty"`
	Languages_url          *string                                         `json:"languages_url,omitempty"`
	Merges_url             *string                                         `json:"merges_url,omitempty"`
	Milestones_url         *string                                         `json:"milestones_url,omitempty"`
	Mirror_url             *string                                         `json:"mirror_url,omitempty"`
	Name                   *string                                         `json:"name,omitempty"`
	Network_count          *int64                                          `json:"network_count,omitempty"`
	Node_id                *string                                         `json:"node_id,omitempty"`
	Notifications_url      *string                                         `json:"notifications_url,omitempty"`
	Open_issues_count      *int64                                          `json:"open_issues_count,omitempty"`
	Owner                  *TeamRepository_template_repository_owner       `json:"owner,omitempty"`
	Permissions            *TeamRepository_template_repository_permissions `json:"permissions,omitempty"`
	Private                *bool                                           `json:"private,omitempty"`
	Pulls_url              *string                                         `json:"pulls_url,omitempty"`
	Pushed_at              *string                                         `json:"pushed_at,omitempty"`
	Releases_url           *string                                         `json:"releases_url,omitempty"`
	Size                   *int64                                          `json:"size,omitempty"`
	Ssh_url                *string                                         `json:"ssh_url,omitempty"`
	Stargazers_count       *int64                                          `json:"stargazers_count,omitempty"`
	Stargazers_url         *string                                         `json:"stargazers_url,omitempty"`
	Statuses_url           *string                                         `json:"statuses_url,omitempty"`
	Subscribers_count      *int64                                          `json:"subscribers_count,omitempty"`
	Subscribers_url        *string                                         `json:"subscribers_url,omitempty"`
	Subscription_url       *string                                         `json:"subscription_url,omitempty"`
	Svn_url                *string                                         `json:"svn_url,omitempty"`
	Tags_url               *string                                         `json:"tags_url,omitempty"`
	Teams_url              *string                                         `json:"teams_url,omitempty"`
	Temp_clone_token       *string                                         `json:"temp_clone_token,omitempty"`
	Template_repository    *string                                         `json:"template_repository,omitempty"`
	Topics                 []string                                        `json:"topics,omitempty"`
	Trees_url              *string                                         `json:"trees_url,omitempty"`
	Updated_at             *string                                         `json:"updated_at,omitempty"`
	URL                    *string                                         `json:"url,omitempty"`
	Visibility             *string                                         `json:"visibility,omitempty"`
	Watchers_count         *int64                                          `json:"watchers_count,omitempty"`
}

// TeamRepository_template_repository_owner ...
type TeamRepository_template_repository_owner struct {
	Avatar_url          *string `json:"avatar_url,omitempty"`
	Events_url          *string `json:"events_url,omitempty"`
	Followers_url       *string `json:"followers_url,omitempty"`
	Following_url       *string `json:"following_url,omitempty"`
	Gists_url           *string `json:"gists_url,omitempty"`
	Gravatar_id         *string `json:"gravatar_id,omitempty"`
	Html_url            *string `json:"html_url,omitempty"`
	ID                  *int64  `json:"id,omitempty"`
	Login               *string `json:"login,omitempty"`
	Node_id             *string `json:"node_id,omitempty"`
	Organizations_url   *string `json:"organizations_url,omitempty"`
	Received_events_url *string `json:"received_events_url,omitempty"`
	Repos_url           *string `json:"repos_url,omitempty"`
	Site_admin          *bool   `json:"site_admin,omitempty"`
	Starred_url         *string `json:"starred_url,omitempty"`
	Subscriptions_url   *string `json:"subscriptions_url,omitempty"`
	Type                *string `json:"type,omitempty"`
	URL                 *string `json:"url,omitempty"`
}

// TeamRepository_template_repository_permissions ...
type TeamRepository_template_repository_permissions struct {
	Admin *bool `json:"admin,omitempty"`
	Pull  *bool `json:"pull,omitempty"`
	Push  *bool `json:"push,omitempty"`
}

// TeamSimple ...
type TeamSimple struct {
	Description      string  `json:"description"`
	Html_url         string  `json:"html_url"`
	ID               int64   `json:"id"`
	Ldap_dn          *string `json:"ldap_dn,omitempty"`
	Members_url      string  `json:"members_url"`
	Name             string  `json:"name"`
	Node_id          string  `json:"node_id"`
	Permission       string  `json:"permission"`
	Privacy          *string `json:"privacy,omitempty"`
	Repositories_url string  `json:"repositories_url"`
	Slug             string  `json:"slug"`
	URL              string  `json:"url"`
}

// Thread ...
type Thread struct {
	ID               *string            `json:"id,omitempty"`
	Last_read_at     *string            `json:"last_read_at,omitempty"`
	Reason           *string            `json:"reason,omitempty"`
	Repository       *MinimalRepository `json:"repository,omitempty"`
	Subject          *Thread_subject    `json:"subject,omitempty"`
	Subscription_url *string            `json:"subscription_url,omitempty"`
	Unread           *bool              `json:"unread,omitempty"`
	Updated_at       *string            `json:"updated_at,omitempty"`
	URL              *string            `json:"url,omitempty"`
}

// ThreadSubscription ...
type ThreadSubscription struct {
	Created_at     convert.JSONTime `json:"created_at"`
	Ignored        bool             `json:"ignored"`
	Reason         string           `json:"reason"`
	Repository_url *string          `json:"repository_url,omitempty"`
	Subscribed     bool             `json:"subscribed"`
	Thread_url     *string          `json:"thread_url,omitempty"`
	URL            string           `json:"url"`
}

// Thread_subject ...
type Thread_subject struct {
	Latest_comment_url *string `json:"latest_comment_url,omitempty"`
	Title              *string `json:"title,omitempty"`
	Type               *string `json:"type,omitempty"`
	URL                *string `json:"url,omitempty"`
}

// Topic ...
type Topic struct {
	Names []string `json:"names,omitempty"`
}

// TopicSearchResultItem ...
type TopicSearchResultItem struct {
	Aliases           []TopicSearchResultItem_aliases `json:"aliases,omitempty"`
	Created_at        convert.JSONTime                `json:"created_at"`
	Created_by        string                          `json:"created_by"`
	Curated           bool                            `json:"curated"`
	Description       string                          `json:"description"`
	Display_name      string                          `json:"display_name"`
	Featured          bool                            `json:"featured"`
	Logo_url          *string                         `json:"logo_url,omitempty"`
	Name              string                          `json:"name"`
	Related           []TopicSearchResultItem_related `json:"related,omitempty"`
	Released          string                          `json:"released"`
	Repository_count  *int64                          `json:"repository_count,omitempty"`
	Score             int64                           `json:"score"`
	Short_description string                          `json:"short_description"`
	Text_matches      *SearchResultTextMatches        `json:"text_matches,omitempty"`
	Updated_at        convert.JSONTime                `json:"updated_at"`
}

// TopicSearchResultItem_aliases ...
type TopicSearchResultItem_aliases struct {
	Topic_relation *TopicSearchResultItem_aliases_topic_relation `json:"topic_relation,omitempty"`
}

// TopicSearchResultItem_aliases_topic_relation ...
type TopicSearchResultItem_aliases_topic_relation struct {
	ID            *int64  `json:"id,omitempty"`
	Name          *string `json:"name,omitempty"`
	Relation_type *string `json:"relation_type,omitempty"`
	Topic_id      *int64  `json:"topic_id,omitempty"`
}

// TopicSearchResultItem_related ...
type TopicSearchResultItem_related struct {
	Topic_relation *TopicSearchResultItem_related_topic_relation `json:"topic_relation,omitempty"`
}

// TopicSearchResultItem_related_topic_relation ...
type TopicSearchResultItem_related_topic_relation struct {
	ID            *int64  `json:"id,omitempty"`
	Name          *string `json:"name,omitempty"`
	Relation_type *string `json:"relation_type,omitempty"`
	Topic_id      *int64  `json:"topic_id,omitempty"`
}

// Traffic ...
type Traffic struct {
	Count     int64            `json:"count"`
	Timestamp convert.JSONTime `json:"timestamp"`
	Uniques   int64            `json:"uniques"`
}

// UserMarketplacePurchase ...
type UserMarketplacePurchase struct {
	Account            MarketplaceAccount     `json:"account"`
	Billing_cycle      string                 `json:"billing_cycle"`
	Free_trial_ends_on convert.JSONTime       `json:"free_trial_ends_on"`
	Next_billing_date  convert.JSONTime       `json:"next_billing_date"`
	On_free_trial      bool                   `json:"on_free_trial"`
	Plan               MarketplaceListingPlan `json:"plan"`
	Unit_count         int64                  `json:"unit_count"`
	Updated_at         convert.JSONTime       `json:"updated_at"`
}

// UserSearchResultItem ...
type UserSearchResultItem struct {
	Avatar_url          string                   `json:"avatar_url"`
	Bio                 *string                  `json:"bio,omitempty"`
	Blog                *string                  `json:"blog,omitempty"`
	Company             *string                  `json:"company,omitempty"`
	Created_at          *convert.JSONTime        `json:"created_at,omitempty"`
	Email               *string                  `json:"email,omitempty"`
	Events_url          string                   `json:"events_url"`
	Followers           *int64                   `json:"followers,omitempty"`
	Followers_url       string                   `json:"followers_url"`
	Following           *int64                   `json:"following,omitempty"`
	Following_url       string                   `json:"following_url"`
	Gists_url           string                   `json:"gists_url"`
	Gravatar_id         string                   `json:"gravatar_id"`
	Hireable            *bool                    `json:"hireable,omitempty"`
	Html_url            string                   `json:"html_url"`
	ID                  int64                    `json:"id"`
	Location            *string                  `json:"location,omitempty"`
	Login               string                   `json:"login"`
	Name                *string                  `json:"name,omitempty"`
	Node_id             string                   `json:"node_id"`
	Organizations_url   string                   `json:"organizations_url"`
	Public_gists        *int64                   `json:"public_gists,omitempty"`
	Public_repos        *int64                   `json:"public_repos,omitempty"`
	Received_events_url string                   `json:"received_events_url"`
	Repos_url           string                   `json:"repos_url"`
	Score               int64                    `json:"score"`
	Site_admin          bool                     `json:"site_admin"`
	Starred_url         string                   `json:"starred_url"`
	Subscriptions_url   string                   `json:"subscriptions_url"`
	Suspended_at        *convert.JSONTime        `json:"suspended_at,omitempty"`
	Text_matches        *SearchResultTextMatches `json:"text_matches,omitempty"`
	Type                string                   `json:"type"`
	Updated_at          *convert.JSONTime        `json:"updated_at,omitempty"`
	URL                 string                   `json:"url"`
}

// ValidationError ...
type ValidationError struct {
	Documentation_url string                   `json:"documentation_url"`
	Errors            []ValidationError_errors `json:"errors,omitempty"`
	Message           string                   `json:"message"`
}

// ValidationErrorSimple ...
type ValidationErrorSimple struct {
	Documentation_url string   `json:"documentation_url"`
	Errors            []string `json:"errors,omitempty"`
	Message           string   `json:"message"`
}

// ValidationError_errors ...
type ValidationError_errors struct {
	Code     string                        `json:"code"`
	Field    *string                       `json:"field,omitempty"`
	Index    *int64                        `json:"index,omitempty"`
	Message  *string                       `json:"message,omitempty"`
	Resource *string                       `json:"resource,omitempty"`
	Value    *ValidationError_errors_value `json:"value,omitempty"`
}

// Verification ...
type Verification struct {
	Payload   string `json:"payload"`
	Reason    string `json:"reason"`
	Signature string `json:"signature"`
	Verified  bool   `json:"verified"`
}

// ViewTraffic ...
type ViewTraffic struct {
	Count   int64     `json:"count"`
	Uniques int64     `json:"uniques"`
	Views   []Traffic `json:"views"`
}

// Workflow ...
type Workflow struct {
	Badge_url  string            `json:"badge_url"`
	Created_at convert.JSONTime  `json:"created_at"`
	Deleted_at *convert.JSONTime `json:"deleted_at,omitempty"`
	Html_url   string            `json:"html_url"`
	ID         int64             `json:"id"`
	Name       string            `json:"name"`
	Node_id    string            `json:"node_id"`
	Path       string            `json:"path"`
	State      string            `json:"state"`
	Updated_at convert.JSONTime  `json:"updated_at"`
	URL        string            `json:"url"`
}

// WorkflowRun ...
type WorkflowRun struct {
	Artifacts_url      string               `json:"artifacts_url"`
	Cancel_url         string               `json:"cancel_url"`
	Check_suite_url    string               `json:"check_suite_url"`
	Conclusion         string               `json:"conclusion"`
	Created_at         convert.JSONTime     `json:"created_at"`
	Event              string               `json:"event"`
	Head_branch        string               `json:"head_branch"`
	Head_commit        SimpleCommit         `json:"head_commit"`
	Head_repository    MinimalRepository    `json:"head_repository"`
	Head_repository_id *int64               `json:"head_repository_id,omitempty"`
	Head_sha           string               `json:"head_sha"`
	Html_url           string               `json:"html_url"`
	ID                 int64                `json:"id"`
	Jobs_url           string               `json:"jobs_url"`
	Logs_url           string               `json:"logs_url"`
	Node_id            string               `json:"node_id"`
	Pull_requests      []PullRequestMinimal `json:"pull_requests"`
	Repository         MinimalRepository    `json:"repository"`
	Rerun_url          string               `json:"rerun_url"`
	Run_number         int64                `json:"run_number"`
	Status             string               `json:"status"`
	Updated_at         convert.JSONTime     `json:"updated_at"`
	URL                string               `json:"url"`
	Workflow_id        int64                `json:"workflow_id"`
	Workflow_url       string               `json:"workflow_url"`
}

// WorkflowRunUsage ...
type WorkflowRunUsage struct {
	Billable        *WorkflowRunUsage_billable `json:"billable,omitempty"`
	Run_duration_ms *int64                     `json:"run_duration_ms,omitempty"`
}

// WorkflowRunUsage_billable ...
type WorkflowRunUsage_billable struct {
	MACOS   *WorkflowRunUsage_billable_MACOS   `json:"MACOS,omitempty"`
	UBUNTU  *WorkflowRunUsage_billable_UBUNTU  `json:"UBUNTU,omitempty"`
	WINDOWS *WorkflowRunUsage_billable_WINDOWS `json:"WINDOWS,omitempty"`
}

// WorkflowRunUsage_billable_MACOS ...
type WorkflowRunUsage_billable_MACOS struct {
	Jobs     *int64 `json:"jobs,omitempty"`
	Total_ms *int64 `json:"total_ms,omitempty"`
}

// WorkflowRunUsage_billable_UBUNTU ...
type WorkflowRunUsage_billable_UBUNTU struct {
	Jobs     *int64 `json:"jobs,omitempty"`
	Total_ms *int64 `json:"total_ms,omitempty"`
}

// WorkflowRunUsage_billable_WINDOWS ...
type WorkflowRunUsage_billable_WINDOWS struct {
	Jobs     *int64 `json:"jobs,omitempty"`
	Total_ms *int64 `json:"total_ms,omitempty"`
}

// WorkflowUsage ...
type WorkflowUsage struct {
	Billable *WorkflowUsage_billable `json:"billable,omitempty"`
}

// WorkflowUsage_billable ...
type WorkflowUsage_billable struct {
	MACOS   *WorkflowUsage_billable_MACOS   `json:"MACOS,omitempty"`
	UBUNTU  *WorkflowUsage_billable_UBUNTU  `json:"UBUNTU,omitempty"`
	WINDOWS *WorkflowUsage_billable_WINDOWS `json:"WINDOWS,omitempty"`
}

// WorkflowUsage_billable_MACOS ...
type WorkflowUsage_billable_MACOS struct {
	Total_ms *int64 `json:"total_ms,omitempty"`
}

// WorkflowUsage_billable_UBUNTU ...
type WorkflowUsage_billable_UBUNTU struct {
	Total_ms *int64 `json:"total_ms,omitempty"`
}

// WorkflowUsage_billable_WINDOWS ...
type WorkflowUsage_billable_WINDOWS struct {
	Total_ms *int64 `json:"total_ms,omitempty"`
}

// DeleteReposIssuesCommentsComment_idRequest ...
type DeleteReposIssuesCommentsComment_idRequest struct {
	Owner      string
	Repo       string
	Comment_id int64
}

// DeleteReposIssuesCommentsComment_idReactionsReaction_idRequest ...
type DeleteReposIssuesCommentsComment_idReactionsReaction_idRequest struct {
	Owner       string
	Repo        string
	Comment_id  int64
	Reaction_id int64
}

// DeleteReposIssuesIssue_numberAssigneesRequest ...
type DeleteReposIssuesIssue_numberAssigneesRequest struct {
	Request      ObjectRequest
	Owner        string
	Repo         string
	Issue_number int64
}

// DeleteReposIssuesIssue_numberLabelsRequest ...
type DeleteReposIssuesIssue_numberLabelsRequest struct {
	Owner        string
	Repo         string
	Issue_number int64
}

// DeleteReposIssuesIssue_numberLabelsRequest ...
type DeleteReposIssuesIssue_numberLabelsNameRequest struct {
	Owner        string
	Repo         string
	Issue_number int64
	Name         string
}

// DeleteReposIssuesIssue_numberLockRequest ...
type DeleteReposIssuesIssue_numberLockRequest struct {
	Owner        string
	Repo         string
	Issue_number int64
}

// DeleteReposIssuesIssue_numberReactionsReaction_idRequest ...
type DeleteReposIssuesIssue_numberReactionsReaction_idRequest struct {
	Owner        string
	Repo         string
	Issue_number int64
	Reaction_id  int64
}

// DeleteReposKeysKey_idRequest ...
type DeleteReposKeysKey_idRequest struct {
	Owner  string
	Repo   string
	Key_id int64
}

// DeleteReposLabelsRequest ...
type DeleteReposLabelsRequest struct {
	Owner string
	Repo  string
	Name  string
}

// GetIssuesListRequest ...
type GetIssuesListRequest struct {
	Filter    *string
	State     *string
	Labels    *string
	Sort      *string
	Direction *string
	Since     *string
	Collab    *bool
	Orgs      *bool
	Owned     *bool
	Pulls     *bool
	Per_page  *int64
	Page      *int64
}

// GetOrgsIssuesListRequest ...
type GetOrgsIssuesListRequest struct {
	Org       string
	Filter    *string
	State     *string
	Labels    *string
	Sort      *string
	Direction *string
	Since     *string
	Per_page  *int64
	Page      *int64
}

// GetReposIssuesListRequest ...
type GetReposIssuesListRequest struct {
	Owner     string
	Repo      string
	Milestone *string
	State     *string
	Assignee  *string
	Creator   *string
	Mentioned *string
	Labels    *string
	Sort      *string
	Direction *string
	Since     *string
	Per_page  *int64
	Page      *int64
}

// GetReposIssuesCommentsListRequest ...
type GetReposIssuesCommentsListRequest struct {
	Owner     string
	Repo      string
	Sort      *string
	Direction *string
	Since     *string
	Per_page  *int64
	Page      *int64
}

// GetReposIssuesCommentsComment_idRequest ...
type GetReposIssuesCommentsComment_idRequest struct {
	Owner      string
	Repo       string
	Comment_id int64
}

// GetReposIssuesCommentsComment_idReactionsListRequest ...
type GetReposIssuesCommentsComment_idReactionsListRequest struct {
	Owner      string
	Repo       string
	Comment_id int64
	Content    *string
	Per_page   *int64
	Page       *int64
}

// GetReposIssuesEventsListRequest ...
type GetReposIssuesEventsListRequest struct {
	Owner    string
	Repo     string
	Per_page *int64
	Page     *int64
}

// GetReposIssuesEventsEvent_idRequest ...
type GetReposIssuesEventsEvent_idRequest struct {
	Owner    string
	Repo     string
	Event_id int64
}

// GetReposIssuesIssue_numberRequest ...
type GetReposIssuesIssue_numberRequest struct {
	Owner        string
	Repo         string
	Issue_number int64
}

// GetReposIssuesIssue_numberCommentsListRequest ...
type GetReposIssuesIssue_numberCommentsListRequest struct {
	Owner        string
	Repo         string
	Issue_number int64
	Since        *string
	Per_page     *int64
	Page         *int64
}

// GetReposIssuesIssue_numberEventsListRequest ...
type GetReposIssuesIssue_numberEventsListRequest struct {
	Owner        string
	Repo         string
	Issue_number int64
	Per_page     *int64
	Page         *int64
}

// GetReposIssuesIssue_numberLabelsListRequest ...
type GetReposIssuesIssue_numberLabelsListRequest struct {
	Owner        string
	Repo         string
	Issue_number int64
	Per_page     *int64
	Page         *int64
}

// GetReposIssuesIssue_numberReactionsListRequest ...
type GetReposIssuesIssue_numberReactionsListRequest struct {
	Owner        string
	Repo         string
	Issue_number int64
	Content      *string
	Per_page     *int64
	Page         *int64
}

// GetReposIssuesIssue_numberTimelineListRequest ...
type GetReposIssuesIssue_numberTimelineListRequest struct {
	Owner        string
	Repo         string
	Issue_number int64
	Per_page     *int64
	Page         *int64
}

// GetReposKeysListRequest ...
type GetReposKeysListRequest struct {
	Owner    string
	Repo     string
	Per_page *int64
	Page     *int64
}

// GetReposKeysKey_idRequest ...
type GetReposKeysKey_idRequest struct {
	Owner  string
	Repo   string
	Key_id int64
}

// GetReposLabelsListRequest ...
type GetReposLabelsListRequest struct {
	Owner    string
	Repo     string
	Per_page *int64
	Page     *int64
}

// GetReposLabelsRequest ...
type GetReposLabelsRequest struct {
	Owner string
	Repo  string
	Name  string
}

// PatchReposIssuesCommentsComment_idRequest ...
type PatchReposIssuesCommentsComment_idRequest struct {
	Request    ObjectRequest
	Owner      string
	Repo       string
	Comment_id int64
}

// PatchReposIssuesIssue_numberRequest ...
type PatchReposIssuesIssue_numberRequest struct {
	Request      ObjectRequest
	Owner        string
	Repo         string
	Issue_number int64
}

// PatchReposLabelsRequest ...
type PatchReposLabelsRequest struct {
	Request ObjectRequest
	Owner   string
	Repo    string
	Name    string
}

// PostReposIssuesRequest ...
type PostReposIssuesRequest struct {
	Request ObjectRequest
	Owner   string
	Repo    string
}

// PostReposIssuesCommentsComment_idReactionsRequest ...
type PostReposIssuesCommentsComment_idReactionsRequest struct {
	Request    ObjectRequest
	Owner      string
	Repo       string
	Comment_id int64
}

// PostReposIssuesIssue_numberAssigneesRequest ...
type PostReposIssuesIssue_numberAssigneesRequest struct {
	Request      ObjectRequest
	Owner        string
	Repo         string
	Issue_number int64
}

// PostReposIssuesIssue_numberCommentsRequest ...
type PostReposIssuesIssue_numberCommentsRequest struct {
	Request      ObjectRequest
	Owner        string
	Repo         string
	Issue_number int64
}

// PostReposIssuesIssue_numberLabelsRequest ...
type PostReposIssuesIssue_numberLabelsRequest struct {
	Request      ObjectRequest
	Owner        string
	Repo         string
	Issue_number int64
}

// PostReposIssuesIssue_numberReactionsRequest ...
type PostReposIssuesIssue_numberReactionsRequest struct {
	Request      ObjectRequest
	Owner        string
	Repo         string
	Issue_number int64
}

// PostReposKeysRequest ...
type PostReposKeysRequest struct {
	Request ObjectRequest
	Owner   string
	Repo    string
}

// PostReposLabelsRequest ...
type PostReposLabelsRequest struct {
	Request ObjectRequest
	Owner   string
	Repo    string
}

// PutReposIssuesIssue_numberLabelsRequest ...
type PutReposIssuesIssue_numberLabelsRequest struct {
	Request      ObjectRequest
	Owner        string
	Repo         string
	Issue_number int64
}

// PutReposIssuesIssue_numberLockRequest ...
type PutReposIssuesIssue_numberLockRequest struct {
	Request      ObjectRequest
	Owner        string
	Repo         string
	Issue_number int64
}

// *_integration validator
func (s *_integration) Validate() error {
	return validator.Validate(s)
}

// *_integration_permissions validator
func (s *_integration_permissions) Validate() error {
	return validator.Validate(s)
}

// *_interactionLimit validator
func (s *_interactionLimit) Validate() error {
	return validator.Validate(s)
}

// *_issues_ok validator
func (s *_issues_ok) Validate() error {
	return validator.Validate(s)
}

// *_orgs__org__issues_ok validator
func (s *_orgs__org__issues_ok) Validate() error {
	return validator.Validate(s)
}

// *Repos__owner___repo__issues__issue_number__comments_ok validator
func (s *Repos__owner___repo__issues__issue_number__comments_ok) Validate() error {
	return validator.Validate(s)
}

// *Repos__owner___repo__issues__issue_number__events_ok validator
func (s *Repos__owner___repo__issues__issue_number__events_ok) Validate() error {
	return validator.Validate(s)
}

// *Repos__owner___repo__issues__issue_number__labels_ok validator
func (s *Repos__owner___repo__issues__issue_number__labels_ok) Validate() error {
	return validator.Validate(s)
}

// *Repos__owner___repo__issues__issue_number__reactions_ok validator
func (s *Repos__owner___repo__issues__issue_number__reactions_ok) Validate() error {
	return validator.Validate(s)
}

// *Repos__owner___repo__issues__issue_number__timeline_ok validator
func (s *Repos__owner___repo__issues__issue_number__timeline_ok) Validate() error {
	return validator.Validate(s)
}

// *Repos__owner___repo__issues_comments__comment_id__reactions_ok validator
func (s *Repos__owner___repo__issues_comments__comment_id__reactions_ok) Validate() error {
	return validator.Validate(s)
}

// *Repos__owner___repo__issues_comments_ok validator
func (s *Repos__owner___repo__issues_comments_ok) Validate() error {
	return validator.Validate(s)
}

// *Repos__owner___repo__issues_events_ok validator
func (s *Repos__owner___repo__issues_events_ok) Validate() error {
	return validator.Validate(s)
}

// *Repos__owner___repo__issues_ok validator
func (s *Repos__owner___repo__issues_ok) Validate() error {
	return validator.Validate(s)
}

// *Repos__owner___repo__keys_ok validator
func (s *Repos__owner___repo__keys_ok) Validate() error {
	return validator.Validate(s)
}

// *Repos__owner___repo__labels_ok validator
func (s *Repos__owner___repo__labels_ok) Validate() error {
	return validator.Validate(s)
}

// *ActionsBillingUsage validator
func (s *ActionsBillingUsage) Validate() error {
	return validator.Validate(s)
}

// *ActionsBillingUsage_minutes_used_breakdown validator
func (s *ActionsBillingUsage_minutes_used_breakdown) Validate() error {
	return validator.Validate(s)
}

// *ActionsEnterprisePermissions validator
func (s *ActionsEnterprisePermissions) Validate() error {
	return validator.Validate(s)
}

// *ActionsOrganizationPermissions validator
func (s *ActionsOrganizationPermissions) Validate() error {
	return validator.Validate(s)
}

// *ActionsPublicKey validator
func (s *ActionsPublicKey) Validate() error {
	return validator.Validate(s)
}

// *ActionsRepositoryPermissions validator
func (s *ActionsRepositoryPermissions) Validate() error {
	return validator.Validate(s)
}

// *ActionsSecret validator
func (s *ActionsSecret) Validate() error {
	return validator.Validate(s)
}

// *Actor validator
func (s *Actor) Validate() error {
	return validator.Validate(s)
}

// *APIOverview validator
func (s *APIOverview) Validate() error {
	return validator.Validate(s)
}

// *APIOverview_ssh_key_fingerprints validator
func (s *APIOverview_ssh_key_fingerprints) Validate() error {
	return validator.Validate(s)
}

// *ApplicationGrant validator
func (s *ApplicationGrant) Validate() error {
	return validator.Validate(s)
}

// *ApplicationGrant_app validator
func (s *ApplicationGrant_app) Validate() error {
	return validator.Validate(s)
}

// *Artifact validator
func (s *Artifact) Validate() error {
	return validator.Validate(s)
}

// *AuthenticationToken validator
func (s *AuthenticationToken) Validate() error {
	return validator.Validate(s)
}

// *Authorization validator
func (s *Authorization) Validate() error {
	return validator.Validate(s)
}

// *Authorization_app validator
func (s *Authorization_app) Validate() error {
	return validator.Validate(s)
}

// *BaseGist validator
func (s *BaseGist) Validate() error {
	return validator.Validate(s)
}

// *BasicError validator
func (s *BasicError) Validate() error {
	return validator.Validate(s)
}

// *Blob validator
func (s *Blob) Validate() error {
	return validator.Validate(s)
}

// *BranchProtection validator
func (s *BranchProtection) Validate() error {
	return validator.Validate(s)
}

// *BranchProtection_allow_deletions validator
func (s *BranchProtection_allow_deletions) Validate() error {
	return validator.Validate(s)
}

// *BranchProtection_allow_force_pushes validator
func (s *BranchProtection_allow_force_pushes) Validate() error {
	return validator.Validate(s)
}

// *BranchProtection_required_linear_history validator
func (s *BranchProtection_required_linear_history) Validate() error {
	return validator.Validate(s)
}

// *BranchProtection_required_status_checks validator
func (s *BranchProtection_required_status_checks) Validate() error {
	return validator.Validate(s)
}

// *BranchRestrictionPolicy validator
func (s *BranchRestrictionPolicy) Validate() error {
	return validator.Validate(s)
}

// *BranchRestrictionPolicy_apps validator
func (s *BranchRestrictionPolicy_apps) Validate() error {
	return validator.Validate(s)
}

// *BranchRestrictionPolicy_apps_owner validator
func (s *BranchRestrictionPolicy_apps_owner) Validate() error {
	return validator.Validate(s)
}

// *BranchRestrictionPolicy_apps_permissions validator
func (s *BranchRestrictionPolicy_apps_permissions) Validate() error {
	return validator.Validate(s)
}

// *BranchRestrictionPolicy_teams validator
func (s *BranchRestrictionPolicy_teams) Validate() error {
	return validator.Validate(s)
}

// *BranchRestrictionPolicy_users validator
func (s *BranchRestrictionPolicy_users) Validate() error {
	return validator.Validate(s)
}

// *BranchShort validator
func (s *BranchShort) Validate() error {
	return validator.Validate(s)
}

// *BranchShort_commit validator
func (s *BranchShort_commit) Validate() error {
	return validator.Validate(s)
}

// *BranchWithProtection validator
func (s *BranchWithProtection) Validate() error {
	return validator.Validate(s)
}

// *BranchWithProtection__links validator
func (s *BranchWithProtection__links) Validate() error {
	return validator.Validate(s)
}

// *CheckAnnotation validator
func (s *CheckAnnotation) Validate() error {
	return validator.Validate(s)
}

// *CheckRun validator
func (s *CheckRun) Validate() error {
	return validator.Validate(s)
}

// *CheckRun_check_suite validator
func (s *CheckRun_check_suite) Validate() error {
	return validator.Validate(s)
}

// *CheckRun_output validator
func (s *CheckRun_output) Validate() error {
	return validator.Validate(s)
}

// *CheckSuite validator
func (s *CheckSuite) Validate() error {
	return validator.Validate(s)
}

// *CheckSuitePreference validator
func (s *CheckSuitePreference) Validate() error {
	return validator.Validate(s)
}

// *CheckSuitePreference_preferences validator
func (s *CheckSuitePreference_preferences) Validate() error {
	return validator.Validate(s)
}

// *CheckSuitePreference_preferences_auto_trigger_checks validator
func (s *CheckSuitePreference_preferences_auto_trigger_checks) Validate() error {
	return validator.Validate(s)
}

// *CloneTraffic validator
func (s *CloneTraffic) Validate() error {
	return validator.Validate(s)
}

// *CodeOfConduct validator
func (s *CodeOfConduct) Validate() error {
	return validator.Validate(s)
}

// *CodeOfConductSimple validator
func (s *CodeOfConductSimple) Validate() error {
	return validator.Validate(s)
}

// *CodeScanningAlertCodeScanningAlert validator
func (s *CodeScanningAlertCodeScanningAlert) Validate() error {
	return validator.Validate(s)
}

// *CodeScanningAlertCodeScanningAlertItems validator
func (s *CodeScanningAlertCodeScanningAlertItems) Validate() error {
	return validator.Validate(s)
}

// *CodeScanningAlertInstances_obj validator
func (s *CodeScanningAlertInstances_obj) Validate() error {
	return validator.Validate(s)
}

// *CodeScanningAlertRule validator
func (s *CodeScanningAlertRule) Validate() error {
	return validator.Validate(s)
}

// *CodeScanningAnalysisCodeScanningAnalysis validator
func (s *CodeScanningAnalysisCodeScanningAnalysis) Validate() error {
	return validator.Validate(s)
}

// *CodeScanningAnalysisTool validator
func (s *CodeScanningAnalysisTool) Validate() error {
	return validator.Validate(s)
}

// *CodeSearchResultItem validator
func (s *CodeSearchResultItem) Validate() error {
	return validator.Validate(s)
}

// *Collaborator validator
func (s *Collaborator) Validate() error {
	return validator.Validate(s)
}

// *Collaborator_permissions validator
func (s *Collaborator_permissions) Validate() error {
	return validator.Validate(s)
}

// *CombinedBillingUsage validator
func (s *CombinedBillingUsage) Validate() error {
	return validator.Validate(s)
}

// *CombinedCommitStatus validator
func (s *CombinedCommitStatus) Validate() error {
	return validator.Validate(s)
}

// *Commit validator
func (s *Commit) Validate() error {
	return validator.Validate(s)
}

// *CommitActivity validator
func (s *CommitActivity) Validate() error {
	return validator.Validate(s)
}

// *CommitComment validator
func (s *CommitComment) Validate() error {
	return validator.Validate(s)
}

// *CommitComparison validator
func (s *CommitComparison) Validate() error {
	return validator.Validate(s)
}

// *CommitSearchResultItem validator
func (s *CommitSearchResultItem) Validate() error {
	return validator.Validate(s)
}

// *CommitSearchResultItem_commit validator
func (s *CommitSearchResultItem_commit) Validate() error {
	return validator.Validate(s)
}

// *CommitSearchResultItem_commit_author validator
func (s *CommitSearchResultItem_commit_author) Validate() error {
	return validator.Validate(s)
}

// *CommitSearchResultItem_commit_tree validator
func (s *CommitSearchResultItem_commit_tree) Validate() error {
	return validator.Validate(s)
}

// *CommitSearchResultItem_parents validator
func (s *CommitSearchResultItem_parents) Validate() error {
	return validator.Validate(s)
}

// *Commit_commit validator
func (s *Commit_commit) Validate() error {
	return validator.Validate(s)
}

// *Commit_commit_tree validator
func (s *Commit_commit_tree) Validate() error {
	return validator.Validate(s)
}

// *Commit_files validator
func (s *Commit_files) Validate() error {
	return validator.Validate(s)
}

// *Commit_parents validator
func (s *Commit_parents) Validate() error {
	return validator.Validate(s)
}

// *Commit_stats validator
func (s *Commit_stats) Validate() error {
	return validator.Validate(s)
}

// *CommunityHealthFile validator
func (s *CommunityHealthFile) Validate() error {
	return validator.Validate(s)
}

// *CommunityProfile validator
func (s *CommunityProfile) Validate() error {
	return validator.Validate(s)
}

// *CommunityProfile_files validator
func (s *CommunityProfile_files) Validate() error {
	return validator.Validate(s)
}

// *ContentDirectory_obj validator
func (s *ContentDirectory_obj) Validate() error {
	return validator.Validate(s)
}

// *ContentDirectory_obj_contentDirectory_obj__links validator
func (s *ContentDirectory_obj_contentDirectory_obj__links) Validate() error {
	return validator.Validate(s)
}

// *ContentFile validator
func (s *ContentFile) Validate() error {
	return validator.Validate(s)
}

// *ContentFile__links validator
func (s *ContentFile__links) Validate() error {
	return validator.Validate(s)
}

// *ContentReferenceAttachment validator
func (s *ContentReferenceAttachment) Validate() error {
	return validator.Validate(s)
}

// *ContentSubmodule validator
func (s *ContentSubmodule) Validate() error {
	return validator.Validate(s)
}

// *ContentSubmodule__links validator
func (s *ContentSubmodule__links) Validate() error {
	return validator.Validate(s)
}

// *ContentSymlink validator
func (s *ContentSymlink) Validate() error {
	return validator.Validate(s)
}

// *ContentSymlink__links validator
func (s *ContentSymlink__links) Validate() error {
	return validator.Validate(s)
}

// *ContentTraffic validator
func (s *ContentTraffic) Validate() error {
	return validator.Validate(s)
}

// *ContentTree validator
func (s *ContentTree) Validate() error {
	return validator.Validate(s)
}

// *ContentTree__links validator
func (s *ContentTree__links) Validate() error {
	return validator.Validate(s)
}

// *ContentTree_entries validator
func (s *ContentTree_entries) Validate() error {
	return validator.Validate(s)
}

// *ContentTree_entries__links validator
func (s *ContentTree_entries__links) Validate() error {
	return validator.Validate(s)
}

// *Contributor validator
func (s *Contributor) Validate() error {
	return validator.Validate(s)
}

// *ContributorActivity validator
func (s *ContributorActivity) Validate() error {
	return validator.Validate(s)
}

// *ContributorActivity_weeks validator
func (s *ContributorActivity_weeks) Validate() error {
	return validator.Validate(s)
}

// *CredentialAuthorization validator
func (s *CredentialAuthorization) Validate() error {
	return validator.Validate(s)
}

// *DeployKey validator
func (s *DeployKey) Validate() error {
	return validator.Validate(s)
}

// *Deployment validator
func (s *Deployment) Validate() error {
	return validator.Validate(s)
}

// *DeploymentStatus validator
func (s *DeploymentStatus) Validate() error {
	return validator.Validate(s)
}

// *DiffEntry validator
func (s *DiffEntry) Validate() error {
	return validator.Validate(s)
}

// *Email_object validator
func (s *Email_object) Validate() error {
	return validator.Validate(s)
}

// *Enterprise validator
func (s *Enterprise) Validate() error {
	return validator.Validate(s)
}

// *Event validator
func (s *Event) Validate() error {
	return validator.Validate(s)
}

// *Event_payload validator
func (s *Event_payload) Validate() error {
	return validator.Validate(s)
}

// *Event_payload_pages validator
func (s *Event_payload_pages) Validate() error {
	return validator.Validate(s)
}

// *Event_repo validator
func (s *Event_repo) Validate() error {
	return validator.Validate(s)
}

// *Feed validator
func (s *Feed) Validate() error {
	return validator.Validate(s)
}

// *Feed__links validator
func (s *Feed__links) Validate() error {
	return validator.Validate(s)
}

// *FileCommit validator
func (s *FileCommit) Validate() error {
	return validator.Validate(s)
}

// *FileCommit_commit validator
func (s *FileCommit_commit) Validate() error {
	return validator.Validate(s)
}

// *FileCommit_commit_author validator
func (s *FileCommit_commit_author) Validate() error {
	return validator.Validate(s)
}

// *FileCommit_commit_committer validator
func (s *FileCommit_commit_committer) Validate() error {
	return validator.Validate(s)
}

// *FileCommit_commit_parents validator
func (s *FileCommit_commit_parents) Validate() error {
	return validator.Validate(s)
}

// *FileCommit_commit_tree validator
func (s *FileCommit_commit_tree) Validate() error {
	return validator.Validate(s)
}

// *FileCommit_commit_verification validator
func (s *FileCommit_commit_verification) Validate() error {
	return validator.Validate(s)
}

// *FileCommit_content validator
func (s *FileCommit_content) Validate() error {
	return validator.Validate(s)
}

// *FileCommit_content__links validator
func (s *FileCommit_content__links) Validate() error {
	return validator.Validate(s)
}

// *FullRepository validator
func (s *FullRepository) Validate() error {
	return validator.Validate(s)
}

// *FullRepository_permissions validator
func (s *FullRepository_permissions) Validate() error {
	return validator.Validate(s)
}

// *GistComment validator
func (s *GistComment) Validate() error {
	return validator.Validate(s)
}

// *GistCommit validator
func (s *GistCommit) Validate() error {
	return validator.Validate(s)
}

// *GistCommit_change_status validator
func (s *GistCommit_change_status) Validate() error {
	return validator.Validate(s)
}

// *GistSimple validator
func (s *GistSimple) Validate() error {
	return validator.Validate(s)
}

// *GitCommit validator
func (s *GitCommit) Validate() error {
	return validator.Validate(s)
}

// *GitCommit_author validator
func (s *GitCommit_author) Validate() error {
	return validator.Validate(s)
}

// *GitCommit_committer validator
func (s *GitCommit_committer) Validate() error {
	return validator.Validate(s)
}

// *GitCommit_parents validator
func (s *GitCommit_parents) Validate() error {
	return validator.Validate(s)
}

// *GitCommit_tree validator
func (s *GitCommit_tree) Validate() error {
	return validator.Validate(s)
}

// *GitCommit_verification validator
func (s *GitCommit_verification) Validate() error {
	return validator.Validate(s)
}

// *GitRef validator
func (s *GitRef) Validate() error {
	return validator.Validate(s)
}

// *GitRef_object validator
func (s *GitRef_object) Validate() error {
	return validator.Validate(s)
}

// *GitTag validator
func (s *GitTag) Validate() error {
	return validator.Validate(s)
}

// *GitTag_object validator
func (s *GitTag_object) Validate() error {
	return validator.Validate(s)
}

// *GitTag_tagger validator
func (s *GitTag_tagger) Validate() error {
	return validator.Validate(s)
}

// *GitTree validator
func (s *GitTree) Validate() error {
	return validator.Validate(s)
}

// *GitTree_tree validator
func (s *GitTree_tree) Validate() error {
	return validator.Validate(s)
}

// *GitUser validator
func (s *GitUser) Validate() error {
	return validator.Validate(s)
}

// *GitignoreTemplate validator
func (s *GitignoreTemplate) Validate() error {
	return validator.Validate(s)
}

// *GpgKey validator
func (s *GpgKey) Validate() error {
	return validator.Validate(s)
}

// *GpgKey_emails validator
func (s *GpgKey_emails) Validate() error {
	return validator.Validate(s)
}

// *GpgKey_subkeys validator
func (s *GpgKey_subkeys) Validate() error {
	return validator.Validate(s)
}

// *GroupMapping validator
func (s *GroupMapping) Validate() error {
	return validator.Validate(s)
}

// *GroupMapping_groups validator
func (s *GroupMapping_groups) Validate() error {
	return validator.Validate(s)
}

// *Hook validator
func (s *Hook) Validate() error {
	return validator.Validate(s)
}

// *HookResponse validator
func (s *HookResponse) Validate() error {
	return validator.Validate(s)
}

// *Hook_config validator
func (s *Hook_config) Validate() error {
	return validator.Validate(s)
}

// *Hovercard validator
func (s *Hovercard) Validate() error {
	return validator.Validate(s)
}

// *Hovercard_contexts validator
func (s *Hovercard_contexts) Validate() error {
	return validator.Validate(s)
}

// *Import validator
func (s *Import) Validate() error {
	return validator.Validate(s)
}

// *Import_project_choices validator
func (s *Import_project_choices) Validate() error {
	return validator.Validate(s)
}

// *Installation validator
func (s *Installation) Validate() error {
	return validator.Validate(s)
}

// *InstallationToken validator
func (s *InstallationToken) Validate() error {
	return validator.Validate(s)
}

// *InstallationToken_permissions validator
func (s *InstallationToken_permissions) Validate() error {
	return validator.Validate(s)
}

// *Installation_permissions validator
func (s *Installation_permissions) Validate() error {
	return validator.Validate(s)
}

// *Issue validator
func (s *Issue) Validate() error {
	return validator.Validate(s)
}

// *IssueComment validator
func (s *IssueComment) Validate() error {
	return validator.Validate(s)
}

// *IssueEvent validator
func (s *IssueEvent) Validate() error {
	return validator.Validate(s)
}

// *IssueEventDismissedReview validator
func (s *IssueEventDismissedReview) Validate() error {
	return validator.Validate(s)
}

// *IssueEventForIssue validator
func (s *IssueEventForIssue) Validate() error {
	return validator.Validate(s)
}

// *IssueEventLabel validator
func (s *IssueEventLabel) Validate() error {
	return validator.Validate(s)
}

// *IssueEventMilestone validator
func (s *IssueEventMilestone) Validate() error {
	return validator.Validate(s)
}

// *IssueEventProjectCard validator
func (s *IssueEventProjectCard) Validate() error {
	return validator.Validate(s)
}

// *IssueEventRename validator
func (s *IssueEventRename) Validate() error {
	return validator.Validate(s)
}

// *IssueSearchResultItem validator
func (s *IssueSearchResultItem) Validate() error {
	return validator.Validate(s)
}

// *IssueSearchResultItem_labels validator
func (s *IssueSearchResultItem_labels) Validate() error {
	return validator.Validate(s)
}

// *IssueSearchResultItem_pull_request validator
func (s *IssueSearchResultItem_pull_request) Validate() error {
	return validator.Validate(s)
}

// *IssueSimple validator
func (s *IssueSimple) Validate() error {
	return validator.Validate(s)
}

// *IssueSimple_labels validator
func (s *IssueSimple_labels) Validate() error {
	return validator.Validate(s)
}

// *IssueSimple_pull_request validator
func (s *IssueSimple_pull_request) Validate() error {
	return validator.Validate(s)
}

// *Issue_labels_object validator
func (s *Issue_labels_object) Validate() error {
	return validator.Validate(s)
}

// *Issue_pull_request validator
func (s *Issue_pull_request) Validate() error {
	return validator.Validate(s)
}

// *Job validator
func (s *Job) Validate() error {
	return validator.Validate(s)
}

// *Job_steps validator
func (s *Job_steps) Validate() error {
	return validator.Validate(s)
}

// *Key validator
func (s *Key) Validate() error {
	return validator.Validate(s)
}

// *KeySimple validator
func (s *KeySimple) Validate() error {
	return validator.Validate(s)
}

// *Label validator
func (s *Label) Validate() error {
	return validator.Validate(s)
}

// *LabelSearchResultItem validator
func (s *LabelSearchResultItem) Validate() error {
	return validator.Validate(s)
}

// *License validator
func (s *License) Validate() error {
	return validator.Validate(s)
}

// *LicenseContent validator
func (s *LicenseContent) Validate() error {
	return validator.Validate(s)
}

// *LicenseContent__links validator
func (s *LicenseContent__links) Validate() error {
	return validator.Validate(s)
}

// *LicenseSimple validator
func (s *LicenseSimple) Validate() error {
	return validator.Validate(s)
}

// *Link validator
func (s *Link) Validate() error {
	return validator.Validate(s)
}

// *LinkWithType validator
func (s *LinkWithType) Validate() error {
	return validator.Validate(s)
}

// *MarketplaceAccount validator
func (s *MarketplaceAccount) Validate() error {
	return validator.Validate(s)
}

// *MarketplaceListingPlan validator
func (s *MarketplaceListingPlan) Validate() error {
	return validator.Validate(s)
}

// *MarketplacePurchase validator
func (s *MarketplacePurchase) Validate() error {
	return validator.Validate(s)
}

// *MarketplacePurchase_marketplace_pending_change validator
func (s *MarketplacePurchase_marketplace_pending_change) Validate() error {
	return validator.Validate(s)
}

// *MarketplacePurchase_marketplace_purchase validator
func (s *MarketplacePurchase_marketplace_purchase) Validate() error {
	return validator.Validate(s)
}

// *Migration validator
func (s *Migration) Validate() error {
	return validator.Validate(s)
}

// *Milestone validator
func (s *Milestone) Validate() error {
	return validator.Validate(s)
}

// *MinimalRepository validator
func (s *MinimalRepository) Validate() error {
	return validator.Validate(s)
}

// *MinimalRepository_license validator
func (s *MinimalRepository_license) Validate() error {
	return validator.Validate(s)
}

// *MinimalRepository_permissions validator
func (s *MinimalRepository_permissions) Validate() error {
	return validator.Validate(s)
}

// *Object validator
func (s *Object) Validate() error {
	return validator.Validate(s)
}

// *ObjectRequest validator
func (s *ObjectRequest) Validate() error {
	return validator.Validate(s)
}

// *ObjectRequest_labels_object validator
func (s *ObjectRequest_labels_object) Validate() error {
	return validator.Validate(s)
}

// *Object_labels_object validator
func (s *Object_labels_object) Validate() error {
	return validator.Validate(s)
}

// *OrgHook validator
func (s *OrgHook) Validate() error {
	return validator.Validate(s)
}

// *OrgHook_config validator
func (s *OrgHook_config) Validate() error {
	return validator.Validate(s)
}

// *OrgMembership validator
func (s *OrgMembership) Validate() error {
	return validator.Validate(s)
}

// *OrgMembership_permissions validator
func (s *OrgMembership_permissions) Validate() error {
	return validator.Validate(s)
}

// *OrganizationActionsSecret validator
func (s *OrganizationActionsSecret) Validate() error {
	return validator.Validate(s)
}

// *OrganizationFull validator
func (s *OrganizationFull) Validate() error {
	return validator.Validate(s)
}

// *OrganizationFull_plan validator
func (s *OrganizationFull_plan) Validate() error {
	return validator.Validate(s)
}

// *OrganizationInvitation validator
func (s *OrganizationInvitation) Validate() error {
	return validator.Validate(s)
}

// *OrganizationSimple validator
func (s *OrganizationSimple) Validate() error {
	return validator.Validate(s)
}

// *PackagesBillingUsage validator
func (s *PackagesBillingUsage) Validate() error {
	return validator.Validate(s)
}

// *Page validator
func (s *Page) Validate() error {
	return validator.Validate(s)
}

// *PageBuild validator
func (s *PageBuild) Validate() error {
	return validator.Validate(s)
}

// *PageBuildStatus validator
func (s *PageBuildStatus) Validate() error {
	return validator.Validate(s)
}

// *PageBuild_error validator
func (s *PageBuild_error) Validate() error {
	return validator.Validate(s)
}

// *PagesSourceHash validator
func (s *PagesSourceHash) Validate() error {
	return validator.Validate(s)
}

// *ParticipationStats validator
func (s *ParticipationStats) Validate() error {
	return validator.Validate(s)
}

// *PorterAuthor validator
func (s *PorterAuthor) Validate() error {
	return validator.Validate(s)
}

// *PorterLargeFile validator
func (s *PorterLargeFile) Validate() error {
	return validator.Validate(s)
}

// *PrivateUser validator
func (s *PrivateUser) Validate() error {
	return validator.Validate(s)
}

// *PrivateUser_plan validator
func (s *PrivateUser_plan) Validate() error {
	return validator.Validate(s)
}

// *Project validator
func (s *Project) Validate() error {
	return validator.Validate(s)
}

// *ProjectCard validator
func (s *ProjectCard) Validate() error {
	return validator.Validate(s)
}

// *ProjectColumn validator
func (s *ProjectColumn) Validate() error {
	return validator.Validate(s)
}

// *Project_permissions validator
func (s *Project_permissions) Validate() error {
	return validator.Validate(s)
}

// *ProtectedBranch validator
func (s *ProtectedBranch) Validate() error {
	return validator.Validate(s)
}

// *ProtectedBranchAdminEnforced validator
func (s *ProtectedBranchAdminEnforced) Validate() error {
	return validator.Validate(s)
}

// *ProtectedBranchPullRequestReview validator
func (s *ProtectedBranchPullRequestReview) Validate() error {
	return validator.Validate(s)
}

// *ProtectedBranchPullRequestReview_dismissal_restrictions validator
func (s *ProtectedBranchPullRequestReview_dismissal_restrictions) Validate() error {
	return validator.Validate(s)
}

// *ProtectedBranch_allow_deletions validator
func (s *ProtectedBranch_allow_deletions) Validate() error {
	return validator.Validate(s)
}

// *ProtectedBranch_allow_force_pushes validator
func (s *ProtectedBranch_allow_force_pushes) Validate() error {
	return validator.Validate(s)
}

// *ProtectedBranch_enforce_admins validator
func (s *ProtectedBranch_enforce_admins) Validate() error {
	return validator.Validate(s)
}

// *ProtectedBranch_required_linear_history validator
func (s *ProtectedBranch_required_linear_history) Validate() error {
	return validator.Validate(s)
}

// *ProtectedBranch_required_pull_request_reviews validator
func (s *ProtectedBranch_required_pull_request_reviews) Validate() error {
	return validator.Validate(s)
}

// *ProtectedBranch_required_pull_request_reviews_dismissal_restrictions validator
func (s *ProtectedBranch_required_pull_request_reviews_dismissal_restrictions) Validate() error {
	return validator.Validate(s)
}

// *ProtectedBranch_required_signatures validator
func (s *ProtectedBranch_required_signatures) Validate() error {
	return validator.Validate(s)
}

// *PublicUser validator
func (s *PublicUser) Validate() error {
	return validator.Validate(s)
}

// *PublicUser_plan validator
func (s *PublicUser_plan) Validate() error {
	return validator.Validate(s)
}

// *PullRequest validator
func (s *PullRequest) Validate() error {
	return validator.Validate(s)
}

// *PullRequestMergeResult validator
func (s *PullRequestMergeResult) Validate() error {
	return validator.Validate(s)
}

// *PullRequestMinimal validator
func (s *PullRequestMinimal) Validate() error {
	return validator.Validate(s)
}

// *PullRequestMinimal_base validator
func (s *PullRequestMinimal_base) Validate() error {
	return validator.Validate(s)
}

// *PullRequestMinimal_base_repo validator
func (s *PullRequestMinimal_base_repo) Validate() error {
	return validator.Validate(s)
}

// *PullRequestMinimal_head validator
func (s *PullRequestMinimal_head) Validate() error {
	return validator.Validate(s)
}

// *PullRequestMinimal_head_repo validator
func (s *PullRequestMinimal_head_repo) Validate() error {
	return validator.Validate(s)
}

// *PullRequestReview validator
func (s *PullRequestReview) Validate() error {
	return validator.Validate(s)
}

// *PullRequestReviewComment validator
func (s *PullRequestReviewComment) Validate() error {
	return validator.Validate(s)
}

// *PullRequestReviewComment__links validator
func (s *PullRequestReviewComment__links) Validate() error {
	return validator.Validate(s)
}

// *PullRequestReviewComment__links_html validator
func (s *PullRequestReviewComment__links_html) Validate() error {
	return validator.Validate(s)
}

// *PullRequestReviewComment__links_pull_request validator
func (s *PullRequestReviewComment__links_pull_request) Validate() error {
	return validator.Validate(s)
}

// *PullRequestReviewComment__links_self validator
func (s *PullRequestReviewComment__links_self) Validate() error {
	return validator.Validate(s)
}

// *PullRequestReviewRequest validator
func (s *PullRequestReviewRequest) Validate() error {
	return validator.Validate(s)
}

// *PullRequestReviewRequest_teams validator
func (s *PullRequestReviewRequest_teams) Validate() error {
	return validator.Validate(s)
}

// *PullRequestReviewRequest_users validator
func (s *PullRequestReviewRequest_users) Validate() error {
	return validator.Validate(s)
}

// *PullRequestReview__links validator
func (s *PullRequestReview__links) Validate() error {
	return validator.Validate(s)
}

// *PullRequestReview__links_html validator
func (s *PullRequestReview__links_html) Validate() error {
	return validator.Validate(s)
}

// *PullRequestReview__links_pull_request validator
func (s *PullRequestReview__links_pull_request) Validate() error {
	return validator.Validate(s)
}

// *PullRequestSimple validator
func (s *PullRequestSimple) Validate() error {
	return validator.Validate(s)
}

// *PullRequestSimple__links validator
func (s *PullRequestSimple__links) Validate() error {
	return validator.Validate(s)
}

// *PullRequestSimple_base validator
func (s *PullRequestSimple_base) Validate() error {
	return validator.Validate(s)
}

// *PullRequestSimple_head validator
func (s *PullRequestSimple_head) Validate() error {
	return validator.Validate(s)
}

// *PullRequestSimple_labels validator
func (s *PullRequestSimple_labels) Validate() error {
	return validator.Validate(s)
}

// *PullRequest__links validator
func (s *PullRequest__links) Validate() error {
	return validator.Validate(s)
}

// *PullRequest_base validator
func (s *PullRequest_base) Validate() error {
	return validator.Validate(s)
}

// *PullRequest_base_repo validator
func (s *PullRequest_base_repo) Validate() error {
	return validator.Validate(s)
}

// *PullRequest_base_repo_owner validator
func (s *PullRequest_base_repo_owner) Validate() error {
	return validator.Validate(s)
}

// *PullRequest_base_repo_permissions validator
func (s *PullRequest_base_repo_permissions) Validate() error {
	return validator.Validate(s)
}

// *PullRequest_base_user validator
func (s *PullRequest_base_user) Validate() error {
	return validator.Validate(s)
}

// *PullRequest_head validator
func (s *PullRequest_head) Validate() error {
	return validator.Validate(s)
}

// *PullRequest_head_repo validator
func (s *PullRequest_head_repo) Validate() error {
	return validator.Validate(s)
}

// *PullRequest_head_repo_license validator
func (s *PullRequest_head_repo_license) Validate() error {
	return validator.Validate(s)
}

// *PullRequest_head_repo_owner validator
func (s *PullRequest_head_repo_owner) Validate() error {
	return validator.Validate(s)
}

// *PullRequest_head_repo_permissions validator
func (s *PullRequest_head_repo_permissions) Validate() error {
	return validator.Validate(s)
}

// *PullRequest_head_user validator
func (s *PullRequest_head_user) Validate() error {
	return validator.Validate(s)
}

// *PullRequest_labels validator
func (s *PullRequest_labels) Validate() error {
	return validator.Validate(s)
}

// *RateLimit validator
func (s *RateLimit) Validate() error {
	return validator.Validate(s)
}

// *RateLimitOverview validator
func (s *RateLimitOverview) Validate() error {
	return validator.Validate(s)
}

// *RateLimitOverview_resources validator
func (s *RateLimitOverview_resources) Validate() error {
	return validator.Validate(s)
}

// *Reaction validator
func (s *Reaction) Validate() error {
	return validator.Validate(s)
}

// *ReactionRollup validator
func (s *ReactionRollup) Validate() error {
	return validator.Validate(s)
}

// *ReferrerTraffic validator
func (s *ReferrerTraffic) Validate() error {
	return validator.Validate(s)
}

// *Release validator
func (s *Release) Validate() error {
	return validator.Validate(s)
}

// *ReleaseAsset validator
func (s *ReleaseAsset) Validate() error {
	return validator.Validate(s)
}

// *RepoSearchResultItem validator
func (s *RepoSearchResultItem) Validate() error {
	return validator.Validate(s)
}

// *RepoSearchResultItem_permissions validator
func (s *RepoSearchResultItem_permissions) Validate() error {
	return validator.Validate(s)
}

// *Repository validator
func (s *Repository) Validate() error {
	return validator.Validate(s)
}

// *RepositoryCollaboratorPermission validator
func (s *RepositoryCollaboratorPermission) Validate() error {
	return validator.Validate(s)
}

// *RepositoryInvitation validator
func (s *RepositoryInvitation) Validate() error {
	return validator.Validate(s)
}

// *RepositorySubscription validator
func (s *RepositorySubscription) Validate() error {
	return validator.Validate(s)
}

// *Repository_permissions validator
func (s *Repository_permissions) Validate() error {
	return validator.Validate(s)
}

// *Repository_template_repository validator
func (s *Repository_template_repository) Validate() error {
	return validator.Validate(s)
}

// *Repository_template_repository_owner validator
func (s *Repository_template_repository_owner) Validate() error {
	return validator.Validate(s)
}

// *Repository_template_repository_permissions validator
func (s *Repository_template_repository_permissions) Validate() error {
	return validator.Validate(s)
}

// *ReviewComment validator
func (s *ReviewComment) Validate() error {
	return validator.Validate(s)
}

// *ReviewComment__links validator
func (s *ReviewComment__links) Validate() error {
	return validator.Validate(s)
}

// *Runner validator
func (s *Runner) Validate() error {
	return validator.Validate(s)
}

// *RunnerApplication validator
func (s *RunnerApplication) Validate() error {
	return validator.Validate(s)
}

// *RunnerGroupsEnterprise validator
func (s *RunnerGroupsEnterprise) Validate() error {
	return validator.Validate(s)
}

// *RunnerGroupsOrg validator
func (s *RunnerGroupsOrg) Validate() error {
	return validator.Validate(s)
}

// *Runner_labels validator
func (s *Runner_labels) Validate() error {
	return validator.Validate(s)
}

// *ScimEnterpriseGroup validator
func (s *ScimEnterpriseGroup) Validate() error {
	return validator.Validate(s)
}

// *ScimEnterpriseGroup_members validator
func (s *ScimEnterpriseGroup_members) Validate() error {
	return validator.Validate(s)
}

// *ScimEnterpriseGroup_meta validator
func (s *ScimEnterpriseGroup_meta) Validate() error {
	return validator.Validate(s)
}

// *ScimEnterpriseUser validator
func (s *ScimEnterpriseUser) Validate() error {
	return validator.Validate(s)
}

// *ScimEnterpriseUser_emails validator
func (s *ScimEnterpriseUser_emails) Validate() error {
	return validator.Validate(s)
}

// *ScimEnterpriseUser_groups validator
func (s *ScimEnterpriseUser_groups) Validate() error {
	return validator.Validate(s)
}

// *ScimEnterpriseUser_meta validator
func (s *ScimEnterpriseUser_meta) Validate() error {
	return validator.Validate(s)
}

// *ScimEnterpriseUser_name validator
func (s *ScimEnterpriseUser_name) Validate() error {
	return validator.Validate(s)
}

// *ScimError validator
func (s *ScimError) Validate() error {
	return validator.Validate(s)
}

// *ScimGroupListEnterprise validator
func (s *ScimGroupListEnterprise) Validate() error {
	return validator.Validate(s)
}

// *ScimGroupListEnterprise_Resources validator
func (s *ScimGroupListEnterprise_Resources) Validate() error {
	return validator.Validate(s)
}

// *ScimGroupListEnterprise_Resources_members validator
func (s *ScimGroupListEnterprise_Resources_members) Validate() error {
	return validator.Validate(s)
}

// *ScimGroupListEnterprise_Resources_meta validator
func (s *ScimGroupListEnterprise_Resources_meta) Validate() error {
	return validator.Validate(s)
}

// *ScimUser validator
func (s *ScimUser) Validate() error {
	return validator.Validate(s)
}

// *ScimUserList validator
func (s *ScimUserList) Validate() error {
	return validator.Validate(s)
}

// *ScimUserListEnterprise validator
func (s *ScimUserListEnterprise) Validate() error {
	return validator.Validate(s)
}

// *ScimUserListEnterprise_Resources validator
func (s *ScimUserListEnterprise_Resources) Validate() error {
	return validator.Validate(s)
}

// *ScimUserListEnterprise_Resources_emails validator
func (s *ScimUserListEnterprise_Resources_emails) Validate() error {
	return validator.Validate(s)
}

// *ScimUserListEnterprise_Resources_groups validator
func (s *ScimUserListEnterprise_Resources_groups) Validate() error {
	return validator.Validate(s)
}

// *ScimUserListEnterprise_Resources_meta validator
func (s *ScimUserListEnterprise_Resources_meta) Validate() error {
	return validator.Validate(s)
}

// *ScimUserListEnterprise_Resources_name validator
func (s *ScimUserListEnterprise_Resources_name) Validate() error {
	return validator.Validate(s)
}

// *ScimUser_emails validator
func (s *ScimUser_emails) Validate() error {
	return validator.Validate(s)
}

// *ScimUser_groups validator
func (s *ScimUser_groups) Validate() error {
	return validator.Validate(s)
}

// *ScimUser_meta validator
func (s *ScimUser_meta) Validate() error {
	return validator.Validate(s)
}

// *ScimUser_name validator
func (s *ScimUser_name) Validate() error {
	return validator.Validate(s)
}

// *ScimUser_operations validator
func (s *ScimUser_operations) Validate() error {
	return validator.Validate(s)
}

// *ScopedInstallation validator
func (s *ScopedInstallation) Validate() error {
	return validator.Validate(s)
}

// *SearchResultTextMatches_obj validator
func (s *SearchResultTextMatches_obj) Validate() error {
	return validator.Validate(s)
}

// *SearchResultTextMatches_obj_searchResultTextMatches_obj_matches validator
func (s *SearchResultTextMatches_obj_searchResultTextMatches_obj_matches) Validate() error {
	return validator.Validate(s)
}

// *SelectedActions validator
func (s *SelectedActions) Validate() error {
	return validator.Validate(s)
}

// *ShortBlob validator
func (s *ShortBlob) Validate() error {
	return validator.Validate(s)
}

// *ShortBranch validator
func (s *ShortBranch) Validate() error {
	return validator.Validate(s)
}

// *ShortBranch_commit validator
func (s *ShortBranch_commit) Validate() error {
	return validator.Validate(s)
}

// *SimpleCommit validator
func (s *SimpleCommit) Validate() error {
	return validator.Validate(s)
}

// *SimpleCommitStatus validator
func (s *SimpleCommitStatus) Validate() error {
	return validator.Validate(s)
}

// *SimpleCommit_author validator
func (s *SimpleCommit_author) Validate() error {
	return validator.Validate(s)
}

// *SimpleCommit_committer validator
func (s *SimpleCommit_committer) Validate() error {
	return validator.Validate(s)
}

// *SimpleUser validator
func (s *SimpleUser) Validate() error {
	return validator.Validate(s)
}

// *Stargazer validator
func (s *Stargazer) Validate() error {
	return validator.Validate(s)
}

// *StarredRepository validator
func (s *StarredRepository) Validate() error {
	return validator.Validate(s)
}

// *Status validator
func (s *Status) Validate() error {
	return validator.Validate(s)
}

// *StatusCheckPolicy validator
func (s *StatusCheckPolicy) Validate() error {
	return validator.Validate(s)
}

// *Tag validator
func (s *Tag) Validate() error {
	return validator.Validate(s)
}

// *Tag_commit validator
func (s *Tag_commit) Validate() error {
	return validator.Validate(s)
}

// *Team validator
func (s *Team) Validate() error {
	return validator.Validate(s)
}

// *TeamDiscussion validator
func (s *TeamDiscussion) Validate() error {
	return validator.Validate(s)
}

// *TeamDiscussionComment validator
func (s *TeamDiscussionComment) Validate() error {
	return validator.Validate(s)
}

// *TeamFull validator
func (s *TeamFull) Validate() error {
	return validator.Validate(s)
}

// *TeamMembership validator
func (s *TeamMembership) Validate() error {
	return validator.Validate(s)
}

// *TeamProject validator
func (s *TeamProject) Validate() error {
	return validator.Validate(s)
}

// *TeamProject_permissions validator
func (s *TeamProject_permissions) Validate() error {
	return validator.Validate(s)
}

// *TeamRepository validator
func (s *TeamRepository) Validate() error {
	return validator.Validate(s)
}

// *TeamRepository_permissions validator
func (s *TeamRepository_permissions) Validate() error {
	return validator.Validate(s)
}

// *TeamRepository_template_repository validator
func (s *TeamRepository_template_repository) Validate() error {
	return validator.Validate(s)
}

// *TeamRepository_template_repository_owner validator
func (s *TeamRepository_template_repository_owner) Validate() error {
	return validator.Validate(s)
}

// *TeamRepository_template_repository_permissions validator
func (s *TeamRepository_template_repository_permissions) Validate() error {
	return validator.Validate(s)
}

// *TeamSimple validator
func (s *TeamSimple) Validate() error {
	return validator.Validate(s)
}

// *Thread validator
func (s *Thread) Validate() error {
	return validator.Validate(s)
}

// *ThreadSubscription validator
func (s *ThreadSubscription) Validate() error {
	return validator.Validate(s)
}

// *Thread_subject validator
func (s *Thread_subject) Validate() error {
	return validator.Validate(s)
}

// *Topic validator
func (s *Topic) Validate() error {
	return validator.Validate(s)
}

// *TopicSearchResultItem validator
func (s *TopicSearchResultItem) Validate() error {
	return validator.Validate(s)
}

// *TopicSearchResultItem_aliases validator
func (s *TopicSearchResultItem_aliases) Validate() error {
	return validator.Validate(s)
}

// *TopicSearchResultItem_aliases_topic_relation validator
func (s *TopicSearchResultItem_aliases_topic_relation) Validate() error {
	return validator.Validate(s)
}

// *TopicSearchResultItem_related validator
func (s *TopicSearchResultItem_related) Validate() error {
	return validator.Validate(s)
}

// *TopicSearchResultItem_related_topic_relation validator
func (s *TopicSearchResultItem_related_topic_relation) Validate() error {
	return validator.Validate(s)
}

// *Traffic validator
func (s *Traffic) Validate() error {
	return validator.Validate(s)
}

// *UserMarketplacePurchase validator
func (s *UserMarketplacePurchase) Validate() error {
	return validator.Validate(s)
}

// *UserSearchResultItem validator
func (s *UserSearchResultItem) Validate() error {
	return validator.Validate(s)
}

// *ValidationError validator
func (s *ValidationError) Validate() error {
	return validator.Validate(s)
}

// *ValidationErrorSimple validator
func (s *ValidationErrorSimple) Validate() error {
	return validator.Validate(s)
}

// *ValidationError_errors validator
func (s *ValidationError_errors) Validate() error {
	return validator.Validate(s)
}

// *Verification validator
func (s *Verification) Validate() error {
	return validator.Validate(s)
}

// *ViewTraffic validator
func (s *ViewTraffic) Validate() error {
	return validator.Validate(s)
}

// *Workflow validator
func (s *Workflow) Validate() error {
	return validator.Validate(s)
}

// *WorkflowRun validator
func (s *WorkflowRun) Validate() error {
	return validator.Validate(s)
}

// *WorkflowRunUsage validator
func (s *WorkflowRunUsage) Validate() error {
	return validator.Validate(s)
}

// *WorkflowRunUsage_billable validator
func (s *WorkflowRunUsage_billable) Validate() error {
	return validator.Validate(s)
}

// *WorkflowRunUsage_billable_MACOS validator
func (s *WorkflowRunUsage_billable_MACOS) Validate() error {
	return validator.Validate(s)
}

// *WorkflowRunUsage_billable_UBUNTU validator
func (s *WorkflowRunUsage_billable_UBUNTU) Validate() error {
	return validator.Validate(s)
}

// *WorkflowRunUsage_billable_WINDOWS validator
func (s *WorkflowRunUsage_billable_WINDOWS) Validate() error {
	return validator.Validate(s)
}

// *WorkflowUsage validator
func (s *WorkflowUsage) Validate() error {
	return validator.Validate(s)
}

// *WorkflowUsage_billable validator
func (s *WorkflowUsage_billable) Validate() error {
	return validator.Validate(s)
}

// *WorkflowUsage_billable_MACOS validator
func (s *WorkflowUsage_billable_MACOS) Validate() error {
	return validator.Validate(s)
}

// *WorkflowUsage_billable_UBUNTU validator
func (s *WorkflowUsage_billable_UBUNTU) Validate() error {
	return validator.Validate(s)
}

// *WorkflowUsage_billable_WINDOWS validator
func (s *WorkflowUsage_billable_WINDOWS) Validate() error {
	return validator.Validate(s)
}

// AllowedActions ...
type AllowedActions Str

// ActionsEnabled ...
type ActionsEnabled Str

// CodeFrequencyStat ...
type CodeFrequencyStat []int64

// CodeScanningAlertCreatedAt ...
type CodeScanningAlertCreatedAt convert.JSONTime

// CodeScanningAlertDismissedAt ...
type CodeScanningAlertDismissedAt convert.JSONTime

// CodeScanningAlertDismissedBy ...
type CodeScanningAlertDismissedBy Str

// CodeScanningAlertDismissedReason ...
type CodeScanningAlertDismissedReason Str

// CodeScanningAlertEnvironment ...
type CodeScanningAlertEnvironment Str

// CodeScanningAlertHTMLURL ...
type CodeScanningAlertHTMLURL Str

// CodeScanningAlertInstances ...
type CodeScanningAlertInstances []CodeScanningAlertInstances_obj

// CodeScanningAlertNumber ...
type CodeScanningAlertNumber int64

// CodeScanningAlertRef ...
type CodeScanningAlertRef Str

// CodeScanningAlertSetState ...
type CodeScanningAlertSetState Str

// CodeScanningAlertState ...
type CodeScanningAlertState Str

// CodeScanningAlertURL ...
type CodeScanningAlertURL Str

// CodeScanningAnalysisAnalysisKey ...
type CodeScanningAnalysisAnalysisKey Str

// CodeScanningAnalysisCommitSha ...
type CodeScanningAnalysisCommitSha Str

// CodeScanningAnalysisCreatedAt ...
type CodeScanningAnalysisCreatedAt convert.JSONTime

// CodeScanningAnalysisEnvironment ...
type CodeScanningAnalysisEnvironment Str

// CodeScanningAnalysisRef ...
type CodeScanningAnalysisRef Str

// CodeScanningAnalysisSarifFile ...
type CodeScanningAnalysisSarifFile Str

// CodeScanningAnalysisToolName ...
type CodeScanningAnalysisToolName Str

// ContentDirectory ...
type ContentDirectory []ContentDirectory_obj

// Email ...
type Email Str

// EnabledOrganizations ...
type EnabledOrganizations Str

// EnabledRepositories ...
type EnabledRepositories Str

// Integer ...
type Integer int64

// Issue_labels ...
type Issue_labels Str

// ObjectRequest_labels ...
type ObjectRequest_labels Str

// Object_labels ...
type Object_labels Str

// ScimUser_operations_value ...
type ScimUser_operations_value Str

// SearchResultTextMatches ...
type SearchResultTextMatches []SearchResultTextMatches_obj

// SelectedActionsURL ...
type SelectedActionsURL Str

// Str ...
type Str string

// ValidationError_errors_value ...
type ValidationError_errors_value Str
